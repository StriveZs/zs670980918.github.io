<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>StriveZs的博客</title>
  
  <subtitle>Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.strivezs.com/"/>
  <updated>2021-01-15T11:23:19.142Z</updated>
  <id>www.strivezs.com/</id>
  
  <author>
    <name>StriveZs</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode No.8</title>
    <link href="www.strivezs.com/2021/01/15/LeetCode%E7%AC%AC%E5%85%AB%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/15/LeetCode%E7%AC%AC%E5%85%AB%E9%A2%98/</id>
    <published>2021-01-15T11:23:19.142Z</published>
    <updated>2021-01-15T11:23:19.142Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第八题"><a href="#LeetCode第八题" class="headerlink" title="LeetCode第八题"></a>LeetCode第八题</h1><p>又是辛勤劳动的一天呢QWQ。  </p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>请你来实现一个 atoi 函数，使其能将字符串转换成整数。</p><p>首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。接下来的转化规则如下：</p><p>如果第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字字符组合起来，形成一个有符号整数。<br>假如第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成一个整数。<br>该字符串在有效的整数部分之后也可能会存在多余的字符，那么这些字符可以被忽略，它们对函数不应该造成影响。<br>假如该字符串中的第一个非空格字符不是一个有效整数字符、字符串为空或字符串仅包含空白字符时，则你的函数不需要进行转换，即无法进行有效转换。</p><p>在任何情况下，若函数不能进行有效的转换时，请返回 0 。</p><p>注意：</p><p>本题中的空白字符只包括空格字符 ‘ ‘ 。<br>假设我们的环境只能存储 32 位大小的有符号整数，那么其数值范围为 [−231,  231 − 1]。如果数值超过这个范围，请返回  231 − 1 或 −231 。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"42"</span></span><br><span class="line">输出: <span class="number">42</span></span><br><span class="line">示例 <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"   -42"</span></span><br><span class="line">输出: <span class="number">-42</span></span><br><span class="line">解释: 第一个非空白字符为 <span class="string">'-'</span>, 它是一个负号。</span><br><span class="line">     我们尽可能将负号与后面所有连续出现的数字组合起来，最后得到 <span class="number">-42</span> 。</span><br><span class="line">示例 <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"4193 with words"</span></span><br><span class="line">输出: <span class="number">4193</span></span><br><span class="line">解释: 转换截止于数字 <span class="string">'3'</span> ，因为它的下一个字符不为数字。</span><br><span class="line">示例 <span class="number">4</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"words and 987"</span></span><br><span class="line">输出: <span class="number">0</span></span><br><span class="line">解释: 第一个非空字符是 <span class="string">'w'</span>, 但它不是数字或正、负号。</span><br><span class="line">     因此无法执行有效的转换。</span><br><span class="line">示例 <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"-91283472332"</span></span><br><span class="line">输出: <span class="number">-2147483648</span></span><br><span class="line">解释: 数字 <span class="string">"-91283472332"</span> 超过 <span class="number">32</span> 位有符号整数范围。 </span><br><span class="line">     因此返回 INT_MIN (−<span class="number">231</span>) 。</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> &lt;= s.length &lt;= <span class="number">200</span></span><br><span class="line">s 由英文字母（大写和小写）、数字、<span class="string">' '</span>、<span class="string">'+'</span>、<span class="string">'-'</span> 和 <span class="string">'.'</span> 组成</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 判断是否为数字</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isNum</span><span class="params">(self,s)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> s == <span class="string">'0'</span> <span class="keyword">or</span> s == <span class="string">'1'</span> <span class="keyword">or</span> s == <span class="string">'2'</span> <span class="keyword">or</span> s == <span class="string">'3'</span> <span class="keyword">or</span> s == <span class="string">'4'</span> <span class="keyword">or</span> s == <span class="string">'5'</span> <span class="keyword">or</span> \</span><br><span class="line">        s == <span class="string">'6'</span> <span class="keyword">or</span> s == <span class="string">'7'</span> <span class="keyword">or</span> s == <span class="string">'8'</span> <span class="keyword">or</span> s == <span class="string">'9'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 丢弃开头空白字符</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deleteKong</span><span class="params">(self,s)</span>:</span></span><br><span class="line">        index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            <span class="keyword">if</span> s[i] != <span class="string">' '</span>:</span><br><span class="line">                index = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        s = s[index:]</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">myAtoi</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        s = self.deleteKong(s)</span><br><span class="line">        flag = <span class="literal">False</span> <span class="comment"># 正负标志</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">1</span> <span class="keyword">and</span> s[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">1</span> <span class="keyword">and</span> s[<span class="number">0</span>] == <span class="string">'+'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> s[<span class="number">0</span>] == <span class="string">'-'</span> <span class="keyword">or</span> s[<span class="number">0</span>] == <span class="string">'+'</span>:</span><br><span class="line">            <span class="keyword">if</span> s[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                flag = <span class="literal">False</span></span><br><span class="line">            s = s[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> self.isNum(s[<span class="number">0</span>]):</span><br><span class="line">            result = <span class="string">''</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">                <span class="keyword">if</span> self.isNum(s[i]):</span><br><span class="line">                    result += s[i]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            result = int(result)</span><br><span class="line">            <span class="keyword">if</span> result &lt; -(<span class="number">2</span>**<span class="number">31</span>) <span class="keyword">or</span> result &gt; (<span class="number">2</span>**<span class="number">31</span>)<span class="number">-1</span>:</span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    <span class="keyword">return</span> -(<span class="number">2</span>**<span class="number">31</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> (<span class="number">2</span>**<span class="number">31</span>)<span class="number">-1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">-1</span>*result</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> result</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.myAtoi(<span class="string">'2147483648'</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第八题&quot;&gt;&lt;a href=&quot;#LeetCode第八题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第八题&quot;&gt;&lt;/a&gt;LeetCode第八题&lt;/h1&gt;&lt;p&gt;又是辛勤劳动的一天呢QWQ。  &lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.7</title>
    <link href="www.strivezs.com/2021/01/14/LeetCode%E7%AC%AC%E4%B8%83%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/14/LeetCode%E7%AC%AC%E4%B8%83%E9%A2%98/</id>
    <published>2021-01-14T14:59:58.262Z</published>
    <updated>2021-01-14T14:59:58.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第七题"><a href="#LeetCode第七题" class="headerlink" title="LeetCode第七题"></a>LeetCode第七题</h1><p>今天晚上看了会直播，所以来晚了，一般不缺勤呢。过几天反向跑毒完，我回家还要坚持背英语。  </p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。</p><p>注意：</p><p>假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">123</span></span><br><span class="line">输出：<span class="number">321</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">-123</span></span><br><span class="line">输出：<span class="number">-321</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">120</span></span><br><span class="line">输出：<span class="number">21</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">0</span></span><br><span class="line">输出：<span class="number">0</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">-231</span> &lt;= x &lt;= <span class="number">231</span> - <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Python版本"><a href="#Python版本" class="headerlink" title="Python版本"></a>Python版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">            x = abs(x)</span><br><span class="line">        item = list(str(x))</span><br><span class="line">        item_reverse = item[::<span class="number">-1</span>]</span><br><span class="line">        result = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(item_reverse)):</span><br><span class="line">            result += item_reverse[i]</span><br><span class="line">        result = int(result)</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            result = <span class="number">-1</span> * result</span><br><span class="line">        <span class="keyword">if</span> result &lt; -(<span class="number">2</span>**<span class="number">31</span>) <span class="keyword">or</span> result &gt; (<span class="number">2</span>**<span class="number">31</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(<span class="number">2</span>**<span class="number">31</span>)</span><br><span class="line">    print(s.reverse(<span class="number">1534236469</span>))</span><br></pre></td></tr></table></figure><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;<span class="built_in">string</span>.h&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">int</span> reverse(<span class="built_in">int</span> x) &#123;</span><br><span class="line">        <span class="built_in">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> pop = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x != <span class="number">0</span>)&#123;</span><br><span class="line">            pop = x % <span class="number">10</span>; <span class="comment">//取出最右变得数字</span></span><br><span class="line">            x /= <span class="number">10</span>; <span class="comment">//实际上就是完成了 从 123 变成 12 并且取出 3 </span></span><br><span class="line">            <span class="keyword">if</span>(result &gt; INT_MAX / <span class="number">10</span> || (result == INT_MAX / <span class="number">10</span> &amp;&amp; pop &gt; <span class="number">7</span>))&#123;<span class="comment">//判断上限</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(result &lt; INT_MIN / <span class="number">10</span> || (result == INT_MIN / <span class="number">10</span> &amp;&amp; pop &lt; <span class="number">-8</span>))&#123;<span class="comment">//判断下限</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            result = result * <span class="number">10</span> + pop;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第七题&quot;&gt;&lt;a href=&quot;#LeetCode第七题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第七题&quot;&gt;&lt;/a&gt;LeetCode第七题&lt;/h1&gt;&lt;p&gt;今天晚上看了会直播，所以来晚了，一般不缺勤呢。过几天反向跑毒完，我回
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.6</title>
    <link href="www.strivezs.com/2021/01/13/LeetCode%E7%AC%AC%E5%85%AD%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/13/LeetCode%E7%AC%AC%E5%85%AD%E9%A2%98/</id>
    <published>2021-01-13T11:55:36.545Z</published>
    <updated>2021-01-13T11:55:36.545Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第六题</h1><p>本题的实质就是模拟，虽然AC了，但是空间复杂度有点高，时间复杂度的话就是O(len(s))主要是找不到一个合适的存储，我只能用numpy存储了，大小的话和numRow有关。</p><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。</p><p>比如输入字符串为 “PAYPALISHIRING” 行数为 3 时，排列如下：</p><p>P   A   H   N<br>A P L S I I G<br>Y   I   R<br>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：“PAHNAPLSIIGYIR”。</p><p>请你实现这个将字符串进行指定行数变换的函数：</p><p>string convert(string s, int numRows);</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"PAYPALISHIRING"</span>, numRows = <span class="number">3</span></span><br><span class="line">输出：<span class="string">"PAHNAPLSIIGYIR"</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line">输入：s = <span class="string">"PAYPALISHIRING"</span>, numRows = <span class="number">4</span></span><br><span class="line">输出：<span class="string">"PINALSIGYAHRPI"</span></span><br><span class="line">解释：</span><br><span class="line">P     I    N</span><br><span class="line">A   L S  I G</span><br><span class="line">Y A   H R</span><br><span class="line">P     I</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"A"</span>, numRows = <span class="number">1</span></span><br><span class="line">输出：<span class="string">"A"</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> &lt;= s.length &lt;= <span class="number">1000</span></span><br><span class="line">s 由英文字母（小写和大写）、',' 和 '.' 组成</span><br><span class="line"><span class="number">1</span> &lt;= numRows &lt;= <span class="number">1000</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><p>稍微给个原理图:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/O3gsTr.png" alt="figure.1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(self, s, numRows)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :type numRows: int</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        </span><br><span class="line">        list_str = list(s)</span><br><span class="line">        length = len(s)</span><br><span class="line">        <span class="keyword">if</span> numRows == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        onePart = numRows + (numRows - <span class="number">2</span>) <span class="comment"># 一个Z字形前半部分的字符个数</span></span><br><span class="line">        numPart = int(length / onePart) + <span class="number">1</span> <span class="comment"># 总共多少个part</span></span><br><span class="line">        <span class="comment">#print(list_str)</span></span><br><span class="line"></span><br><span class="line">        storeChart = np.zeros((numRows,numPart*numRows<span class="number">-1</span>),dtype=np.string_) <span class="comment"># 用来存储Z字形变换后的字符</span></span><br><span class="line">        <span class="comment">#print(storeChart)</span></span><br><span class="line">        row = <span class="number">0</span></span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):  <span class="comment"># 时间复杂度为O(len(s))</span></span><br><span class="line">            <span class="keyword">if</span> numRows == <span class="number">2</span>:  <span class="comment"># 单独处理2这种情况</span></span><br><span class="line">                <span class="keyword">if</span> i % onePart == <span class="number">0</span>:</span><br><span class="line">                    storeChart[i % onePart][row] = list_str[i]</span><br><span class="line">                <span class="keyword">elif</span> i % onePart == <span class="number">1</span>:</span><br><span class="line">                    storeChart[i % onePart][row] = list_str[i]</span><br><span class="line">                    row += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> i % onePart &lt; numRows:</span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    row += <span class="number">1</span></span><br><span class="line">                    flag = <span class="literal">False</span></span><br><span class="line">                storeChart[i % onePart][row] = list_str[i]</span><br><span class="line">            <span class="keyword">elif</span> i % onePart &gt;= numRows:</span><br><span class="line">                row += <span class="number">1</span></span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">                storeChart[onePart - i % onePart][row] = list_str[i]</span><br><span class="line">        <span class="comment">#print(storeChart)</span></span><br><span class="line">        strList = storeChart.astype(np.str)</span><br><span class="line">        result = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(strList.shape[<span class="number">0</span>]):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(strList.shape[<span class="number">1</span>]):</span><br><span class="line">                <span class="keyword">if</span> strList[i][j] != <span class="string">''</span>:</span><br><span class="line">                    result += str(strList[i][j])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.convert(<span class="string">'ABCD'</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第六题&lt;/h1&gt;
&lt;p&gt;本题的实质就是模拟，虽然AC了，但是空间复杂度有点高，时间复杂度的话就是O(len(s))主要是找不到一个合适的存储，我只能用numpy存储了，大小的话和numRow有关。&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;h
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.5</title>
    <link href="www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E4%BA%94%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E4%BA%94%E9%A2%98/</id>
    <published>2021-01-11T12:16:42.782Z</published>
    <updated>2021-01-11T12:16:42.782Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第五题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你一个字符串 s，找到 s 中最长的回文子串。</p><p></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"babad"</span></span><br><span class="line">输出：<span class="string">"bab"</span></span><br><span class="line">解释：<span class="string">"aba"</span> 同样是符合题意的答案。</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"cbbd"</span></span><br><span class="line">输出：<span class="string">"bb"</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"a"</span></span><br><span class="line">输出：<span class="string">"a"</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"ac"</span></span><br><span class="line">输出：<span class="string">"a"</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> &lt;= s.length &lt;= <span class="number">1000</span></span><br><span class="line">s 仅由数字和英文字母（大写和/或小写）组成</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="Python"><a class="header-anchor" href="#Python">¶</a>Python</h3><p>这个版本超时了，原因分析的话：应该是划分子串操作timeout了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut</span><span class="params">(self, str1)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    得到字符串的所有子串</span></span><br><span class="line"><span class="string">    :type str1: str</span></span><br><span class="line"><span class="string">    :return: list</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    results = []</span><br><span class="line">    <span class="comment"># x + 1 表示子字符串长度</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">        <span class="comment"># i 表示偏移量</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1) - x):</span><br><span class="line">            tempStr = str1[i:i + x + <span class="number">1</span>]</span><br><span class="line">            results.append(tempStr)</span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :type s: str</span></span><br><span class="line"><span class="string">    :rtype: str</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    split_res = self.cut(s)</span><br><span class="line">    length = len(split_res)</span><br><span class="line">    maxlen = <span class="number">0</span></span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">        temp = split_res[length - i - <span class="number">1</span>][::<span class="number">-1</span>] <span class="comment"># 字符串翻转</span></span><br><span class="line">        <span class="keyword">if</span> temp == split_res[length - i - <span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">if</span> len(temp) &gt; maxlen:</span><br><span class="line">                maxlen = len(temp)</span><br><span class="line">                result = split_res[length - i - <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h3 id="C"><a class="header-anchor" href="#C">¶</a>C++</h3><p>AC的C++版本</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;<span class="built_in">string</span>.h&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> longestPalindrome(<span class="built_in">string</span> s) &#123;</span><br><span class="line">        <span class="built_in">int</span> len = s.length();</span><br><span class="line">        <span class="keyword">if</span>(len == <span class="number">0</span> || len == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span> start=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> maxLen = <span class="number">1</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="built_in">int</span>&gt; &gt; ls(len,vector&lt;<span class="built_in">int</span>&gt;(len)); <span class="comment">//定义一个二维数组</span></span><br><span class="line">        <span class="comment">//初始化找一个长度为2的字符串的回文  s[i] = s[i+1]</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            ls[i][i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i &lt; len<span class="number">-1</span> &amp;&amp; s[i] == s[i+<span class="number">1</span>])&#123;</span><br><span class="line">                ls[i][i+<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">                maxLen = <span class="number">2</span>;</span><br><span class="line">                start = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//接下来处理长度大于2 小于最大长度的回文</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">3</span>;i&lt;=len;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> j=<span class="number">0</span>;j+i<span class="number">-1</span>&lt;len;j++)&#123;</span><br><span class="line">                <span class="built_in">int</span> ends = j+i<span class="number">-1</span>; <span class="comment">//终止字符位置  长度为i的字符串</span></span><br><span class="line">                <span class="keyword">if</span>(s[j] == s[ends] &amp;&amp; ls[j+<span class="number">1</span>][ends<span class="number">-1</span>] == <span class="number">1</span>)&#123; <span class="comment">//满足首位字符相同，且长度为i-1的字符串也是回文串</span></span><br><span class="line">                    ls[j][ends] = <span class="number">1</span>;</span><br><span class="line">                    start = j;</span><br><span class="line">                    maxLen = i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substr(start,maxLen);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第五题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你一个字符串 s，找到 s 中最长的回文子串。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>Python中round四舍五入成偶的问题</title>
    <link href="www.strivezs.com/2021/01/11/Python%E4%B8%ADround%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E6%88%90%E5%81%B6%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/11/Python%E4%B8%ADround%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E6%88%90%E5%81%B6%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-01-11T11:22:58.791Z</published>
    <updated>2021-01-11T11:22:58.791Z</updated>
    
    <content type="html"><![CDATA[<h1>Python中round四舍五入成偶的问题</h1><p>今天在编写代码的时候发现了一个round的小问题，我对1.5使用round()得到的是2，但是我对2.5使用round（）的时候同样也得到的是2，经过我搜索发现，python3中round（）会对1.5 2.5这类到相邻整数距离相同的数字取偶数整数，而不是按照大家正常认为的四舍五入。</p><p>在Python2和Python3中对于round()函数的取值的的区别</p><p>例：</p><ol><li>Python2中对round()函数的取值</li></ol><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">24.5</span>))</span></span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line"><span class="number">25</span></span><br></pre></td></tr></table></figure><ol start="2"><li>当Python中对同样的数进行round()函数的取值</li></ol><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">24.5</span>))</span></span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line"><span class="number">24</span></span><br></pre></td></tr></table></figure><p>在Python2中和Python3中对同一个数进行round()取值时，结果却不同</p><p>很简单，在Python2中对于round()取值就是数学概念进行四舍五入</p><p>下面是Python3中对不同数的进行round()函数的取值</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">22.5</span>))</span></span><br><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">23.5</span>))</span></span><br><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">22.51</span>))</span></span><br><span class="line"> </span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">24</span></span><br><span class="line"><span class="number">23</span></span><br></pre></td></tr></table></figure><p>当对22.5取值是舍</p><p>当对23.5取值是进</p><p>当对22.51取值是进</p><p>这样就可以证明了：</p><p>①.当被修约的值为5时，如果他前面的数为偶数且被修约数的后面没有数时则舍弃；</p><p>②.当被修约的值为5时，如果他前面的数为奇数时则进位；</p><p>③.当被修约的值为5时，如果他前面的数为偶数时且被修约数的后面还有数时，则进位。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Python中round四舍五入成偶的问题&lt;/h1&gt;
&lt;p&gt;今天在编写代码的时候发现了一个round的小问题，我对1.5使用round()得到的是2，但是我对2.5使用round（）的时候同样也得到的是2，经过我搜索发现，python3中round（）会对1.5 2.5这
      
    
    </summary>
    
    
      <category term="Python" scheme="www.strivezs.com/categories/Python/"/>
    
      <category term="问题记录" scheme="www.strivezs.com/categories/Python/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="Python" scheme="www.strivezs.com/tags/Python/"/>
    
      <category term="round" scheme="www.strivezs.com/tags/round/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.4</title>
    <link href="www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E5%9B%9B%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E5%9B%9B%E9%A2%98/</id>
    <published>2021-01-11T11:19:08.237Z</published>
    <updated>2021-01-11T11:19:08.237Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode 第四题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的中位数。</p><p>进阶：你能设计一个时间复杂度为 O(log (m+n)) 的算法解决此问题吗？</p><p></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">1</span>,<span class="number">3</span>], nums2 = [<span class="number">2</span>]</span><br><span class="line">输出：<span class="number">2.00000</span></span><br><span class="line">解释：合并数组 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] ，中位数 <span class="number">2</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">1</span>,<span class="number">2</span>], nums2 = [<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">输出：<span class="number">2.50000</span></span><br><span class="line">解释：合并数组 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] ，中位数 (<span class="number">2</span> + <span class="number">3</span>) / <span class="number">2</span> = <span class="number">2.5</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">0</span>,<span class="number">0</span>], nums2 = [<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">输出：<span class="number">0.00000</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [], nums2 = [<span class="number">1</span>]</span><br><span class="line">输出：<span class="number">1.00000</span></span><br><span class="line">示例 <span class="number">5</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">2</span>], nums2 = []</span><br><span class="line">输出：<span class="number">2.00000</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line">nums1.length == m</span><br><span class="line">nums2.length == n</span><br><span class="line"><span class="number">0</span> &lt;= m &lt;= <span class="number">1000</span></span><br><span class="line"><span class="number">0</span> &lt;= n &lt;= <span class="number">1000</span></span><br><span class="line"><span class="number">1</span> &lt;= m + n &lt;= <span class="number">2000</span></span><br><span class="line"><span class="number">-106</span> &lt;= nums1[i], nums2[i] &lt;= <span class="number">106</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="Python版本"><a class="header-anchor" href="#Python版本">¶</a>Python版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMedianSortedArrays</span><span class="params">(self, nums1, nums2)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums1: List[int]</span></span><br><span class="line"><span class="string">        :type nums2: List[int]</span></span><br><span class="line"><span class="string">        :rtype: float</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment">#print(nums1)</span></span><br><span class="line">        nums1.extend(nums2)</span><br><span class="line">        <span class="comment">#print(nums1)</span></span><br><span class="line">        nums1.sort()</span><br><span class="line">        length = len(nums1)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> length == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> nums1[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">elif</span> length == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> length % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            index1 = int(length / <span class="number">2</span>)</span><br><span class="line">            index2 = index1 - <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> (nums1[index1] + nums1[index2]) / <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> length % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">            index = int((length / <span class="number">2</span>))</span><br><span class="line">            <span class="keyword">return</span> nums1[index]</span><br></pre></td></tr></table></figure><h3 id="C"><a class="header-anchor" href="#C">¶</a>C++</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; <span class="built_in">list</span>;</span><br><span class="line">        <span class="keyword">double</span> result=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums1.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="built_in">list</span>.push_back(nums1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums2.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="built_in">list</span>.push_back(nums2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(<span class="built_in">list</span>.<span class="built_in">begin</span>(),<span class="built_in">list</span>.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">list</span>.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(len%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> index1 = len/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> index2 = index1 + <span class="number">1</span>;</span><br><span class="line">            result = (<span class="built_in">list</span>[index1<span class="number">-1</span>] + <span class="built_in">list</span>[index2<span class="number">-1</span>]) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            result = <span class="built_in">list</span>[<span class="built_in">ceil</span>(<span class="keyword">float</span>(len)/<span class="number">2</span>)<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode 第四题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.3</title>
    <link href="www.strivezs.com/2021/01/10/LeetCode%E7%AC%AC%E4%B8%89%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/10/LeetCode%E7%AC%AC%E4%B8%89%E9%A2%98/</id>
    <published>2021-01-10T12:01:44.418Z</published>
    <updated>2021-01-10T12:01:44.418Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第三题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">示例 1:</span><br><span class="line"></span><br><span class="line"><span class="section">输入: s = "abcabcbb"</span></span><br><span class="line"><span class="section">输出: 3 </span></span><br><span class="line"><span class="section">解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。</span></span><br><span class="line">示例 2:</span><br><span class="line"></span><br><span class="line"><span class="section">输入: s = "bbbbb"</span></span><br><span class="line"><span class="section">输出: 1</span></span><br><span class="line"><span class="section">解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。</span></span><br><span class="line">示例 3:</span><br><span class="line"></span><br><span class="line"><span class="section">输入: s = "pwwkew"</span></span><br><span class="line"><span class="section">输出: 3</span></span><br><span class="line"><span class="section">解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。</span></span><br><span class="line">     请注意，你的答案必须是 子串 的长度，<span class="string">"pwke"</span> 是一个子序列，不是子串。</span><br><span class="line">示例 4:</span><br><span class="line"></span><br><span class="line"><span class="section">输入: s = ""</span></span><br><span class="line"><span class="section">输出: 0</span></span><br></pre></td></tr></table></figure><p>提示：</p><p>0 &lt;= s.length &lt;= 5 * 104<br>s 由英文字母、数字、符号和空格组成</p><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="Python版本"><a class="header-anchor" href="#Python版本">¶</a>Python版本</h3><h4 id="第一版"><a class="header-anchor" href="#第一版">¶</a>第一版</h4><p>感觉自己严重缺乏OJ练习了，思想已经逐渐僵化，这一版直接超时了，虽然能做出来，但是不AC有卵用呢？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">noRepeat</span><span class="params">(self,str1)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        判断字符串是否存在重复字符</span></span><br><span class="line"><span class="string">        :param str1:</span></span><br><span class="line"><span class="string">        :return: Bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">            l1 = re.findall(str1[i],str1)</span><br><span class="line">            <span class="keyword">if</span> len(l1) != <span class="number">1</span>:</span><br><span class="line">                flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cut</span><span class="params">(self, str1)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        得到字符串的所有子串</span></span><br><span class="line"><span class="string">        :type str1: str</span></span><br><span class="line"><span class="string">        :return: list</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        results = []</span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="comment"># x + 1 表示子字符串长度</span></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">            <span class="comment"># i 表示偏移量</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1) - x):</span><br><span class="line">                tempStr = str1[i:i + x + <span class="number">1</span>]</span><br><span class="line">                <span class="keyword">if</span> self.noRepeat(tempStr):</span><br><span class="line">                    results.append(tempStr)</span><br><span class="line">        <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># print(self.cut(s))</span></span><br><span class="line">        split_str = self.cut(s)</span><br><span class="line">        maxLen = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(split_str)):</span><br><span class="line">            pattern = split_str[i]</span><br><span class="line">            <span class="keyword">if</span> re.search(pattern,s) != <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> len(pattern) &gt; maxLen:</span><br><span class="line">                    maxLen = len(pattern)</span><br><span class="line">        <span class="keyword">return</span> maxLen</span><br></pre></td></tr></table></figure><h4 id="第二版"><a class="header-anchor" href="#第二版">¶</a>第二版</h4><p>这一版是看了一下题解自己写的, 思想还是很简单的，是我太菜了。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="symbol">Solution:</span></span><br><span class="line">    <span class="symbol">def</span> <span class="symbol">lengthOfLongestSubstring</span>(<span class="symbol">self, <span class="symbol">s</span></span>):</span><br><span class="line">        """</span><br><span class="line">        :<span class="symbol">type</span> <span class="symbol">s: <span class="symbol">str</span></span></span><br><span class="line">        :<span class="symbol">rtype: <span class="symbol">int</span></span></span><br><span class="line">        """</span><br><span class="line">        <span class="symbol">st</span> = &#123;&#125;</span><br><span class="line">        i, ans = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            <span class="keyword">if</span> s[j] <span class="keyword">in</span> st:</span><br><span class="line">                i = max(st[s[j]], i)</span><br><span class="line">            ans = max(ans, j - i + <span class="number">1</span>)</span><br><span class="line">            st[s[j]] = j + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br></pre></td></tr></table></figure><h3 id="C艹版本"><a class="header-anchor" href="#C艹版本">¶</a>C艹版本</h3><p>主要用的是vector来进行操作的, C++ 我都快忘光了，害 科研狗的噩梦。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> maxLen=<span class="number">0</span>,len=<span class="number">0</span>;;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; charV;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(num &lt; s.length())&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">find</span>(charV.<span class="built_in">begin</span>(),charV.<span class="built_in">end</span>(),s[i]) == charV.<span class="built_in">end</span>() &amp;&amp; i&lt;s.length())&#123;</span><br><span class="line">                charV.push_back(s[i]);</span><br><span class="line">                len++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                num++;</span><br><span class="line">                i = num;</span><br><span class="line">                charV.<span class="built_in">clear</span>();</span><br><span class="line">                charV.push_back(s[i]);</span><br><span class="line">                <span class="keyword">if</span>(maxLen &lt; len)&#123;</span><br><span class="line">                    maxLen = len;</span><br><span class="line">                &#125;</span><br><span class="line">                len = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(maxLen &lt; len)&#123;</span><br><span class="line">            maxLen = len;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxLen;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第三题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.2</title>
    <link href="www.strivezs.com/2021/01/08/LeetCode%E7%AC%AC%E4%BA%8C%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/08/LeetCode%E7%AC%AC%E4%BA%8C%E9%A2%98/</id>
    <published>2021-01-08T10:40:20.768Z</published>
    <updated>2021-01-08T10:40:20.768Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第2题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。</p><p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p><p>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p>示例1：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/ba4SnQ.jpg" alt="figure.1"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>], l2 = [<span class="number">5</span>,<span class="number">6</span>,<span class="number">4</span>]</span><br><span class="line">输出：[<span class="number">7</span>,<span class="number">0</span>,<span class="number">8</span>]</span><br><span class="line">解释：<span class="number">342</span> + <span class="number">465</span> = <span class="number">807.</span></span><br><span class="line"></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：l1 = [<span class="number">0</span>], l2 = [<span class="number">0</span>]</span><br><span class="line">输出：[<span class="number">0</span>]</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：l1 = [<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>], l2 = [<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>]</span><br><span class="line">输出：[<span class="number">8</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><p>代码这里使用的list格式，对于题目要求的格式只需要进行二者的格式转换就可以了</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">class Solution(object):</span><br><span class="line">    def addTwoNumbers(self, l1, l2):</span><br><span class="line">        <span class="string">""</span><span class="comment">"</span></span><br><span class="line">        :<span class="built_in">type</span> l1: List</span><br><span class="line">        :<span class="built_in">type</span> l2: List</span><br><span class="line">        :rtype: List</span><br><span class="line">        <span class="string">""</span><span class="comment">"</span></span><br><span class="line">        </span><br><span class="line">        l1 = [l1[<span class="built_in">len</span>(l1)-i-<span class="number">1</span>] <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(l1))]</span><br><span class="line">        str1 = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(l1)):</span><br><span class="line">            str1 = str1 + str(l1[i])</span><br><span class="line">        # <span class="keyword">print</span>(<span class="keyword">int</span>(str1))</span><br><span class="line">        l2 = [l2[<span class="built_in">len</span>(l2) - i - <span class="number">1</span>] <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(l2))]</span><br><span class="line">        str2 = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(l2)):</span><br><span class="line">            str2 = str2 + str(l2[i])</span><br><span class="line">        # <span class="keyword">print</span>(<span class="keyword">int</span>(str1))</span><br><span class="line">        result = <span class="keyword">list</span>(str(<span class="keyword">int</span>(str1) + <span class="keyword">int</span>(str2)))</span><br><span class="line">        result_list = []</span><br><span class="line">        #print(result)</span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">            result_list.<span class="keyword">append</span>(<span class="keyword">int</span>(result[<span class="built_in">len</span>(result) - i - <span class="number">1</span>]))</span><br><span class="line">        #print(result_list)</span><br><span class="line">        <span class="keyword">return</span> result_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    s.addTwoNumbers([<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>],[<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第2题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.1</title>
    <link href="www.strivezs.com/2021/01/08/LeetCode%E7%AC%AC1%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/08/LeetCode%E7%AC%AC1%E9%A2%98/</id>
    <published>2021-01-08T10:40:17.268Z</published>
    <updated>2021-01-08T10:40:17.268Z</updated>
    
    <content type="html"><![CDATA[<p>很久没有更新博客了之前一直在忙于考试，最近终于考完了，以后会慢慢坚持更新博客的。对于OJ这个题我计划是每天做一道两道，也是为了以后毕业可以在面试的时候有一个加分项吧，同样也可以锻炼一下自己的编程能力西西。  我觉得对于我来说就是贵在坚持，毕竟在果壳的科研路上也才刚刚起步，日久天长，在搞好科研的同时，可以在在其他方面提升一下自己。</p><h1>LeetCode第1题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</p><p>你可以按任意顺序返回答案。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">2</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">15</span>], target = <span class="number">9</span></span><br><span class="line">输出：[<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">解释：因为 nums[<span class="number">0</span>] + nums[<span class="number">1</span>] == <span class="number">9</span> ，返回 [<span class="number">0</span>, <span class="number">1</span>] 。</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>], target = <span class="number">6</span></span><br><span class="line">输出：[<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">3</span>,<span class="number">3</span>], target = <span class="number">6</span></span><br><span class="line">输出：[<span class="number">0</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        result_index = []</span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        length = len(nums)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">            j = i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> j &lt; length:</span><br><span class="line">                <span class="keyword">if</span> nums[i] + nums[j] == target:</span><br><span class="line">                    flag = <span class="literal">True</span></span><br><span class="line">                    result_index.append(i)</span><br><span class="line">                    result_index.append(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                j = j + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> flag:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> result_index</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    nums = [<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>]</span><br><span class="line">    target = <span class="number">6</span></span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.twoSum(nums,target))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很久没有更新博客了之前一直在忙于考试，最近终于考完了，以后会慢慢坚持更新博客的。对于OJ这个题我计划是每天做一道两道，也是为了以后毕业可以在面试的时候有一个加分项吧，同样也可以锻炼一下自己的编程能力西西。  我觉得对于我来说就是贵在坚持，毕竟在果壳的科研路上也才刚刚起步，日
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>Resolution 归结原理</title>
    <link href="www.strivezs.com/2020/11/15/Resolution%20%E5%BD%92%E7%BB%93%E5%8E%9F%E7%90%86/"/>
    <id>www.strivezs.com/2020/11/15/Resolution%20%E5%BD%92%E7%BB%93%E5%8E%9F%E7%90%86/</id>
    <published>2020-11-15T04:56:45.096Z</published>
    <updated>2020-11-15T04:56:45.096Z</updated>
    
    <content type="html"><![CDATA[<h1>Resolution 归结原理</h1><h2 id="和取范式"><a class="header-anchor" href="#和取范式">¶</a>和取范式</h2><p>满足一种特殊形式的sentences，conjunction of disjunctions of literals(文字)，一个原子命题的符号A或者他前面加上一个 <code>$\neg A $</code>都称为<strong>文字</strong>。<br>disjunction of literals形式如:均用析取符号<code>$\vee$</code>连接，比如<code>$ A\vee B \vee C $</code><br>conjunction of disjunction of literals(和取范式): 多个disjunction of literals用合取符号连接<code>$\wedge</code>，比如:<code>$(A\vee B\vee C)\wedge (D\vee \neg E)$</code><br>上面和的和取范式称为CNF。</p><p>语义等价<code>$\equiv$</code> 表示两个sentences可以互相转换(语义等价)，比如<code>$A \equiv B$</code>, 可以参考knowledge 1中提供的语义等价公式表来进行转换。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/wquYOk.png" alt="figure.1"></p><p>任何范式都是可以转换其他语义等价的合取范式。<br>将knowledge base中的任意一个sentence转换为一个CNF(通过语义等价)，然后将合取去掉，分成一个个disjunction of literals，将分拆开的DOL(disjunction of literals简写)组成一个新的knowledge base。这样将一个原来的一个knowledge base转换为了一个新的 knowledge base(KB简写)。<br>即<code>$KB \equiv KB' $</code></p><h2 id="归结"><a class="header-anchor" href="#归结">¶</a>归结</h2><p><code>$A, \neg A $</code>称为互补文字.</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/hUS3vR.png" alt="figure.2"></p><p>若<code>$ l_{i} $</code>和<code>$ m_{j} $</code>为互补文字，则可以把<code>$ l_{1}\vee l_{i}, m_{j}\vee m_{1} $</code>使用归结原理可以将<code>$ l_{i} $</code>和<code>$ m_{j} $</code>去掉可以化简为<code>$l_{1}\vee m_{1} $</code>从上述的式子中去掉.(<strong>归结规则</strong>)<br>每一次归结只能拿一对来进行归结，然后下一次还可以拿另外一对进行归结.</p><p>对于一个KB可以将使用等价规则将每一个sentence转换为和取范式，然后再将和取范式转化为一个个全是析取的式子(DOL)组成一个新的KB’,然后对于KB’中的DOL进行归结可以得到一个新的DOL，加入到KB’中。</p><h2 id="归结例子"><a class="header-anchor" href="#归结例子">¶</a>归结例子</h2><p><img src="https://gitee.com/zyp521/upload_image/raw/master/cHfQRp.png" alt="figure.3"></p><p><code>$S={KB,\neg \alpha} $</code>, 我们称S为Resolution closure</p><p><strong>具体流程</strong>:将alpha变为<code>$\neg \alpha $</code>然后加入到KB(通过语义等价转换为一个和取范式然后生成一个KB’)中组成一个新的集合KB’，然后在这基础上进行归结, 由于归结是有限,总会有停止情况，如果最后能够归结出一个空子句则表示<code>$KB\models \alpha $</code>，对于上述的归结，每归结一次将生成的句子放到S中，然后直到停止之后，得到的就是RC(S)，如果要证明<code>$KB\models \alpha $</code>，则RC(S)中一定存在一个空语句。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/xL4Mkd.png" alt="figure.4"></p><p>上述过程证明了规则是可靠(sound)的。</p><p>S(是KB和<code>$\neg \alpha$</code>)是永假的，则表示不存在一个真值使得每一个sentences为真，若S为永假，则可以推出RC(S)中包含一个空语句。</p><p>完备性可靠性得证。</p><h2 id="A-Search"><a class="header-anchor" href="#A-Search">¶</a>A* Search</h2><p>设计一个算法，任意给一个KB能否推出a。</p><ul><li>初始状态<code>${KB,\neg a}$</code></li><li>找两个子句归结得到一个新的<code>${KB,\neg a,new sentences}$</code>（可以分成很多种情况，类似一个树划分为无数个节点）</li><li>然后进行继续划分节点搜索</li><li>直到首次到达终止状态</li></ul><h2 id="Horn-and-Definite-Clauses"><a class="header-anchor" href="#Horn-and-Definite-Clauses">¶</a>Horn and Definite Clauses</h2><ul><li>正文字，负文字（带否符号的）</li><li>Defineite clauses: 很多个文字的析取，而且这些文字中有且仅有一个是正的</li><li>Horn Clauses： 很多文字的析取，至多有一个正的，也可以全是负的</li><li>两个Horn Clauses进行归结得到的Clauses一定是一个Hron Clauses</li><li>析取为disjunction，合取为conjunction</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Resolution 归结原理&lt;/h1&gt;
&lt;h2 id=&quot;和取范式&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#和取范式&quot;&gt;¶&lt;/a&gt;和取范式&lt;/h2&gt;
&lt;p&gt;满足一种特殊形式的sentences，conjunction of disjunction
      
    
    </summary>
    
    
      <category term="高级人工智能" scheme="www.strivezs.com/categories/%E9%AB%98%E7%BA%A7%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
      <category term="知识点" scheme="www.strivezs.com/categories/%E9%AB%98%E7%BA%A7%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="Resolution" scheme="www.strivezs.com/tags/Resolution/"/>
    
  </entry>
  
  <entry>
    <title>Cliclick 简单实用</title>
    <link href="www.strivezs.com/2020/11/02/Cliclick%20%E7%AE%80%E5%8D%95%E5%AE%9E%E7%94%A8/"/>
    <id>www.strivezs.com/2020/11/02/Cliclick%20%E7%AE%80%E5%8D%95%E5%AE%9E%E7%94%A8/</id>
    <published>2020-11-02T08:56:22.471Z</published>
    <updated>2020-11-02T08:56:22.471Z</updated>
    
    <content type="html"><![CDATA[<h1>Cliclick 简单实用</h1><p>好久没发东西，最近课程实在是太多了，太忙了。忙晕了害<br>最近需要用到模拟鼠标单击的东西，因此找了找感觉这个还可以简单易用，介绍一下。</p><h2 id="安装"><a class="header-anchor" href="#安装">¶</a>安装</h2><h3 id="Homebrew"><a class="header-anchor" href="#Homebrew">¶</a>Homebrew</h3><p>Homebrew包管理器 : brew install cliclick</p><h3 id="官网下载"><a class="header-anchor" href="#官网下载">¶</a>官网下载</h3><p>也可以直接去官网下载安装包，进行下载安装包:<br><a href="https://www.bluem.net/en/projects/cliclick/">https://www.bluem.net/en/projects/cliclick/</a></p><h2 id="简单使用"><a class="header-anchor" href="#简单使用">¶</a>简单使用</h2><p>打开终端，进入cliclick所在文件夹下，输入：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./cliclick</span> -h</span><br></pre></td></tr></table></figure><p>可以查看帮助。</p><h3 id="打印当前鼠标的位置坐标"><a class="header-anchor" href="#打印当前鼠标的位置坐标">¶</a>打印当前鼠标的位置坐标</h3><p>注意鼠标要事先放在你想要知道坐标的位置。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./cliclick</span> p</span><br></pre></td></tr></table></figure><p>就可以得到一个坐标，</p><h3 id="执行单击事件"><a class="header-anchor" href="#执行单击事件">¶</a>执行单击事件</h3><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cliclick c:<span class="symbol">x</span>,<span class="symbol">y</span> 其中<span class="symbol">x</span>和<span class="symbol">y</span>分别为横坐标和纵坐标</span><br></pre></td></tr></table></figure><p>在命令行输入该命令，鼠标就会自动平移过去执行单击事件了。</p><h2 id="示例"><a class="header-anchor" href="#示例">¶</a>示例:</h2><p>以下是我用python执行命令行来实现的固定位置的单击操作：，这样做的好处是可以重复的执行单击操作。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">import</span> <span class="variable">os</span></span><br><span class="line"><span class="variable">import</span> <span class="variable">time</span></span><br><span class="line"></span><br><span class="line"><span class="variable">cmd1</span> = <span class="string">"./cliclick c:789,867"</span></span><br><span class="line"><span class="variable">cmd2</span> = <span class="string">"./cliclick c:669,792"</span></span><br><span class="line"><span class="variable">for</span> <span class="variable">i</span> <span class="variable"><span class="keyword">in</span></span> <span class="function"><span class="title">range</span>(<span class="number">1000</span>):</span></span><br><span class="line"><span class="function">    <span class="variable">mess1</span> = <span class="variable">os.system</span>(<span class="variable">cmd1</span>)</span></span><br><span class="line">    <span class="function"><span class="title">print</span>(<span class="variable">mess1</span>)</span></span><br><span class="line">    <span class="variable">time.sleep</span>(<span class="number">10</span>)</span><br><span class="line">    <span class="variable">mess2</span> = <span class="variable">os.system</span>(<span class="variable">cmd2</span>)</span><br><span class="line">    <span class="function"><span class="title">print</span>(<span class="variable">mess2</span>)</span></span><br><span class="line">    <span class="function"><span class="title">print</span>(<span class="string">'----'</span> + <span class="title">str</span>(<span class="variable">i</span>+<span class="number">1</span>) + <span class="string">'------'</span>)</span></span><br><span class="line">    <span class="variable">time.sleep</span>(<span class="number">100</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Cliclick 简单实用&lt;/h1&gt;
&lt;p&gt;好久没发东西，最近课程实在是太多了，太忙了。忙晕了害&lt;br&gt;
最近需要用到模拟鼠标单击的东西，因此找了找感觉这个还可以简单易用，介绍一下。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a class=&quot;header-anchor&quot; hre
      
    
    </summary>
    
    
      <category term="功能" scheme="www.strivezs.com/categories/%E5%8A%9F%E8%83%BD/"/>
    
      <category term="Python" scheme="www.strivezs.com/categories/%E5%8A%9F%E8%83%BD/Python/"/>
    
    
      <category term="Python" scheme="www.strivezs.com/tags/Python/"/>
    
      <category term="鼠标单击" scheme="www.strivezs.com/tags/%E9%BC%A0%E6%A0%87%E5%8D%95%E5%87%BB/"/>
    
      <category term="Cliclick" scheme="www.strivezs.com/tags/Cliclick/"/>
    
  </entry>
  
  <entry>
    <title>Focal Loss</title>
    <link href="www.strivezs.com/2020/10/19/Focal%20Loss/"/>
    <id>www.strivezs.com/2020/10/19/Focal%20Loss/</id>
    <published>2020-10-19T09:21:29.493Z</published>
    <updated>2020-10-19T09:21:29.493Z</updated>
    
    <content type="html"><![CDATA[<h1>Focal Loss</h1><h2 id="介绍"><a class="header-anchor" href="#介绍">¶</a>介绍</h2><p>本质上讲，Focal Loss就是一个解决<strong>分类问题中类别不平衡、分类难度差异</strong>的一个Loss。该损失函数降低了大量的简单的负样本在训练中所占的权重。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/CycFSY.jpg" alt="figure.1"></p><p>CE为交叉熵Loss，而FL为Focal Loss</p><h2 id="Focal-Loss——二分类"><a class="header-anchor" href="#Focal-Loss——二分类">¶</a>Focal Loss——二分类</h2><p>Focal Loss的形式(没有引入权值<code>$\alpha$</code> )是:</p><p>$$L_{fl}=\left{\begin{matrix}-(1-\hat{y})^{\gamma}log: \hat{y},y=1 \ -\hat{y}^{\gamma}log:(1-\hat{y}),y=0 \end{matrix}\right.$$</p><p>对于该式子 <code>$\hat{y}$</code>为预测值，而y为真实标签, <code>$\gamma$</code>的作用就是调节权重曲线的陡度。<br><code>$L_{fl}$</code>实际上已经包含了对不均衡样本的解决办法，比如：负样本远比正样本多时，模型肯定会倾向于样本数目多的负类，这是如果负类的<code>$\hat{y}^{\gamma}$</code>比较小，而正类的<code>$(1-\hat{y})^{\gamma}$</code>比较大时，模型就会集中注意力关注正样本。</p><p>我们已知<code>$1-\sigma(x)=\sigma(-x)$</code>且<code>$\hat{y}=\sigma{x}$</code> 因此对上面的式子我们可以变换得到:</p><p><code>$ L_{fl}=\left\{\begin{matrix}-\sigma^{\gamma}(-x)log\:\sigma{x},y=1 \\ -\sigma^{\gamma}{x}log\:\sigma(-x),y=0 \end{matrix}\right. $</code></p><p>同时，可以引入一个权重调整<code>$\alpha$</code>， 会对结果有微小的提升。</p><p><code>$ L_{fl}=\left\{\begin{matrix}-\alpha\sigma^{\gamma}(-x)log\:\sigma{x},y=1 \\ -(1-\alpha)\sigma^{\gamma}{x}log\:\sigma(-x),y=0 \end{matrix}\right. $</code></p><p>在他的文章中，经过一系列调参得到了<code>$\alpha=0.25,\gamma=2$</code>对于他的模型来说效果是最好的。如果需要对需要对<code>$\alpha$</code>进行选择的话，需要使用大的训练样本和算力进行调参。如果要求不太高的话，可以把<code>$\alpha$</code>设置为0.5即可。</p><p>简单说一下这里如果是我进行调参的话，我会使用控制变量法，设定一个<code>$\alpha$</code>的衰减系数，然后给定一个初始的参数值进行训练，每经过一次完整的训练则将这个α对应的准确率记录下来，经过n次衰减后，对比记录得到的结果进行参数alpha的选择。</p><h2 id="Focal-Loss——多分类"><a class="header-anchor" href="#Focal-Loss——多分类">¶</a>Focal Loss——多分类</h2><p>Focal Loss在多分类的形式可以根据二分类的形式得到:<br><code>$ L_{fl}=-(1-\hat{y})^{\gamma}log\:\hat{y}_{t} $</code></p><p>其中<code>$\hat{y}_{t}$</code>为目标的的预测值，一般这个值是经过softmax之后结果。</p><p>如果我们引入权重值<code>$\alpha$</code>之后的样子是:</p><p><code>$ L_{fl}=-\alpha_{t}(1-\hat{y})^{\gamma}log\:\hat{y}_{t} $</code></p><p>其中每个类别都有一个对应的<code>$\alpha_{t}$</code>，并且保证<code>$\sum_{t=1}^{n}\alpha_{t}=1$</code>, 即所有类别的α之和为1.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Focal Loss&lt;/h1&gt;
&lt;h2 id=&quot;介绍&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#介绍&quot;&gt;¶&lt;/a&gt;介绍&lt;/h2&gt;
&lt;p&gt;本质上讲，Focal Loss就是一个解决&lt;strong&gt;分类问题中类别不平衡、分类难度差异&lt;/strong&gt;的
      
    
    </summary>
    
    
      <category term="Loss" scheme="www.strivezs.com/categories/Loss/"/>
    
      <category term="DL" scheme="www.strivezs.com/categories/Loss/DL/"/>
    
    
      <category term="Focal Loss" scheme="www.strivezs.com/tags/Focal-Loss/"/>
    
  </entry>
  
  <entry>
    <title>Mac+Sublime+Latex+Skim配置latex编辑环境</title>
    <link href="www.strivezs.com/2020/10/07/Mac+Sublime+Latex+Skim%E9%85%8D%E7%BD%AElatex%E7%BC%96%E8%BE%91%E7%8E%AF%E5%A2%83/"/>
    <id>www.strivezs.com/2020/10/07/Mac+Sublime+Latex+Skim%E9%85%8D%E7%BD%AElatex%E7%BC%96%E8%BE%91%E7%8E%AF%E5%A2%83/</id>
    <published>2020-10-07T03:32:27.328Z</published>
    <updated>2020-10-07T03:32:27.328Z</updated>
    
    <content type="html"><![CDATA[<h1>Sublime+Latex+Skim配置latex编辑环境</h1><h2 id="安装步骤"><a class="header-anchor" href="#安装步骤">¶</a>安装步骤</h2><h3 id="安装Sublime-Text"><a class="header-anchor" href="#安装Sublime-Text">¶</a>安装Sublime Text</h3><p>首先需要安装Sublime Text 2/3和Package Control，这个有大把的帖子。</p><h3 id="安装MacTex"><a class="header-anchor" href="#安装MacTex">¶</a>安装MacTex</h3><p>MacTex现在是一个2G+的大包子，其实里面很多东西我们不需要，所以本着节约精神，我们安装MacTex_Basic包就行了，现在的版本大概是100M以内。这个安装也是傻瓜的。</p><h3 id="配置"><a class="header-anchor" href="#配置">¶</a>配置</h3><p>在Sublime Text里Command+Shift+P调出命令窗口，输入Install，之后选择LaTexTools，网络OK的话，很快就完成了插件安装。</p><p>LaTexTools插件会在编译你的Tex文件后，调用Skim这个PDF阅读器打开编译出的PDF文件，因此你还需要安装Skim.</p><h4 id="配置Skim"><a class="header-anchor" href="#配置Skim">¶</a>配置Skim</h4><p>运行一下Skim，进入偏好设置——同步，在PDF-Tex同步支持那里选择自定义，输入 <strong>/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl</strong> 第二行不用动。这样，当你在Sublime Text里修改tex文件时，Skim预览也会相应变更。</p><h3 id="测试"><a class="header-anchor" href="#测试">¶</a>测试</h3><p>完成上面所有步骤，其实就已经搭建完成基本环境。创建一个test.tex文档，保存一下以后，Sublime Text会自动套用LaTex语法显示和编译。贴上我后面附的测试代码，一般来说Command+B应该可能会报fontspec错误；如果能正常编译，则会调用Skim显示一个PDF文档了。只是中间的中文不见了。</p><h3 id="中文环境"><a class="header-anchor" href="#中文环境">¶</a>中文环境</h3><p>让我们最后来修改编译和中文环境：<br>打开终端，运行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo tlmgr <span class="keyword">update</span> <span class="comment">--self</span></span><br><span class="line">sudo tlmgr <span class="keyword">install</span> latexmk</span><br></pre></td></tr></table></figure><p>在ST里打开LaTeXTools.sublime-settings（也就是LaTeXTools的用户设置</p><p>如果你是从旧版本升级上来或者担心这个配置文件出现问题，可以依次点击Preferences——Package Settings——LaTeXTools——Reconfigure LaTeXTools and migrate settings重建配置文件），在builder-settings下面新增两项配置：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"program"</span> : <span class="string">"xelatex"</span>,</span><br><span class="line"><span class="string">"command"</span> : [<span class="string">"latexmk"</span>, <span class="string">"-cd"</span>, <span class="string">"-e"</span>, <span class="string">"$pdflatex = 'xelatex -interaction=nonstopmode -synctex=1 %S %O'"</span>, <span class="string">"-f"</span>, <span class="string">"-pdf"</span>],</span><br></pre></td></tr></table></figure><p>另外注意之前应该有&quot;builder&quot;: “default”（或直接设置为空或”traditional”）。</p><p>保存配置文件后关闭，重新编译一下，中文正常啦！</p><h4 id="简单的中文设置方法"><a class="header-anchor" href="#简单的中文设置方法">¶</a>简单的中文设置方法</h4><p>仅需要将在tex文件前面添加上如下代码即可：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%!TEX program = xelatex</span></span><br><span class="line"><span class="comment">%!TEX TS-program = xelatex</span></span><br><span class="line"><span class="comment">%!TEX encoding = UTF-8 Unicode</span></span><br></pre></td></tr></table></figure><p>以及添加 ctex包</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">[UTF8]</span><span class="string">&#123;ctex&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="总结"><a class="header-anchor" href="#总结">¶</a>总结</h2><p>LaTeXTools默认调用Skim来打开生成的PDF文件，如果你更喜欢使用OS X自带的“预览”，现在可以直接在用户设置中增加：<br>“viewer”: “preview”,<br>目前还不支持其他PDF工具。</p><p>附上我的配置文件：<a href="https://pan.baidu.com/s/1pKGYHfX">https://pan.baidu.com/s/1pKGYHfX</a> 密码：b27u</p><p>测试代码</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">documentclass</span><span class="string">&#123;article&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;xeCJK, fontspec, xunicode, xltxtra&#125;</span></span>  </span><br><span class="line"><span class="tag">\<span class="name">setCJKmainfont</span><span class="string">&#123;Hiragino Sans GB&#125;</span></span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">title</span><span class="string">&#123;Title&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">author</span><span class="string">&#123;&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;document&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">maketitle</span><span class="string">&#123;&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">section</span><span class="string">&#123;Introduction&#125;</span></span></span><br><span class="line"></span><br><span class="line">This is where you will write your content. 在这里写上内容。</span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;document&#125;</span></span></span><br></pre></td></tr></table></figure><p>LATEX的其他选择<br>如果觉得修改设置看起来很复杂，可以在每篇文档前增加%!TEX program = xelatex，这会强制使用xelatex，也是解决中文的一个方法。</p><p>如果只是偶尔需要输入公式，这里介绍一个在线的LaTex公式编辑器  <a href="http://www.codecogs.com/latex/eqneditor.php">http://www.codecogs.com/latex/eqneditor.php</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Sublime+Latex+Skim配置latex编辑环境&lt;/h1&gt;
&lt;h2 id=&quot;安装步骤&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#安装步骤&quot;&gt;¶&lt;/a&gt;安装步骤&lt;/h2&gt;
&lt;h3 id=&quot;安装Sublime-Text&quot;&gt;&lt;a class=&quot;
      
    
    </summary>
    
    
      <category term="MAC" scheme="www.strivezs.com/categories/MAC/"/>
    
      <category term="LaTex" scheme="www.strivezs.com/categories/MAC/LaTex/"/>
    
    
      <category term="MAC" scheme="www.strivezs.com/tags/MAC/"/>
    
      <category term="Sublime" scheme="www.strivezs.com/tags/Sublime/"/>
    
      <category term="Skim" scheme="www.strivezs.com/tags/Skim/"/>
    
      <category term="Latex" scheme="www.strivezs.com/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>使用Google Colaboratory跑深度学习</title>
    <link href="www.strivezs.com/2020/09/27/%E4%BD%BF%E7%94%A8Google%20Colaboratory%E8%B7%91%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    <id>www.strivezs.com/2020/09/27/%E4%BD%BF%E7%94%A8Google%20Colaboratory%E8%B7%91%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-09-27T10:39:19.530Z</published>
    <updated>2020-09-27T10:39:19.530Z</updated>
    
    <content type="html"><![CDATA[<h1>使用Google Colaboratory跑深度学习</h1><h2 id="使用Colaboratory"><a class="header-anchor" href="#使用Colaboratory">¶</a>使用Colaboratory</h2><p>首先，要使用Google的产品，翻墙是必须的吧。 然后点击进入Google云端硬盘，如下界面：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/8yyuL9.png" alt="figure.1"></p><p>然后点击新建–更多–Colaboratory,就会出现这个界面</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/VnpM8q.png" alt="figure.2"></p><p>红框可以修改页面名称，点击蓝框进行设置GPU运行</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/6F46Dw.png" alt="figure.3"></p><p>更改运行时的类型：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/D6jwKw.png" alt="figure.4"></p><p>设置为GPU:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/GA2mPH.png" alt="figure.5"></p><p>验证一下，输入如下代码运行：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="title">tf</span>.test.gpu_device_name()</span><br></pre></td></tr></table></figure><p>出现如下结果则表示是GPU运行：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/xq4iij.png" alt="figure.6"></p><p>可以使用如下命令查看cpu类型和CUDA 版本(方便安装pytorch用)</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="regexp">/opt/</span>bin/nvidia-smi</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zyp521/upload_image/raw/master/pMg1We.png" alt="figure.7"></p><h2 id="安装Miniconda3"><a class="header-anchor" href="#安装Miniconda3">¶</a>安装Miniconda3</h2><p>这里提前说一下在Colaboratory的问题：<br>就是在这个类似命令行的页面端无法进行conda虚拟环境的创建，只能使用base，而且需要特殊的方式来对conda进行使用。</p><p>先使用命令行下载Miniconda3的sh安装包：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!wget http<span class="variable">s:</span>//repo.anaconda.<span class="keyword">com</span>/miniconda/Miniconda3-latest-Linux-x86_64.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>安装权限配置：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">!chmod</span> +<span class="keyword">x</span> Miniconda<span class="number">3</span>-latest-Linux-<span class="keyword">x</span><span class="number">86</span>_<span class="number">64</span>.sh</span><br></pre></td></tr></table></figure><p>安装到指定位置，这里建议安装在/root/</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="keyword">bash </span>./Miniconda3-latest-Linux-x86_64.sh -<span class="keyword">b </span>-f /root/</span><br></pre></td></tr></table></figure><p>激活conda:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="keyword">source</span> <span class="regexp">/root/mi</span>niconda3<span class="regexp">/bin/</span>activate</span><br></pre></td></tr></table></figure><p>使用命令将conda配置成默认的命令行使用。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">!conda init</span></span><br></pre></td></tr></table></figure><h2 id="安装PyTorch"><a class="header-anchor" href="#安装PyTorch">¶</a>安装PyTorch</h2><p>这里试过进行env的创建，但是创建成功之后无法进行命令行的切换，因此这里就直接在base上进行了。</p><p>安装pytorch，这里去pytorch官网选择对应的版本进行安装：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/5y3Ekz.png" alt="figure.8"></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">!conda</span> install pytorch torchvision cudatoolkit=<span class="number">10.1</span> -<span class="keyword">c</span> pytorch</span><br></pre></td></tr></table></figure><p>使用命令查看conda env：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!conda <span class="keyword">info</span> <span class="comment">--env</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zyp521/upload_image/raw/master/SV6aZQ.png" alt="figure.9"></p><h3 id="验证pytorch是否能够使用"><a class="header-anchor" href="#验证pytorch是否能够使用">¶</a>验证pytorch是否能够使用</h3><p>首先直接编写代码进行验证能否直接使用自己安装的conda python:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(torch.version)</span></span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zyp521/upload_image/raw/master/bsKyn8.png" alt="figure.10"></p><p>可以看到这里的python版本为3.6，和我们的版本不一样，我认为直接使用python编译的是用的自带的python。</p><p>因此这里创建一个test.py文件上传上去，代码为:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(torch.version)</span></span></span><br></pre></td></tr></table></figure><p>然后使用命令行再次运行代码：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!python <span class="regexp">/content/</span>test.py</span><br></pre></td></tr></table></figure><p>结果为:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/7fpucU.png" alt="figure.11"></p><p>可以看出我们的python为3.8版本了，因此成功了。</p><h2 id="安装MMDetection"><a class="header-anchor" href="#安装MMDetection">¶</a>安装MMDetection</h2><h3 id="安装mmcv"><a class="header-anchor" href="#安装mmcv">¶</a>安装mmcv</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/<span class="keyword">open</span>-mmlab/mmcv.git</span><br><span class="line"><span class="keyword">cd</span> mmcv</span><br><span class="line">pip install /content/mmcv/.</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zyp521/upload_image/raw/master/cGUR6D.png" alt="figure.12"></p><h3 id="安装cpython等需求包"><a class="header-anchor" href="#安装cpython等需求包">¶</a>安装cpython等需求包</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//gi</span>tee.com<span class="regexp">/zyp521/u</span>pload_image<span class="regexp">/raw/m</span>aster<span class="regexp">/cGUR6D.png</span></span><br></pre></td></tr></table></figure><h3 id="安装mmdetection"><a class="header-anchor" href="#安装mmdetection">¶</a>安装mmdetection</h3><p>官方文档的安装方法：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/<span class="keyword">open</span>-mmlab/mmdetection.git</span><br><span class="line"><span class="keyword">cd</span> mmdetection</span><br><span class="line">pip install -r requirements/build.txt</span><br><span class="line">pip install <span class="string">"git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI"</span></span><br><span class="line">pip install -v -<span class="keyword">e</span> . # <span class="built_in">or</span> <span class="string">"python setup.py develop"</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zyp521/upload_image/raw/master/ZT0X2A.png" alt="figure.13"></p><p>到此，我们就完成了mmdetection及其依赖库的安装。</p><p>有一个比较大的缺陷需要声明一下，就是如果你超过12小时不登录Colaboratory的话，google会自动将你的服务器重置分配给别人，你的数据和代码都被自动清楚了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;使用Google Colaboratory跑深度学习&lt;/h1&gt;
&lt;h2 id=&quot;使用Colaboratory&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#使用Colaboratory&quot;&gt;¶&lt;/a&gt;使用Colaboratory&lt;/h2&gt;
&lt;p&gt;首先，要
      
    
    </summary>
    
    
      <category term="深度学习" scheme="www.strivezs.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="服务器" scheme="www.strivezs.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Anaconda" scheme="www.strivezs.com/tags/Anaconda/"/>
    
      <category term="Google Colaboratory" scheme="www.strivezs.com/tags/Google-Colaboratory/"/>
    
      <category term="PyTorch" scheme="www.strivezs.com/tags/PyTorch/"/>
    
      <category term="GPU" scheme="www.strivezs.com/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>果壳大通过ipv6实现免流上网</title>
    <link href="www.strivezs.com/2020/09/23/%E6%9E%9C%E5%A3%B3%E5%A4%A7%E9%80%9A%E8%BF%87ipv6%E5%AE%9E%E7%8E%B0%E5%85%8D%E6%B5%81%E4%B8%8A%E7%BD%91/"/>
    <id>www.strivezs.com/2020/09/23/%E6%9E%9C%E5%A3%B3%E5%A4%A7%E9%80%9A%E8%BF%87ipv6%E5%AE%9E%E7%8E%B0%E5%85%8D%E6%B5%81%E4%B8%8A%E7%BD%91/</id>
    <published>2020-09-23T01:28:45.635Z</published>
    <updated>2020-09-23T01:28:45.635Z</updated>
    
    <content type="html"><![CDATA[<h1>果壳大通过ipv6实现免流上网</h1><p>该教程仅针对果壳大，但是同样可以适用于校园网支持ipv6的学校。</p><h2 id="vultr使用"><a class="header-anchor" href="#vultr使用">¶</a>vultr使用</h2><p>使用vultr的好处是不怕被封ip，因为vultr是折算成小时计费，且可以随时删除和开通服务器，新服务器就是新的ip。新开服务器只需要0.01美元，即使你运气非常不好，开了10台服务器才获得没有被墙的ip，总创建服务器成本也只有0.1美元，不到1块钱。开通服务器时，当出现了ip，不要立马去ping或者用xshell去连接，再等5分钟之后，有个缓冲时间。</p><p>自建ss/ssr教程很简单，整个教程分三步：</p><ul><li>第一步：购买VPS服务器</li><li>第二步：一键部署VPS服务器</li><li>第三步：一键加速VPS服务器 (centos6系统选择锐速加速，cenots7选择bbr加速)</li></ul><p>其实也可以在搬瓦工以及其他的平台购买自己手动搭建，还可以开通多个账号，很多人一起使用。</p><h2 id="购买VPS"><a class="header-anchor" href="#购买VPS">¶</a>购买VPS</h2><p>需要注意的一点是：我们一定要自己注册帐号， 千万不要找人代购 ，因为代购存在很大的风险，VPS可能被植入后门程序，十分危险，而且被主机商发现会被封号处理。</p><h3 id="注册vultr"><a class="header-anchor" href="#注册vultr">¶</a>注册vultr</h3><p>打开 <a href="https://www.vultr.com/?ref=8557194-6G">Vultr</a>官网 ，输入邮箱和密码，点击“Create Account” 即可。</p><h3 id="激活账号"><a class="header-anchor" href="#激活账号">¶</a>激活账号</h3><p>新用户注册后就自动跳转到充值页面，如下图所示。可选择不同的充值方式，我们推荐使用支付宝，当然信用卡、Paypal、比特币也是OK的。</p><p>注意：Vultr为避免帐号滥用，帐号在使用前需要进行激活，激活条件是： 最低充值10美元 。10美元买$2.5可以用4个月，没有时间限制，条件不算苛刻。</p><p>点击Pay with Alipay后，跳转到支付宝的付款页面，又是熟悉的画面，自动换成人民币完成充值。</p><p>vultr在2020年的最新活动，针对新用户，直接送100美元（一个月有效）！全球15个服务器位置可选，kvm框架。如果以后这个vultr注册地址被墙了，那么就用翻墙软件打开，或者用<a href="https://github.com/Alvin9999/new-pac/wiki/ss%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7">ss/ssr免费账号</a>.</p><h3 id="创建VPS实例"><a class="header-anchor" href="#创建VPS实例">¶</a>创建VPS实例</h3><p>vultr实际上是折算成小时来计费的，比如服务器是5美元1个月，那么每小时收费为5/30/24=0.0069美元 会自动从账号中扣费，只要保证账号有钱即可。如果你部署的服务器实测后速度不理想，你可以把它删掉（destroy），重新换个地区的服务器来部署，方便且实用。因为新的服务器就是新的ip，所以当ip被墙时这个方法很有用。当ip被墙时，为了保证新开的服务器ip和原先的ip不一样，先开新服务器，开好后再删除旧服务器即可。</p><p>计费从你开通服务器开始算的，不管你有没有使用，即使服务器处于关机状态仍然会计费，如果你没有开通服务器就不算。比如你今天早上开通了服务器，但你有事情，晚上才部署，那么这段时间是会计费的。同理，如果你早上删掉服务器，第二天才开通新的服务器，那么这段时间是不会计费的。在账号的Billing选项里可以看到账户余额。</p><p>温馨提醒：同样的服务器位置，不同的宽带类型和地区所搭建的账号的翻墙速度会不同，这与中国电信、中国联通、中国移动国际出口带宽和线路不同有关，所以以实测为准。可以先选定一个服务器位置来按照教程进行搭建，熟悉搭建方法，当账号搭建完成并进行了bbr加速后，测试下速度自己是否满意，如果满意那就用这个服务器位置的服务器。如果速度不太满意，就一次性开几台不同的服务器位置的服务器，然后按照同样的方法来进行搭建并测试，选择最优的，之后把其它的服务器删掉，按小时计费测试成本可以忽略。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/tuwny5.png" alt="figure.1"></p><p>这里可以选择举距离国内相对较近的日本、香港、新加坡节点</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/0Ut8uP.png" alt="figure.2"></p><p>这里注意最新的系统默认是centos8 x64，然后这个最新的centos8的系统在配置ss的时候，会有一些错误，后面我们会记录并给出解决方案，centos6的话就没有什么问题（可以点击图中的CentOS几个字，会弹出centos6，然后选中centos6）</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/hs9YXr.png" alt="figure.3"></p><p>接下来这一步是开启vps的ipv6 ip，选填项。如果你的电脑系统可以用ipv6，那么可以勾选此项。大多数用户没有这个需求，但有一些用户可能会用到，所以补充了这部分内容。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/Rue8D7.png" alt="figure.4"></p><h3 id="查看服务器信息"><a class="header-anchor" href="#查看服务器信息">¶</a>查看服务器信息</h3><p>开通服务器时，当出现了ip，不要立马去ping或者用xshell去连接，再等5分钟之后，有个缓冲时间。完成购买后，找到系统的密码记下来，部署服务器时需要用到。vps系统（推荐centos6）的密码获取方法如下图：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/8HsgZI.png" alt="figure.5"></p><p>如果你开启了vps的ipv6，那么在后台的settings选项可以找到服务器的ipv6 ip。在部署SSR账号时，你用ipv6 ip就行。整个部署及使用过程中，记得把电脑系统开启ipv6喔。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/vVT4oz.png" alt="figure.6"></p><p>删掉服务器步骤如下图：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/5FBep2.png" alt="figure.7"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/b87VJi.png" alt="figure.8"></p><p>一个被墙ip的vps被删掉后，其ip并不会消失，会随机分配给下一个在这个服务器位置新建服务器的人，这就是为什么开新服务器会有一定几率开到被墙的ip。被墙是指在国内地区无法ping通服务器，但在国外是可以ping通的，vultr是面向全球服务，如果这个被墙ip被国外的人开到了，它是可以被正常使用的，半年或1年后这个被墙的ip可能会被国内防火墙解封，那么这就是一个良性循环。</p><h1>第二步：部署VPS服务器</h1><p>购买服务器后，需要部署一下。因为你买的是虚拟东西，而且又远在国外，我们需要一个叫Xshell的软件来远程部署。</p><h2 id="1-Xshell下载"><a class="header-anchor" href="#1-Xshell下载">¶</a>1.Xshell下载</h2><p>Xshell windows版官网下载地址：<a href="https://www.netsarang.com/zh/xshell/">https://www.netsarang.com/zh/xshell/</a></p><p>学生可以下载免费版，直接输入你的邮箱，xshell就会把免费版下载链接发送到邮箱里：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/bytZgu.png" alt="figure.8"></p><p>Xshell Windows版安装文件百度云下载地址：</p><p>链接: <a href="https://pan.baidu.com/s/1pnorPZRAuOannJX13ulzzQ">https://pan.baidu.com/s/1pnorPZRAuOannJX13ulzzQ</a> 提取码: ssbm</p><p>如果你是苹果电脑操作系统，更简单，无需下载xshell，系统可以直接连接VPS。打开终端（Terminal），输入ssh root@ip 其中“ip”替换成你VPS的ip, 按回车键，然后复制粘贴密码，按回车键即可登录。粘贴密码时有可能不显示密码，但不影响， <a href="http://www.cnblogs.com/ghj1976/archive/2013/04/19/3030159.html">参考设置方法</a> 如果不能用MAC自带的终端连接的话，直接网上搜“MAC连接SSH的软件”，有很多，然后通过软件来连接vps服务器就行，具体操作方式参考windows xshell。</p><h2 id="连接购买的服务器"><a class="header-anchor" href="#连接购买的服务器">¶</a>连接购买的服务器</h2><p>下载windows xshell软件并安装后，打开软件</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/mcDOob.png" alt="figure.9"></p><p>随便取个名字，然后把你的服务器ip填上</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/7filWo.png" alt="figure.10"></p><p>连接国外ip即服务器时，软件会先后提醒你输入用户名和密码，用户名默认都是root，密码是你购买的服务器系统的密码。</p><p><strong>如果xshell连不上服务器，没有弹出让你输入用户名和密码的输入框，表明你开到的ip是一个被墙的ip，遇到这种情况，重新开新的服务器，直到能用xshell连上为止，耐心点哦！如果同一个地区开了多台服务器还是不行的话，可以换其它地区。</strong></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/RbtJIK.png" alt="figure.11"></p><p>连接成功后，会出现如上图所示，之后就可以复制粘贴代码部署了。</p><h2 id="一键部署"><a class="header-anchor" href="#一键部署">¶</a>一键部署</h2><p>**（CentOs8在后续需要再配置一下，但也需要这些前提步骤，CentOs6应该可以直接配置成功）**CentOS6/Debian6/Ubuntu14 ShadowsocksR一键部署管理脚本（2018.11.21更新）：</p><p><strong>脚本一：</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -<span class="keyword">y</span> install wget</span><br><span class="line"></span><br><span class="line">wget -<span class="keyword">N</span> — <span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/ToyoDAdoubi/doubi/master/ssr.<span class="keyword">sh</span> &amp;&amp; chmod +<span class="keyword">x</span> ssr.<span class="keyword">sh</span> &amp;&amp; bash ssr.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p><strong>备用脚本二（2018.11.21更新）：</strong></p><p>如果上面的脚本暂时用不了，可以用下面的备用脚本，备用脚本没有单独做图文教程，自己摸索下就会了。备用脚本卸载命令：./shadowsocksR.sh uninstall</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum -<span class="keyword">y</span> install wget</span><br><span class="line"></span><br><span class="line">wget — <span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/teddysun/shadowsocks_install/master/shadowsocksR.<span class="keyword">sh</span></span><br><span class="line"></span><br><span class="line">chmod +<span class="keyword">x</span> shadowsocksR.<span class="keyword">sh</span></span><br><span class="line"></span><br><span class="line">./shadowsocksR.<span class="keyword">sh</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> | tee shadowsocksR.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>复制上面的脚本一代码到VPS服务器里，复制代码用鼠标右键的复制，然后在vps里面右键粘贴进去，因为ctrl+c和ctrl+v无效。接着按回车键，脚本会自动安装，以后只需要运行这个快捷命令就可以出现下图的界面进行设置，快捷管理命令为：bash <a href="http://ssr.sh">ssr.sh</a></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/x8mtRL.png" alt="figure.13"></p><p>如上图出现管理界面后，输入数字1来安装SSR服务端。如果输入1后不能进入下一步，那么请退出xshell，重新连接vps服务器，然后输入快捷管理命令bash <a href="http://ssr.sh">ssr.sh</a> 再尝试。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/fTgSvX.png" alt="figure.14"></p><p>根据上图提示，依次输入自己想设置的端口和密码 (密码建议用复杂点的字母组合，端口号为40–65535之间的数字)，回车键用于确认</p><p>注：关于端口的设置，总的网络总端口有6万多个，理论上可以任意设置，但不要以0开头！但是有的地区需要设置特殊的端口才有效，一些特殊的端口比如80、143、443、1433、3306、3389、8080。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/NK9sG1.png" alt="figure.15"></p><p>如上图，选择想设置的加密方式，比如10，按回车键确认</p><p>接下来是选择协议插件，如下图：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/juRbKy.png" alt="figure.16"></p><p>选择并确认后，会出现上图的界面，提示你是否选择兼容原版，这里的原版指的是SS客户端（SS客户端没有协议和混淆的选项），可以根据需求进行选择，演示选择y</p><p>之后进行混淆插件的设置。</p><p>注意：如果协议是origin，那么混淆也必须是plain；如果协议不是origin，那么混淆可以是任意的。有的地区需要把混淆设置成plain才好用。因为混淆不总是有效果，要看各地区的策略，有时候不混淆（plain）或者（origin和plain一起使用），让其看起来像随机数据更好。（特别注意：tls 1.2_ticket_auth容易受到干扰！请选择除tls开头以外的其它混淆！！！）</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/kcXVtf.png" alt="figure.17"></p><p>进行混淆插件的设置后，会依次提示你对设备数、单线程限速和端口总限速进行设置，默认值是不进行限制，个人使用的话，选择默认即可，即直接敲回车键。</p><p>注意：关于限制设备数，这个协议必须是非原版且不兼容原版才有效，也就是必须使用SSR协议的情况下，才有效！</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/JcuscQ.png" alt="figure.18"></p><p>之后代码就正式自动部署了，到下图所示的位置，提示你下载文件，输入：y</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/lkdiw7.png" alt="figure.19"></p><p>**（这里，如果你的系统是CentOs8，请跳至步骤4.CentOs8安装SSR踩坑）**耐心等待一会，出现下面的界面即部署完成：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/h6bhBW.png" alt="figure.20"></p><p>根据上图就可以看到自己设置的SSR账号信息，包括IP、端口、密码、加密方式、协议插件、混淆插件，这些信息需要填入你的SSR客户端。如果之后想修改账号信息，直接输入快捷管理命令：bash <a href="http://ssr.sh">ssr.sh</a> 进入管理界面，选择相应的数字来进行一键修改。例如：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/YSs1zj.png" alt="figure.21"></p><p>脚本演示结束。</p><p>此脚本是开机自动启动，部署一次即可。最后可以重启服务器确保部署生效（一般情况不重启也可以）。重启需要在命令栏里输入reboot ，输入命令后稍微等待一会服务器就会自动重启，一般重启过程需要2～5分钟，重启过程中Xshell会自动断开连接，等VPS重启好后才可以用Xshell软件进行连接。如果部署过程中卡在某个位置超过10分钟，可以用xshell软件断开，然后重新连接你的ip，再复制代码进行部署。</p><h2 id="CentOs8安装SSR踩坑"><a class="header-anchor" href="#CentOs8安装SSR踩坑">¶</a>CentOs8安装SSR踩坑</h2><p><strong>安装完成，ssr服务启动失败：</strong></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/hSw6Jm.jpg" alt="figure.22"></p><p>对CentOs系统进行参数配置，配置完成启动的时候可能会<strong>失败</strong>，这时参考下面的问题。 需要注意的几个问题是：</p><h3 id="Python-导致的启动失败"><a class="header-anchor" href="#Python-导致的启动失败">¶</a>Python 导致的启动失败</h3><p>Vultr 上买的新服务器(centOS 8)虽然已经安装了 python36(若服务器没有安装 python 则需要先安装 python)，但没有配置为默认，因此 ssr 客户端会启动失败。</p><p>因此要先配置 Python36 为默认 Python：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alternatives --<span class="keyword">set</span> <span class="keyword">python</span> /usr/bin/<span class="keyword">python3</span></span><br></pre></td></tr></table></figure><p>至此 ssr 客户端就可以正常启动了。</p><h3 id="firewall-导致的无法连接（适用于配好了SSR无法上网的情况）"><a class="header-anchor" href="#firewall-导致的无法连接（适用于配好了SSR无法上网的情况）">¶</a>firewall 导致的无法连接（适用于配好了SSR无法上网的情况）</h3><p>第二：服务器默认开启了 firewall 防火墙，且默认没有开放任何端口，因此要将所配置的 ssr 端口(以443为例)添加到白名单并重启防火墙</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --add-port=443/tcp --permanent</span></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --add-port=443/udp --permanent</span></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --reload</span></span><br></pre></td></tr></table></figure><p>然后就可以正常连接和使用 ssr 进行科学上网活动了。</p><h3 id="ssr管理"><a class="header-anchor" href="#ssr管理">¶</a>ssr管理</h3><p>使用的配置</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">加密：aes<span class="number">-256</span>-cfb</span><br><span class="line">协议：origin</span><br><span class="line">混淆：http_post</span><br></pre></td></tr></table></figure><p>设备数限制和线程数限制可自行斟酌，不需要可以直接按回车跳过。具体关于协议和混淆的配置请参考文末的参考文章。</p><p>要启动 ssr 一键脚本管理，可以运行</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bash </span>ssr.sh</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zyp521/upload_image/raw/master/LKB3xK.png" alt="figure.23"></p><h2 id="SSR客户端下载与使用"><a class="header-anchor" href="#SSR客户端下载与使用">¶</a>SSR客户端下载与使用</h2><p>第一次电脑系统使用SSR/SS客户端时，如果提示你需要安装NET Framework 4.0，网上搜一下这个东西，安装一下即可。NET Framework 4.0是SSR/SS的运行库，没有这个SSR/SS客户端无法正常运行。有的电脑系统可能会自带NET Framework 4.0。</p><p>Windows SSR客户端 <a href="https://github.com/shadowsocksr-backup/shadowsocksr-csharp/releases">下载地址</a> <a href="https://nofile.io/f/6Jm7WJCyOVv/ShadowsocksR-4.7.0-win.7z">备用下载地址</a></p><p>MAC SSR客户端 <a href="https://github.com/shadowsocksr-backup/ShadowsocksX-NG/releases">下载地址</a> <a href="https://nofile.io/f/jgMWFwCBonU#ab0d3c3b6ac54482">备用下载地址</a></p><p><a href="https://github.com/the0demiurge/CharlesScripts/blob/master/charles/bin/ssr">Linux客户端一键安装配置使用脚本(使用方法见注释)</a> 或者采用图形界面的<a href="https://github.com/erguotou520/electron-ssr/releases">linux ssr客户端</a></p><p>安卓SSR客户端 <a href="https://github.com/shadowsocksr-backup/shadowsocksr-android/releases/download/3.4.0.8/shadowsocksr-release.apk">下载地址</a> <a href="https://nofile.io/f/rvTJoj0h5GC/shadowsocksr-release.apk">备用下载地址</a></p><p>苹果手机SSR客户端：Potatso Lite、Potatso、shadowrocket都可以作为SSR客户端，但这些软件目前已经在国内的app商店下架，可以用美区的appid账号来下载。但是，如果你配置的SSR账号兼容SS客户端，或者协议选择origin且混淆选择plain，那么你可以选择苹果SS客户端软件（即协议和混淆可以不填）。在大陆app商店里面可以尝试搜索：Wingy、shadowsocks，如果软件都被下架了，建议自己注册美区appid来下载，软件多的很！[苹果手机申请美区apple id方法](<a href="https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=baidu&amp;wd=%E8%8B%B9%E6%9E%9C%E6%89%8B%E6%9C%BA%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E7%BE%8E%E5%8C%BAapple">https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=baidu&amp;wd=苹果手机如何申请美区apple</a> id&amp;oq=%E8%8B%B9%E6%9E%9C%E6%89%8B%E6%9C%BA%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BAapple%20id&amp;rsv_pq=9b0ef06900045aac&amp;rsv_t=a6daySwnrXFrSrC%2BIlgLIeU321j1oRm%2F%2FJgdL3RAdT6GSkIIcOaBGKnfvjE&amp;rqlang=cn&amp;rsv_enter=0&amp;inputT=2113&amp;rsv_sug3=54&amp;rsv_sug2=0&amp;rsv_sug4=2440&amp;rsv_sug=1)。</p><p>有了账号后，打开SSR客户端，填上信息，这里以windows版的SSR客户端为例子：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/v6fSBW.jpg" alt="figure.24"></p><p>在对应的位置，填上服务器ip、服务器端口、密码、加密方式、协议和混淆，最后将浏览器的代理设置为（http）127.0.0.1和1080即可。账号的端口号就是你自己设置的，而要上网的浏览器的端口号是1080，固定的，谷歌浏览器可以通过 SwitchyOmega 插件来设置。</p><p>启动SSR客户端后，右键SSR客户端图标，选择第一个“系统代理模式”，里面有3个子选项，选择”全局模式“，之后就可以用浏览器设置好了的代理模式（http）127.0.0.1和1080翻墙，此模式下所有的网站都会走SSR代理。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/VUIgkf.jpg" alt="figure.25"></p><h3 id="常见问题参考解决方法："><a class="header-anchor" href="#常见问题参考解决方法：">¶</a><strong>常见问题参考解决方法：</strong></h3><p><strong>1、用了一段时间发现ssr账号用不了了？</strong></p><p>首先ping一下自己的ip，看看能不能ping的通，ping不通那么就是ip被墙了，ip被墙时，xshell也会连接不上服务器，遇到这种情况重新部署一个新的服务器，新的服务器就是新的ip。关于怎么ping ip的方法，可以自行网上搜索，或者用xshell软件连接服务器来判断，连不上即是被墙了。vultr开通和删除服务器非常方便，新服务器即新ip，大多数vps服务商都没有这样的服务，一般的vps服务商可能会提供免费更换1次ip的服务。</p><p><strong>2、刚搭建好的ssr账号，ip能ping通，但是还是用不了？</strong></p><p>首选排除杀毒软件的干扰，尤其是国产杀毒软件，比如360安全卫生、360杀毒软件、腾讯管家、金山卫生等。这些东西很容易干扰翻墙上网，如果你的电脑安装了这样的东西，建议至少翻墙时别用，最好卸载。其次，检查下SSR信息是否填写正确。浏览器的代理方式是否是ssr代理，即（HTTP）127.0.0.1 和1080。如果以上条件都排除，还是用不了，那么可以更换端口、加密方式、协议、混淆，或者更换服务器位置。另外，如果你的vps服务器配置的是SSR账号，即有协议和混淆且没有兼容原版(SS版），那么你必须使用SSSR客户端来使用账号，因为SS客户端没有填写协议和混淆的选项。</p><p>**3、有的地区需要把混淆参数设置成plain才好用。**因为混淆不总是有效果，要看各地区的策略，有时候不混淆（plain）让其看起来像随机数据更好。</p><p><strong>4、电脑能用但手机用不了？</strong></p><p>如果你的手机用的是SS客户端，SS客户端没有填协议和混淆的地方，如果你部署的协议和混淆的时候没有选择兼容原版（SS版），因此手机是用不了的。这个时候你把协议弄成兼容原版、混淆也设置成兼容原版即可。或者直接将协议设置成origin且混淆设置成plain。</p><p><strong>5、vps的服务器操作系统不要用的太高</strong>，太高可能会因为系统的防火墙问题导致搭建的SSR账号连不上。如果某个系统不好用，可以选择其它的系统来尝试。</p><p><strong>6、vultr服务商提供的vps服务器是单向流量计算</strong>，有的vps服务商是双向流量计算，单向流量计算对于用户来说更实惠。因为我们是在vps服务器上部署SSR服务端后，再用SSR客户端翻墙，所以SSR服务端就相当于中转，比如我们看一个视频，必然会产生流量，假如消耗流量80M，那么VPS服务器会产生上传80M和下载80M流量，vultr服务商只计算单向的80M流量。如果是双向计算流量，那么会计算为160M流量。</p><p><strong>7、如果你想把搭建的账号给多人使用</strong>，不用额外设置端口，因为一个账号就可以多人使用。一般5美元的服务器可以同时支持40人在线使用。</p><p>如果想实现支持每个用户(端口)不同的加密方式/协议/混淆等，并且管理流量使用，可以参考多用户配置脚本：wget -N — no-check-certificate <a href="https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh">https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh</a> &amp;&amp; chmod +x <a href="http://ssrmu.sh">ssrmu.sh</a> &amp;&amp; bash <a href="http://ssrmu.sh">ssrmu.sh</a> 安装后管理命令为：bash <a href="http://ssrmu.sh">ssrmu.sh</a></p><p>注意：这个多用户配置脚本和教程内容的脚本无法共存！要想用这个脚本，把之前的脚本卸载，输入管理命令bash <a href="http://ssr.sh">ssr.sh</a> ，选择3，卸载ShadowsocksR即可卸载原脚本。</p><p><strong>8、vultr服务器每月有流量限制</strong>，超过限制后服务器不会被停止运行，但是超出的流量会被额外收费。北美和西欧地区的服务器超出流量后，多出的部分收费为0.01美元/G。新加坡和日本东京（日本）为0.025美元/G，悉尼（澳大利亚）为0.05美元/G。把vultr服务器删掉，开通新的服务器，流量会从0开始重新计算。</p><p><strong>9、vultr怎样才能申请退款呢？</strong></p><p>vultr和其他的国外商家一样，都是使用工单的形式与客服联系，如果需要退款，直接在后台点击support，选择open ticket新开一个工单，选择billing question财务问题，简单的在文本框输入你的退款理由。比如：Please refund all the balance in my account。工单提交以后一般很快就可以给你确认退款，若干个工作日后就会退回你的支付方式。（全额退款结束后，账号可能会被删除）</p><p>如果英语水平不好，但是想和客服进行交流，可以用百度在线翻译，自动中文转英文和英文转中文。</p><p><strong>10、路由器也可以配置ss/ssr账号</strong>，详见openwrt-ssr项目地址：<a href="https://github.com/ywb94/openwrt-ssr">https://github.com/ywb94/openwrt-ssr</a></p><p><strong>11、如果电脑想用搭建的ss/ssr账号玩游戏</strong>，即实现类似VPN全局代理，可以用SSTAP，教程：<a href="https://www.jianshu.com/p/519e68b74646">https://www.jianshu.com/p/519e68b74646</a></p><p><strong>12、配置bbr加速脚本</strong>，重启电脑后xshell无法连接服务器。如果你遇到这样的问题，只能把服务器删除了，重新搭建个新的，可以先配置bbr加速脚本再配置ss/ssr脚本。</p><h2 id="校园网ipv6免流配置【需要登陆】"><a class="header-anchor" href="#校园网ipv6免流配置【需要登陆】">¶</a>校园网ipv6免流配置【需要登陆】</h2><h3 id="检查所在环境是否可以使用ipv6-插网线不登录"><a class="header-anchor" href="#检查所在环境是否可以使用ipv6-插网线不登录">¶</a>检查所在环境是否可以使用ipv6(插网线不登录)</h3><p><a href="https://ipv6-test.com/">https://ipv6-test.com/</a><br><a href="https://test-ipv6.com/">https://test-ipv6.com/</a><br><a href="https://bt.byr.cn/login.php">https://bt.byr.cn/login.php</a></p><h3 id="ss使用ipv6【亲测新版ssr好像不需要配置就可以打通】"><a class="header-anchor" href="#ss使用ipv6【亲测新版ssr好像不需要配置就可以打通】">¶</a>ss使用ipv6【亲测新版ssr好像不需要配置就可以打通】</h3><p>保险起见，这里还是说一下新旧版配置：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/C2Zwi1.jpg" alt="figure.26"></p><p>可以看到新版的自动带有ipv6的检测：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/6wwFEK.jpg" alt="figure.27"></p><p>旧版修改方式：</p><p>注意修改config.json中的必要参数，<strong>注意<code>server</code>参数需要设定为<code>&quot;::&quot;</code>才能使用IPv6</strong>。</p><ul><li>启动shadowsocks：<code>/etc/init.d/shadowsocks start</code>。</li></ul><p><strong>示例config.json：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"::"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">8388</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"mypassword"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启ssr即可。</p><h3 id="在客户端ssr里如同ipv4那样配置，只是ip地址换成ipv6的地址"><a class="header-anchor" href="#在客户端ssr里如同ipv4那样配置，只是ip地址换成ipv6的地址">¶</a>在客户端ssr里如同ipv4那样配置，只是ip地址换成ipv6的地址</h3><p><img src="https://gitee.com/zyp521/upload_image/raw/master/NnQQiF.jpg" alt="figure.28"></p><p>切换到校园网，切换代理为全局模式，即可白嫖上网，但这种需要先连接校园网登入账号。</p><p>测试：开启全局模式，同时打开油管和B站持续至少20分钟，等20分钟再看流量的消耗，约2MB。服务器流量使用0.03GB，单独全局开油管至少2个半小时之后呢？消耗约2.7GB，而校园网流量消耗约29MB（与我退出全局模式后短时开启一系列网址有关），一切正常。</p><p>【注意！！！】只是这种方式只能上网白嫖，不能使用应用</p><h2 id="实现不登陆校园网通过纯ipv6代理上网"><a class="header-anchor" href="#实现不登陆校园网通过纯ipv6代理上网">¶</a>实现不登陆校园网通过纯ipv6代理上网</h2><p>配置完步骤五，我们会发现，在不登陆校园网账号的情况下只可以免流访问部分支持ipv6的网站，而要访问只支持ipv4的网站，则还是需要登陆校园网账号，此时，会出现校园网流量偷跑的情况。</p><p>那么如何实现不登陆校园网实现全部网站免流上网呢？</p><p><strong>答：IPv6 ONLY VPS访问IPv4资源</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">步骤：</span><br><span class="line"><span class="number">1.</span>在VPS上配置好传输代理程序。</span><br><span class="line"><span class="number">2.</span>禁用你校园网本机的IPv4协议。</span><br><span class="line"><span class="number">3.</span>通过校园网的IPv6地址与你VPS上的IPv6地址建立连接。（根据不同服务端选择相应客户端）</span><br></pre></td></tr></table></figure><p>具体操作：</p><p>1.完成步骤五，在VPS上配置好SSR</p><p>2.修改你的VPS的DNS服务器到DNS64提供者的DNS</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">DNS64是与NAT64搭配使用的，原理很简单，修改你的DNS到DNS64提供者的DNS，当你发出向解析到IPv4的域名的请求后，DNS会将IPv4地址按照一定格式嵌入IPv6地址中；这个返回IPv6地址会指向NAT64的服务器，NAT64网关会按照它包含的信息获取IPv4的数据并转发给你，这样一来你就能够直接访问IPv4的网站了。</span><br><span class="line"></span><br><span class="line">提供DNS64的服务商很多，比如谷歌等，但是它们并不提供配套的NAT64，需要你自己在内网搭建一个NAT64网关。当然欧洲有一些公益组织提供免费的DNS64+NAT64服务，比如下面这两个。</span><br><span class="line"></span><br><span class="line">http:<span class="comment">//www.trex.fi/2011/dns64.html</span></span><br><span class="line"><span class="number">2001</span>:<span class="number">67</span>c:<span class="number">2</span>b0::<span class="number">4</span></span><br><span class="line"><span class="number">2001</span>:<span class="number">67</span>c:<span class="number">2</span>b0::<span class="number">6</span></span><br><span class="line"></span><br><span class="line">https:<span class="comment">//go6lab.si/current-ipv6-tests/nat64dns64-public-test/</span></span><br><span class="line"><span class="number">2001</span>:<span class="number">67</span>c:<span class="number">27e4</span>:<span class="number">15</span>::<span class="number">6411</span></span><br><span class="line"><span class="number">2001</span>:<span class="number">67</span>c:<span class="number">27e4</span>::<span class="number">64</span></span><br><span class="line"></span><br><span class="line">https:<span class="comment">//nat64.level66.network</span></span><br><span class="line"><span class="number">2</span>a09:<span class="number">11</span>c0:f1:bbf0::<span class="number">70</span></span><br><span class="line"></span><br><span class="line">一般修改/etc/resolv.conf的namesever值即可，不过部分系统想要永久修改需要编辑一些其他的参数，大家就自行查阅资料吧</span><br><span class="line"></span><br><span class="line">DNS64的好处是配置十分方便，足以满足大部分的调试需求。当然弊端也十分明显，服务商会记录你三天的浏览记录以防止用于不法用途，且NAT64服务器到你的服务器速度未必非常理想。</span><br></pre></td></tr></table></figure><p>3.在你的本地主机上，Settings-&gt;Network&amp;Internet-&gt;Proxy，开启Proxy，并填入address：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/UsA0pW.jpg" alt="figure.29"></p><p>4.控制面板-&gt;网络共享中心-&gt;网络连接-&gt;属性-&gt;禁用IPv4协议：【这个ipv4不关也可以上网】</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/etONez.jpg" alt="figure.30"></p><p>5.SSR配置ipv6和全局模式，代理规则改为：绕过局域网即可。</p><h2 id="MAC-OS-系统配置"><a class="header-anchor" href="#MAC-OS-系统配置">¶</a>MAC OS 系统配置</h2><h3 id="下载Shadowsocks-X"><a class="header-anchor" href="#下载Shadowsocks-X">¶</a>下载Shadowsocks-X</h3><p>下载地址 <a href="https://github.com/yangfeicheung/Shadowsocks-X">click here</a></p><p>安装使用即可。</p><p>配置内容：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/iVqEAi.png" alt="figure.30"></p><h3 id="配置本地DNS服务器"><a class="header-anchor" href="#配置本地DNS服务器">¶</a>配置本地DNS服务器</h3><ol><li>打开网络配置</li></ol><p><img src="https://gitee.com/zyp521/upload_image/raw/master/PEqaN8.png" alt="figure.31"></p><ol start="2"><li>添加DNS服务器</li></ol><p><img src="https://gitee.com/zyp521/upload_image/raw/master/daeYaZ.png" alt="figure.32"></p><p>这里添加了ipv6的dns，由于我自己这边mac自动不检测dns因此只能手动添加了。<br>配置了ipv6的dns之后，一定要配置一下ipv4的dns否则ipv4的网站将不无法打开。</p><h3 id="最后"><a class="header-anchor" href="#最后">¶</a>最后</h3><p>最后就是把服务器配置好，打开全局模式，在不登录校园网的情况下，能打开b站等就行了。<br>也可以使用<a href="ip.sb">ip.sb</a>来检测一下自己的ipv6地址。</p><h2 id="路由器不支持ipv6的解决方案"><a class="header-anchor" href="#路由器不支持ipv6的解决方案">¶</a>路由器不支持ipv6的解决方案</h2><p>如果你插网线的话，就不需要了。因为网口是可以直接走ipv6的。</p><h3 id="解除mac地址限制"><a class="header-anchor" href="#解除mac地址限制">¶</a>解除mac地址限制</h3><p>首先给果壳大的网络中心打电话说我要解除MAC地址限制，他会管你要ip地址，你把你的路由器的ip地址发给他就行了，以我的Tp-Link路由器为例：</p><p>登陆 <a href="tplogin.cn">tplogin.cn</a> 这里由于我关闭了路由器的DHCP，路由器不再给我的电脑分配ip地址，因此我无法找到路由器的管理界面，具体登陆方法可以通过自主设置ip地址来完成访问。(教程参考网上)</p><p>然后在管理员界面找到你的ip地址发给他过会就给你解了。</p><h3 id="开启路由ap功能"><a class="header-anchor" href="#开启路由ap功能">¶</a>开启路由ap功能</h3><p>同样以我tp-link为例，我是进入管理员界面后，关闭路由器的DHCP功能，然后将网线从WAN口插入到LAN口进行操作的。</p><p>在完成之后重启路由器就可以实现不同设备连接路由器时都可以通过自己的账号上网了(即实现了路由交换机的功能)</p><h3 id="最后-v2"><a class="header-anchor" href="#最后-v2">¶</a>最后</h3><p>开启完路由器ap功能之后，你搭建完vps，配置好shadowsocks以及ipv6 dns就可以开启全局上网了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;果壳大通过ipv6实现免流上网&lt;/h1&gt;
&lt;p&gt;该教程仅针对果壳大，但是同样可以适用于校园网支持ipv6的学校。&lt;/p&gt;
&lt;h2 id=&quot;vultr使用&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#vultr使用&quot;&gt;¶&lt;/a&gt;vultr使用&lt;/h2&gt;
      
    
    </summary>
    
    
      <category term="技术" scheme="www.strivezs.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="果壳大" scheme="www.strivezs.com/categories/%E6%8A%80%E6%9C%AF/%E6%9E%9C%E5%A3%B3%E5%A4%A7/"/>
    
    
      <category term="ipv6" scheme="www.strivezs.com/tags/ipv6/"/>
    
      <category term="免流" scheme="www.strivezs.com/tags/%E5%85%8D%E6%B5%81/"/>
    
      <category term="校园网" scheme="www.strivezs.com/tags/%E6%A0%A1%E5%9B%AD%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>网线分类</title>
    <link href="www.strivezs.com/2020/09/13/%E7%BD%91%E7%BA%BF%E5%88%86%E7%B1%BB/"/>
    <id>www.strivezs.com/2020/09/13/%E7%BD%91%E7%BA%BF%E5%88%86%E7%B1%BB/</id>
    <published>2020-09-13T02:37:12.496Z</published>
    <updated>2020-09-13T02:37:12.496Z</updated>
    
    <content type="html"><![CDATA[<h1>网线分类</h1><p>网线五类、超五类、超六类网线是根据它们的传输速度、线缆对数、制造工艺和外观特征来分的。超七类网线则没有任何意思，因为现在还没有制造出来。</p><h2 id="五类网线"><a class="header-anchor" href="#五类网线">¶</a>五类网线</h2><p>五类线：该类电缆增加了绕线密度，传输带宽为100MHz，用于语音传输和最高传输速率为100Mbps的数据传输，主要用于100BASE-T和10BASE-T网络，已被超五类线替代。</p><h2 id="超五类网线"><a class="header-anchor" href="#超五类网线">¶</a>超五类网线</h2><p>具有衰减小，串扰少，比五类线增加了近端串音功率和的测试要求，并且具有更高的衰减串扰比（ACR)和信噪比、更小的时延误差，性能得到很大提高。超五类线的最大带宽为100MHz。（支持千兆带宽）</p><h2 id="六类网线"><a class="header-anchor" href="#六类网线">¶</a>六类网线</h2><p>六类布线的传输性能远远高于超五类标准，最适用于传输速率为1Gbps的应用。六类与超五类的一个重要的不同点在于：改善了在串扰以及回波损耗方面的性能，对于新一代全双工的高速网络应用而言，优良的回波损耗性能是极重要的。</p><h2 id="超六类网线"><a class="header-anchor" href="#超六类网线">¶</a>超六类网线</h2><p>超六类线是六类线的改进版，发布于2008年，同样是ANSI/TIA-568C.2和ISO/IEC 11801超六类/EA级标准中规定的一种双绞线电缆，主要应用于万兆位网络中。传输频率500 MHz，最大传输速度也可达到10Gbps ，在外部串扰等方面有较大改善。（支持万兆带宽）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;网线分类&lt;/h1&gt;
&lt;p&gt;网线五类、超五类、超六类网线是根据它们的传输速度、线缆对数、制造工艺和外观特征来分的。超七类网线则没有任何意思，因为现在还没有制造出来。&lt;/p&gt;
&lt;h2 id=&quot;五类网线&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#五类网线
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Word设置从某一页开始从1到n显示页码</title>
    <link href="www.strivezs.com/2020/09/10/Word%E8%AE%BE%E7%BD%AE%E4%BB%8E%E6%9F%90%E4%B8%80%E9%A1%B5%E5%BC%80%E5%A7%8B%E4%BB%8E1%E5%88%B0n%E6%98%BE%E7%A4%BA%E9%A1%B5%E7%A0%81/"/>
    <id>www.strivezs.com/2020/09/10/Word%E8%AE%BE%E7%BD%AE%E4%BB%8E%E6%9F%90%E4%B8%80%E9%A1%B5%E5%BC%80%E5%A7%8B%E4%BB%8E1%E5%88%B0n%E6%98%BE%E7%A4%BA%E9%A1%B5%E7%A0%81/</id>
    <published>2020-09-10T14:04:05.353Z</published>
    <updated>2020-09-10T14:04:05.353Z</updated>
    
    <content type="html"><![CDATA[<h1>Word设置从某一页开始从1到n显示页码</h1><h2 id="开启格式显示"><a class="header-anchor" href="#开启格式显示">¶</a>开启格式显示</h2><p>开启这个功能后，会显示你的页面的一些格式信息。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/ZGtKtQ.png" alt="figure.0"></p><h2 id="添加分节符"><a class="header-anchor" href="#添加分节符">¶</a>添加分节符</h2><p>首先在你想要开始的页面之前那个页面最后添加一个分节符。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/4649hZ.png" alt="figure.1"></p><p>添加分节符的目的是为了让之前的页面都变成一个部分(节)，然后接下来在设置的页面都是从目的页面开始进行页码编号。</p><h2 id="设置页码"><a class="header-anchor" href="#设置页码">¶</a>设置页码</h2><p>然后进入你想要的编码的页面打开页眉页脚编辑模式，先关闭链接到上一节的功能，防止页码重复。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/PBRgbI.png" alt="figure.2"></p><p>然后直接设置页码就可以了。注意要设置一下起始编号，而不是使用续前节。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/RLTb90.png" alt="figure.3"></p><p>最近在忙着研究生开学，因此博客什么的更新可以没办法跟上进度，学习方面可以会有所减少，以后会慢慢补上的QAQ。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Word设置从某一页开始从1到n显示页码&lt;/h1&gt;
&lt;h2 id=&quot;开启格式显示&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#开启格式显示&quot;&gt;¶&lt;/a&gt;开启格式显示&lt;/h2&gt;
&lt;p&gt;开启这个功能后，会显示你的页面的一些格式信息。&lt;/p&gt;
&lt;p&gt;&lt;im
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Anaconda Clean命令</title>
    <link href="www.strivezs.com/2020/09/02/Anaconda%20Clean%E5%91%BD%E4%BB%A4/"/>
    <id>www.strivezs.com/2020/09/02/Anaconda%20Clean%E5%91%BD%E4%BB%A4/</id>
    <published>2020-09-02T14:13:14.357Z</published>
    <updated>2020-09-02T14:13:14.357Z</updated>
    
    <content type="html"><![CDATA[<h1>Anaconda Clean命令</h1><p>conda 安装的包都在目录Anaconda/pkgs下。随着使用，conda 安装的包也越来越多；有时候会出现以下不好的情况：</p><p>有些包安装之后，从来没有使用过；<br>一些安装包的tar包也保留在了计算机中；<br>由于依赖或者环境等原因，某些包的不同版本重复安装。<br>上面的这些情况使得anaconda显得更加冗余，并且浪费储存；对于这些情况可以使用conda clean 净化Anaconda。</p><h2 id="查看conda-clean使用参数"><a class="header-anchor" href="#查看conda-clean使用参数">¶</a>查看conda clean使用参数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">$ conda clean -H</span><br><span class="line">usage: conda clean [-h] [-a] [-i] [-l] [-p] [-t] [-f]</span><br><span class="line">                   [-c TEMPFILES [TEMPFILES ...]] [-d] [<span class="comment">--json] [-q] [-v] [-y]</span></span><br><span class="line"></span><br><span class="line">Remove unused packages and caches.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, <span class="comment">--help            Show this help message and exit.</span></span><br><span class="line"></span><br><span class="line">Removal Targets:</span><br><span class="line">  -a, <span class="comment">--all             Remove index cache, lock files, unused cache packages,</span></span><br><span class="line">                        and tarballs.</span><br><span class="line">  -i, <span class="comment">--index-cache     Remove index cache.</span></span><br><span class="line">  -l, <span class="comment">--lock            Remove all conda lock files.</span></span><br><span class="line">  -p, <span class="comment">--packages        Remove unused packages from writable package caches.</span></span><br><span class="line">                        WARNING: This does not <span class="keyword">check</span> <span class="keyword">for</span> packages installed</span><br><span class="line">                        <span class="keyword">using</span> symlinks back <span class="keyword">to</span> the <span class="keyword">package</span> cache.</span><br><span class="line">  -t, <span class="comment">--tarballs        Remove cached package tarballs.</span></span><br><span class="line">  -f, <span class="comment">--force-pkgs-dirs</span></span><br><span class="line">                        Remove *<span class="keyword">all</span>* writable <span class="keyword">package</span> caches. This <span class="keyword">option</span> <span class="keyword">is</span></span><br><span class="line">                        <span class="keyword">not</span> included <span class="keyword">with</span> the <span class="comment">--all flag. WARNING: This will</span></span><br><span class="line">                        break environments <span class="keyword">with</span> packages installed <span class="keyword">using</span></span><br><span class="line">                        symlinks back <span class="keyword">to</span> the <span class="keyword">package</span> cache.</span><br><span class="line">  -c TEMPFILES [TEMPFILES ...], <span class="comment">--tempfiles TEMPFILES [TEMPFILES ...]</span></span><br><span class="line">                        Remove <span class="keyword">temporary</span> files that could <span class="keyword">not</span> be deleted</span><br><span class="line">                        earlier due <span class="keyword">to</span> being <span class="keyword">in</span>-use. Argument <span class="keyword">is</span> <span class="keyword">path</span>(s) <span class="keyword">to</span></span><br><span class="line">                        prefix(es) <span class="keyword">where</span> files should be <span class="keyword">found</span> <span class="keyword">and</span> removed.</span><br><span class="line"></span><br><span class="line"><span class="keyword">Output</span>, <span class="keyword">Prompt</span>, <span class="keyword">and</span> Flow Control Options:</span><br><span class="line">  -d, <span class="comment">--dry-run         Only display what would have been done.</span></span><br><span class="line">  <span class="comment">--json                Report all output as json. Suitable for using conda</span></span><br><span class="line">                        programmatically.</span><br><span class="line">  -q, <span class="comment">--quiet           Do not display progress bar.</span></span><br><span class="line">  -v, <span class="comment">--verbose         Can be used multiple times. Once for INFO, twice for</span></span><br><span class="line">                        DEBUG, three times <span class="keyword">for</span> TRACE.</span><br><span class="line">  -y, <span class="comment">--yes             Do not ask for confirmation.</span></span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line"></span><br><span class="line">    conda clean <span class="comment">--tarballs</span></span><br></pre></td></tr></table></figure><h2 id="Conda-clean使用"><a class="header-anchor" href="#Conda-clean使用">¶</a>Conda clean使用</h2><h2 id="删除从不使用的包"><a class="header-anchor" href="#删除从不使用的包">¶</a>删除从不使用的包</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda clean <span class="comment">--packages</span></span><br></pre></td></tr></table></figure><h2 id="删除tar包"><a class="header-anchor" href="#删除tar包">¶</a>删除tar包</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda clean <span class="comment">--tarballs</span></span><br></pre></td></tr></table></figure><h2 id="删除索引缓存、锁定文件、未使用过的包和tar包"><a class="header-anchor" href="#删除索引缓存、锁定文件、未使用过的包和tar包">¶</a>删除索引缓存、锁定文件、未使用过的包和tar包</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>conda clean -a</span><br></pre></td></tr></table></figure><h2 id="清楚索引缓存"><a class="header-anchor" href="#清楚索引缓存">¶</a>清楚索引缓存</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>conda clean -i</span><br></pre></td></tr></table></figure><h2 id="应用情况"><a class="header-anchor" href="#应用情况">¶</a>应用情况</h2><p>今天我在使用conda安装opencv的时候一直报unexpected error的错误，经过一番尝试发现使用</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">conda clean -i</span></span><br></pre></td></tr></table></figure><p>可以很好地解决该问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Anaconda Clean命令&lt;/h1&gt;
&lt;p&gt;conda 安装的包都在目录Anaconda/pkgs下。随着使用，conda 安装的包也越来越多；有时候会出现以下不好的情况：&lt;/p&gt;
&lt;p&gt;有些包安装之后，从来没有使用过；&lt;br&gt;
一些安装包的tar包也保留在了计算机
      
    
    </summary>
    
    
      <category term="MAC" scheme="www.strivezs.com/categories/MAC/"/>
    
      <category term="Anaconda" scheme="www.strivezs.com/categories/MAC/Anaconda/"/>
    
    
      <category term="Anaconda" scheme="www.strivezs.com/tags/Anaconda/"/>
    
      <category term="Clean" scheme="www.strivezs.com/tags/Clean/"/>
    
  </entry>
  
  <entry>
    <title>理解无偏估计量</title>
    <link href="www.strivezs.com/2020/08/25/%E7%90%86%E8%A7%A3%E6%97%A0%E5%81%8F%E4%BC%B0%E8%AE%A1%E9%87%8F/"/>
    <id>www.strivezs.com/2020/08/25/%E7%90%86%E8%A7%A3%E6%97%A0%E5%81%8F%E4%BC%B0%E8%AE%A1%E9%87%8F/</id>
    <published>2020-08-25T11:08:51.141Z</published>
    <updated>2020-08-25T11:08:51.141Z</updated>
    
    <content type="html"><![CDATA[<html><head><meta charset="utf-8"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.10.0/katex.min.css" integrity="sha256-BZ71u1P7NUocEN9mKkcAovn3q5JPm/r9xVyjWh/Kqrc=" crossorigin="anonymous"><style>.markdown-body hr::after,.markdown-body::after{clear:both}.loopLine,.messageLine0{marker-end:"url(#arrowhead)"}@font-face{font-family:octicons-link;src:url(data:font/woff;charset=utf-8;base64,d09GRgABAAAAAAZwABAAAAAACFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEU0lHAAAGaAAAAAgAAAAIAAAAAUdTVUIAAAZcAAAACgAAAAoAAQAAT1MvMgAAAyQAAABJAAAAYFYEU3RjbWFwAAADcAAAAEUAAACAAJThvmN2dCAAAATkAAAABAAAAAQAAAAAZnBnbQAAA7gAAACyAAABCUM+8IhnYXNwAAAGTAAAABAAAAAQABoAI2dseWYAAAFsAAABPAAAAZwcEq9taGVhZAAAAsgAAAA0AAAANgh4a91oaGVhAAADCAAAABoAAAAkCA8DRGhtdHgAAAL8AAAADAAAAAwGAACfbG9jYQAAAsAAAAAIAAAACABiATBtYXhwAAACqAAAABgAAAAgAA8ASm5hbWUAAAToAAABQgAAAlXu73sOcG9zdAAABiwAAAAeAAAAME3QpOBwcmVwAAAEbAAAAHYAAAB/aFGpk3jaTY6xa8JAGMW/O62BDi0tJLYQincXEypYIiGJjSgHniQ6umTsUEyLm5BV6NDBP8Tpts6F0v+k/0an2i+itHDw3v2+9+DBKTzsJNnWJNTgHEy4BgG3EMI9DCEDOGEXzDADU5hBKMIgNPZqoD3SilVaXZCER3/I7AtxEJLtzzuZfI+VVkprxTlXShWKb3TBecG11rwoNlmmn1P2WYcJczl32etSpKnziC7lQyWe1smVPy/Lt7Kc+0vWY/gAgIIEqAN9we0pwKXreiMasxvabDQMM4riO+qxM2ogwDGOZTXxwxDiycQIcoYFBLj5K3EIaSctAq2kTYiw+ymhce7vwM9jSqO8JyVd5RH9gyTt2+J/yUmYlIR0s04n6+7Vm1ozezUeLEaUjhaDSuXHwVRgvLJn1tQ7xiuVv/ocTRF42mNgZGBgYGbwZOBiAAFGJBIMAAizAFoAAABiAGIAznjaY2BkYGAA4in8zwXi+W2+MjCzMIDApSwvXzC97Z4Ig8N/BxYGZgcgl52BCSQKAA3jCV8CAABfAAAAAAQAAEB42mNgZGBg4f3vACQZQABIMjKgAmYAKEgBXgAAeNpjYGY6wTiBgZWBg2kmUxoDA4MPhGZMYzBi1AHygVLYQUCaawqDA4PChxhmh/8ODDEsvAwHgMKMIDnGL0x7gJQCAwMAJd4MFwAAAHjaY2BgYGaA4DAGRgYQkAHyGMF8NgYrIM3JIAGVYYDT+AEjAwuDFpBmA9KMDEwMCh9i/v8H8sH0/4dQc1iAmAkALaUKLgAAAHjaTY9LDsIgEIbtgqHUPpDi3gPoBVyRTmTddOmqTXThEXqrob2gQ1FjwpDvfwCBdmdXC5AVKFu3e5MfNFJ29KTQT48Ob9/lqYwOGZxeUelN2U2R6+cArgtCJpauW7UQBqnFkUsjAY/kOU1cP+DAgvxwn1chZDwUbd6CFimGXwzwF6tPbFIcjEl+vvmM/byA48e6tWrKArm4ZJlCbdsrxksL1AwWn/yBSJKpYbq8AXaaTb8AAHja28jAwOC00ZrBeQNDQOWO//sdBBgYGRiYWYAEELEwMTE4uzo5Zzo5b2BxdnFOcALxNjA6b2ByTswC8jYwg0VlNuoCTWAMqNzMzsoK1rEhNqByEyerg5PMJlYuVueETKcd/89uBpnpvIEVomeHLoMsAAe1Id4AAAAAAAB42oWQT07CQBTGv0JBhagk7HQzKxca2sJCE1hDt4QF+9JOS0nbaaYDCQfwCJ7Au3AHj+LO13FMmm6cl7785vven0kBjHCBhfpYuNa5Ph1c0e2Xu3jEvWG7UdPDLZ4N92nOm+EBXuAbHmIMSRMs+4aUEd4Nd3CHD8NdvOLTsA2GL8M9PODbcL+hD7C1xoaHeLJSEao0FEW14ckxC+TU8TxvsY6X0eLPmRhry2WVioLpkrbp84LLQPGI7c6sOiUzpWIWS5GzlSgUzzLBSikOPFTOXqly7rqx0Z1Q5BAIoZBSFihQYQOOBEdkCOgXTOHA07HAGjGWiIjaPZNW13/+lm6S9FT7rLHFJ6fQbkATOG1j2OFMucKJJsxIVfQORl+9Jyda6Sl1dUYhSCm1dyClfoeDve4qMYdLEbfqHf3O/AdDumsjAAB42mNgYoAAZQYjBmyAGYQZmdhL8zLdDEydARfoAqIAAAABAAMABwAKABMAB///AA8AAQAAAAAAAAAAAAAAAAABAAAAAA==) format('woff')}.markdown-body{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;color:#24292e;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";line-height:1.5;word-wrap:break-word}.markdown-body .pl-c{color:#6a737d}.markdown-body .pl-c1,.markdown-body .pl-s .pl-v{color:#005cc5}.markdown-body .pl-e,.markdown-body .pl-en{color:#6f42c1}.markdown-body .pl-s .pl-s1,.markdown-body .pl-smi{color:#24292e}.markdown-body .pl-ent{color:#22863a}.markdown-body .pl-k{color:#d73a49}.markdown-body .pl-pds,.markdown-body .pl-s,.markdown-body .pl-s .pl-pse .pl-s1,.markdown-body .pl-sr,.markdown-body .pl-sr .pl-cce,.markdown-body .pl-sr .pl-sra,.markdown-body .pl-sr .pl-sre{color:#032f62}.markdown-body .pl-smw,.markdown-body .pl-v{color:#e36209}.markdown-body .pl-bu{color:#b31d28}.markdown-body .pl-ii{color:#fafbfc;background-color:#b31d28}.markdown-body .pl-c2{color:#fafbfc;background-color:#d73a49}.markdown-body .pl-c2::before{content:"^M"}.markdown-body .pl-sr .pl-cce{font-weight:700;color:#22863a}.markdown-body .pl-ml{color:#735c0f}.markdown-body .pl-mh,.markdown-body .pl-mh .pl-en,.markdown-body .pl-ms{font-weight:700;color:#005cc5}.markdown-body .pl-mi{font-style:italic;color:#24292e}.markdown-body .pl-mb{font-weight:700;color:#24292e}.markdown-body .pl-md{color:#b31d28;background-color:#ffeef0}.markdown-body .pl-mi1{color:#22863a;background-color:#f0fff4}.markdown-body .pl-mc{color:#e36209;background-color:#ffebda}.markdown-body .pl-mi2{color:#f6f8fa;background-color:#005cc5}.markdown-body .pl-mdr{font-weight:700;color:#6f42c1}.markdown-body .pl-ba{color:#586069}.markdown-body .pl-sg{color:#959da5}.markdown-body .pl-corl{text-decoration:underline;color:#032f62}.markdown-body .octicon{display:inline-block;fill:currentColor;vertical-align:text-bottom}.markdown-body hr::after,.markdown-body hr::before,.markdown-body::after,.markdown-body::before{display:table;content:""}.markdown-body a{background-color:transparent;-webkit-text-decoration-skip:objects;color:#0366d6;text-decoration:none}.markdown-body a:active,.markdown-body a:hover{outline-width:0}.markdown-body h1{margin:.67em 0}.markdown-body img{border-style:none}.markdown-body svg:not(:root){overflow:hidden}.markdown-body hr{box-sizing:content-box}.markdown-body input{font:inherit;margin:0;overflow:visible;font-family:inherit;font-size:inherit;line-height:inherit}.markdown-body [type=checkbox]{box-sizing:border-box;padding:0}.markdown-body *{box-sizing:border-box}.markdown-body a:hover{text-decoration:underline}.markdown-body strong{font-weight:600}.markdown-body td,.markdown-body th{padding:0}.markdown-body blockquote{margin:0}.markdown-body ol ol,.markdown-body ul ol{list-style-type:lower-roman}.markdown-body ol ol ol,.markdown-body ol ul ol,.markdown-body ul ol ol,.markdown-body ul ul ol{list-style-type:lower-alpha}.markdown-body .task-list-item,ul.table-of-contents{list-style-type:none}.markdown-body dd{margin-left:0}.markdown-body code{font-family:SFMono-Regular,Consolas,"Liberation Mono",Menlo,Courier,monospace}.markdown-body pre{font:12px SFMono-Regular,Consolas,"Liberation Mono",Menlo,Courier,monospace;word-wrap:normal}.markdown-body .pl-0{padding-left:0!important}.markdown-body .pl-1{padding-left:4px!important}.markdown-body .pl-2{padding-left:8px!important}.markdown-body .pl-3{padding-left:16px!important}.markdown-body .pl-4{padding-left:24px!important}.markdown-body .pl-5{padding-left:32px!important}.markdown-body .pl-6{padding-left:40px!important}.markdown-body>:first-child{margin-top:0!important}.markdown-body>:last-child{margin-bottom:0!important}.markdown-body a:not([href]){color:inherit;text-decoration:none}.markdown-body .anchor{float:left;padding-right:4px;margin-left:-20px;line-height:1}.markdown-body .anchor:focus{outline:0}.markdown-body blockquote,.markdown-body dl,.markdown-body ol,.markdown-body p,.markdown-body pre,.markdown-body table,.markdown-body ul{margin-top:0;margin-bottom:16px}.markdown-body hr{overflow:hidden;background:#e1e4e8;height:.25em;padding:0;margin:24px 0;border:0}.markdown-body blockquote{padding:0 1em;color:#6a737d;border-left:.25em solid #dfe2e5}.markdown-body h1,.markdown-body h2{padding-bottom:.3em;border-bottom:1px solid #eaecef}.markdown-body blockquote>:first-child{margin-top:0}.markdown-body blockquote>:last-child{margin-bottom:0}.markdown-body h1,.markdown-body h2,.markdown-body h3,.markdown-body h4,.markdown-body h5,.markdown-body h6{margin-top:24px;margin-bottom:16px;font-weight:600;line-height:1.25}.markdown-body h1 .octicon-link,.markdown-body h2 .octicon-link,.markdown-body h3 .octicon-link,.markdown-body h4 .octicon-link,.markdown-body h5 .octicon-link,.markdown-body h6 .octicon-link{color:#1b1f23;vertical-align:middle;visibility:hidden}.markdown-body h1:hover .anchor,.markdown-body h2:hover .anchor,.markdown-body h3:hover .anchor,.markdown-body h4:hover .anchor,.markdown-body h5:hover .anchor,.markdown-body h6:hover .anchor{text-decoration:none}.markdown-body h1:hover .anchor .octicon-link,.markdown-body h2:hover .anchor .octicon-link,.markdown-body h3:hover .anchor .octicon-link,.markdown-body h4:hover .anchor .octicon-link,.markdown-body h5:hover .anchor .octicon-link,.markdown-body h6:hover .anchor .octicon-link{visibility:visible}.markdown-body h6{color:#6a737d}.markdown-body ol,.markdown-body ul{padding-left:2em}.markdown-body ol ol,.markdown-body ol ul,.markdown-body ul ol,.markdown-body ul ul{margin-top:0;margin-bottom:0}.markdown-body li>p{margin-top:16px}.markdown-body li+li{margin-top:.25em}.markdown-body dl{padding:0}.markdown-body dl dt{padding:0;margin-top:16px;font-size:1em;font-style:italic;font-weight:600}.markdown-body dl dd{padding:0 16px;margin-bottom:16px}.markdown-body table th{font-weight:600}.markdown-body table td,.markdown-body table th{padding:6px 13px;border:1px solid #dfe2e5}.markdown-body table tr{background-color:#fff;border-top:1px solid #c6cbd1}.markdown-body table tr:nth-child(2n){background-color:#f6f8fa}.markdown-body img{max-width:100%;box-sizing:content-box;background-color:#fff}.markdown-body code{padding:.2em 0;margin:0;font-size:85%;background-color:rgba(27,31,35,.05);border-radius:3px}.markdown-body code::after,.markdown-body code::before{letter-spacing:-.2em;content:"\00a0"}.markdown-body pre>code{padding:0;margin:0;font-size:100%;word-break:normal;white-space:pre;background:0 0;border:0}.markdown-body .highlight{margin-bottom:16px}.markdown-body .highlight pre{margin-bottom:0;word-break:normal}.markdown-body .highlight pre,.markdown-body pre{padding:16px;overflow:auto;font-size:85%;line-height:1.45;background-color:#f6f8fa;border-radius:3px}.markdown-body pre code{display:inline;max-width:auto;padding:0;margin:0;overflow:visible;line-height:inherit;word-wrap:normal;background-color:transparent;border:0}.markdown-body pre code::after,.markdown-body pre code::before{content:normal}.markdown-body .full-commit .btn-outline:not(:disabled):hover{color:#005cc5;border-color:#005cc5}.markdown-body kbd{display:inline-block;padding:3px 5px;font:11px SFMono-Regular,Consolas,"Liberation Mono",Menlo,Courier,monospace;line-height:10px;color:#444d56;vertical-align:middle;background-color:#fafbfc;border:1px solid #d1d5da;border-bottom-color:#c6cbd1;border-radius:3px;box-shadow:inset 0 -1px 0 #c6cbd1}.hljs,.katex .katex-html>.newline{display:block}.node text,.noteText,div.mermaidTooltip{font-family:'trebuchet ms',verdana,arial}.markdown-body :checked+.radio-label{position:relative;z-index:1;border-color:#0366d6}.markdown-body .task-list-item+.task-list-item{margin-top:3px}.markdown-body .task-list-item input{margin:0 .2em .25em -1.6em;vertical-align:middle}.markdown-body hr{border-bottom-color:#eee}.hljs{overflow-x:auto;padding:.5em;color:#333;background:#f8f8f8}.hljs-comment,.hljs-quote{color:#998;font-style:italic}.hljs-keyword,.hljs-selector-tag,.hljs-subst{color:#333;font-weight:700}.hljs-literal,.hljs-number,.hljs-tag .hljs-attr,.hljs-template-variable,.hljs-variable{color:teal}.hljs-doctag,.hljs-string{color:#d14}.hljs-section,.hljs-selector-id,.hljs-title{color:#900;font-weight:700}.hljs-subst{font-weight:400}.hljs-class .hljs-title,.hljs-type{color:#458;font-weight:700}.hljs-attribute,.hljs-name,.hljs-tag{color:navy;font-weight:400}.hljs-meta,.hljs-strong{font-weight:700}.hljs-link,.hljs-regexp{color:#009926}.hljs-bullet,.hljs-symbol{color:#990073}.hljs-built_in,.hljs-builtin-name{color:#0086b3}.hljs-meta{color:#999}.hljs-deletion{background:#fdd}.hljs-addition{background:#dfd}.hljs-emphasis{font-style:italic}.mermaid .label{color:#333}.node circle,.node ellipse,.node polygon,.node rect{fill:#ECECFF;stroke:#CCF;stroke-width:1px}.edgePath .path{stroke:#333}.edgeLabel{background-color:#e8e8e8}.cluster rect{fill:#ffffde!important;rx:4!important;stroke:#aa3!important;stroke-width:1px!important}.cluster text{fill:#333}.actor{stroke:#CCF;fill:#ECECFF}text.actor{fill:#000;stroke:none}.actor-line{stroke:grey}.messageLine0,.messageLine1{stroke-width:1.5;stroke-dasharray:"2 2";stroke:#333}#arrowhead{fill:#333}#crosshead path{fill:#333!important;stroke:#333!important}.messageText{fill:#333;stroke:none}.labelBox{stroke:#CCF;fill:#ECECFF}.labelText,.loopText{fill:#000;stroke:none}.loopLine{stroke-width:2;stroke-dasharray:"2 2";stroke:#CCF}.note{stroke:#aa3;fill:#fff5ad}.noteText{fill:#000;stroke:none;font-size:14px}.section{stroke:none;opacity:.2}.section0{fill:rgba(102,102,255,.49)}.section2{fill:#fff400}.section1,.section3{fill:#fff;opacity:.2}.sectionTitle0,.sectionTitle1,.sectionTitle2,.sectionTitle3{fill:#333}.sectionTitle{text-anchor:start;font-size:11px;text-height:14px}.grid .tick{stroke:#d3d3d3;opacity:.3;shape-rendering:crispEdges}.grid path{stroke-width:0}.today{fill:none;stroke:red;stroke-width:2px}.task{stroke-width:2}.taskText{text-anchor:middle;font-size:11px}.taskTextOutsideRight{fill:#000;text-anchor:start;font-size:11px}.taskTextOutsideLeft{fill:#000;text-anchor:end;font-size:11px}.taskText0,.taskText1,.taskText2,.taskText3{fill:#fff}.task0,.task1,.task2,.task3{fill:#8a90dd;stroke:#534fbc}.taskTextOutside0,.taskTextOutside1,.taskTextOutside2,.taskTextOutside3{fill:#000}.active0,.active1,.active2,.active3{fill:#bfc7ff;stroke:#534fbc}.activeText0,.activeText1,.activeText2,.activeText3{fill:#000!important}.done0,.done1,.done2,.done3{stroke:grey;fill:#d3d3d3;stroke-width:2}.doneText0,.doneText1,.doneText2,.doneText3{fill:#000!important}.crit0,.crit1,.crit2,.crit3{stroke:#f88;fill:red;stroke-width:2}.activeCrit0,.activeCrit1,.activeCrit2,.activeCrit3{stroke:#f88;fill:#bfc7ff;stroke-width:2}.doneCrit0,.doneCrit1,.doneCrit2,.doneCrit3{stroke:#f88;fill:#d3d3d3;stroke-width:2;cursor:pointer;shape-rendering:crispEdges}.activeCritText0,.activeCritText1,.activeCritText2,.activeCritText3,.doneCritText0,.doneCritText1,.doneCritText2,.doneCritText3{fill:#000!important}.titleText{text-anchor:middle;font-size:18px;fill:#000}.node text{font-size:14px}div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-size:12px;background:#ffffde;border:1px solid #aa3;border-radius:2px;pointer-events:none;z-index:100}@font-face{font-family:KaTeX_AMS;font-style:normal;font-weight:400;src:url(fonts/KaTeX_AMS-Regular.woff2) format("woff2"),url(fonts/KaTeX_AMS-Regular.woff) format("woff"),url(fonts/KaTeX_AMS-Regular.ttf) format("truetype")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Caligraphic-Bold.woff2) format("woff2"),url(fonts/KaTeX_Caligraphic-Bold.woff) format("woff"),url(fonts/KaTeX_Caligraphic-Bold.ttf) format("truetype")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Caligraphic-Regular.woff2) format("woff2"),url(fonts/KaTeX_Caligraphic-Regular.woff) format("woff"),url(fonts/KaTeX_Caligraphic-Regular.ttf) format("truetype")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Fraktur-Bold.woff2) format("woff2"),url(fonts/KaTeX_Fraktur-Bold.woff) format("woff"),url(fonts/KaTeX_Fraktur-Bold.ttf) format("truetype")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Fraktur-Regular.woff2) format("woff2"),url(fonts/KaTeX_Fraktur-Regular.woff) format("woff"),url(fonts/KaTeX_Fraktur-Regular.ttf) format("truetype")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Main-Bold.woff2) format("woff2"),url(fonts/KaTeX_Main-Bold.woff) format("woff"),url(fonts/KaTeX_Main-Bold.ttf) format("truetype")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Main-BoldItalic.woff2) format("woff2"),url(fonts/KaTeX_Main-BoldItalic.woff) format("woff"),url(fonts/KaTeX_Main-BoldItalic.ttf) format("truetype")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Main-Italic.woff2) format("woff2"),url(fonts/KaTeX_Main-Italic.woff) format("woff"),url(fonts/KaTeX_Main-Italic.ttf) format("truetype")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Main-Regular.woff2) format("woff2"),url(fonts/KaTeX_Main-Regular.woff) format("woff"),url(fonts/KaTeX_Main-Regular.ttf) format("truetype")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Math-BoldItalic.woff2) format("woff2"),url(fonts/KaTeX_Math-BoldItalic.woff) format("woff"),url(fonts/KaTeX_Math-BoldItalic.ttf) format("truetype")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Math-Italic.woff2) format("woff2"),url(fonts/KaTeX_Math-Italic.woff) format("woff"),url(fonts/KaTeX_Math-Italic.ttf) format("truetype")}@font-face{font-family:KaTeX_SansSerif;font-style:normal;font-weight:700;src:url(fonts/KaTeX_SansSerif-Bold.woff2) format("woff2"),url(fonts/KaTeX_SansSerif-Bold.woff) format("woff"),url(fonts/KaTeX_SansSerif-Bold.ttf) format("truetype")}@font-face{font-family:KaTeX_SansSerif;font-style:italic;font-weight:400;src:url(fonts/KaTeX_SansSerif-Italic.woff2) format("woff2"),url(fonts/KaTeX_SansSerif-Italic.woff) format("woff"),url(fonts/KaTeX_SansSerif-Italic.ttf) format("truetype")}@font-face{font-family:KaTeX_SansSerif;font-style:normal;font-weight:400;src:url(fonts/KaTeX_SansSerif-Regular.woff2) format("woff2"),url(fonts/KaTeX_SansSerif-Regular.woff) format("woff"),url(fonts/KaTeX_SansSerif-Regular.ttf) format("truetype")}@font-face{font-family:KaTeX_Script;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Script-Regular.woff2) format("woff2"),url(fonts/KaTeX_Script-Regular.woff) format("woff"),url(fonts/KaTeX_Script-Regular.ttf) format("truetype")}@font-face{font-family:KaTeX_Size1;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size1-Regular.woff2) format("woff2"),url(fonts/KaTeX_Size1-Regular.woff) format("woff"),url(fonts/KaTeX_Size1-Regular.ttf) format("truetype")}@font-face{font-family:KaTeX_Size2;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size2-Regular.woff2) format("woff2"),url(fonts/KaTeX_Size2-Regular.woff) format("woff"),url(fonts/KaTeX_Size2-Regular.ttf) format("truetype")}@font-face{font-family:KaTeX_Size3;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size3-Regular.woff2) format("woff2"),url(fonts/KaTeX_Size3-Regular.woff) format("woff"),url(fonts/KaTeX_Size3-Regular.ttf) format("truetype")}@font-face{font-family:KaTeX_Size4;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size4-Regular.woff2) format("woff2"),url(fonts/KaTeX_Size4-Regular.woff) format("woff"),url(fonts/KaTeX_Size4-Regular.ttf) format("truetype")}@font-face{font-family:KaTeX_Typewriter;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Typewriter-Regular.woff2) format("woff2"),url(fonts/KaTeX_Typewriter-Regular.woff) format("woff"),url(fonts/KaTeX_Typewriter-Regular.ttf) format("truetype")}.katex{font:400 1.21em KaTeX_Main,Times New Roman,serif;line-height:1.2;text-indent:0;text-rendering:auto}.katex .mathit,.katex .textit{font-style:italic}.katex *{-ms-high-contrast-adjust:none!important}.katex .katex-mathml{border:0;clip:rect(1px,1px,1px,1px);height:1px;overflow:hidden;padding:0;position:absolute;width:1px}.katex .base{position:relative;white-space:nowrap;width:min-content}.katex .base,.katex .strut{display:inline-block}.katex .textbf{font-weight:700}.katex .textrm{font-family:KaTeX_Main}.katex .textsf{font-family:KaTeX_SansSerif}.katex .texttt{font-family:KaTeX_Typewriter}.katex .mathdefault{font-family:KaTeX_Math;font-style:italic}.katex .mathit{font-family:KaTeX_Main}.katex .mathrm{font-style:normal}.katex .mathbf{font-family:KaTeX_Main;font-weight:700}.katex .boldsymbol{font-family:KaTeX_Math;font-style:italic;font-weight:700}.katex .amsrm,.katex .mathbb,.katex .textbb{font-family:KaTeX_AMS}.katex .mathcal{font-family:KaTeX_Caligraphic}.katex .mathfrak,.katex .textfrak{font-family:KaTeX_Fraktur}.katex .mathtt{font-family:KaTeX_Typewriter}.katex .mathscr,.katex .textscr{font-family:KaTeX_Script}.katex .mathsf,.katex .textsf{font-family:KaTeX_SansSerif}.katex .mathboldsf,.katex .textboldsf{font-family:KaTeX_SansSerif;font-weight:700}.katex .mathitsf,.katex .textitsf{font-family:KaTeX_SansSerif;font-style:italic}.katex .mainrm{font-family:KaTeX_Main;font-style:normal}.katex .vlist-t{display:inline-table;table-layout:fixed}.katex .vlist-r{display:table-row}.katex .vlist{display:table-cell;position:relative;vertical-align:bottom}.katex .vlist>span{display:block;height:0;position:relative}.katex .vlist>span>span{display:inline-block}.katex .vlist>span>.pstrut{overflow:hidden;width:0}.katex .vlist-t2{margin-right:-2px}.katex .vlist-s{display:table-cell;font-size:1px;min-width:2px;vertical-align:bottom;width:2px}.katex .clap>.fix,.katex .fontsize-ensurer,.katex .hdashline,.katex .llap>.fix,.katex .mfrac .frac-line,.katex .mspace,.katex .nulldelimiter,.katex .rlap>.fix,.katex .rule,.katex .sizing{display:inline-block}.katex .msupsub{text-align:left}.katex .accent>.vlist-t,.katex .mfrac>span>span,.katex .mtable .col-align-c>.vlist-t,.katex .op-limits>.vlist-t{text-align:center}.katex .mfrac .frac-line{border-bottom-style:solid;width:100%}.katex .hdashline,.katex .hline,.katex .mfrac .frac-line,.katex .overline .overline-line,.katex .rule,.katex .underline .underline-line{min-height:1px}.katex .clap,.katex .llap,.katex .rlap{position:relative;width:0}.katex .clap>.inner,.katex .llap>.inner,.katex .rlap>.inner{position:absolute}.katex .accent .accent-body,.katex .delimcenter,.katex .op-symbol,.katex .rule{position:relative}.katex .llap>.inner{right:0}.katex .clap>.inner,.katex .rlap>.inner{left:0}.katex .clap>.inner>span{margin-left:-50%;margin-right:50%}.katex .rule{border:0 solid}.katex .hline,.katex .overline .overline-line,.katex .underline .underline-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline{border-bottom-style:dashed;width:100%}.katex .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.katex .fontsize-ensurer.reset-size1.size1,.katex .sizing.reset-size1.size1{font-size:1em}.katex .fontsize-ensurer.reset-size1.size2,.katex .sizing.reset-size1.size2{font-size:1.2em}.katex .fontsize-ensurer.reset-size1.size3,.katex .sizing.reset-size1.size3{font-size:1.4em}.katex .fontsize-ensurer.reset-size1.size4,.katex .sizing.reset-size1.size4{font-size:1.6em}.katex .fontsize-ensurer.reset-size1.size5,.katex .sizing.reset-size1.size5{font-size:1.8em}.katex .fontsize-ensurer.reset-size1.size6,.katex .sizing.reset-size1.size6{font-size:2em}.katex .fontsize-ensurer.reset-size1.size7,.katex .sizing.reset-size1.size7{font-size:2.4em}.katex .fontsize-ensurer.reset-size1.size8,.katex .sizing.reset-size1.size8{font-size:2.88em}.katex .fontsize-ensurer.reset-size1.size9,.katex .sizing.reset-size1.size9{font-size:3.456em}.katex .fontsize-ensurer.reset-size1.size10,.katex .sizing.reset-size1.size10{font-size:4.148em}.katex .fontsize-ensurer.reset-size1.size11,.katex .sizing.reset-size1.size11{font-size:4.976em}.katex .fontsize-ensurer.reset-size2.size1,.katex .sizing.reset-size2.size1{font-size:.83333333em}.katex .fontsize-ensurer.reset-size2.size2,.katex .sizing.reset-size2.size2{font-size:1em}.katex .fontsize-ensurer.reset-size2.size3,.katex .sizing.reset-size2.size3{font-size:1.16666667em}.katex .fontsize-ensurer.reset-size2.size4,.katex .sizing.reset-size2.size4{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size2.size5,.katex .sizing.reset-size2.size5{font-size:1.5em}.katex .fontsize-ensurer.reset-size2.size6,.katex .sizing.reset-size2.size6{font-size:1.66666667em}.katex .fontsize-ensurer.reset-size2.size7,.katex .sizing.reset-size2.size7{font-size:2em}.katex .fontsize-ensurer.reset-size2.size8,.katex .sizing.reset-size2.size8{font-size:2.4em}.katex .fontsize-ensurer.reset-size2.size9,.katex .sizing.reset-size2.size9{font-size:2.88em}.katex .fontsize-ensurer.reset-size2.size10,.katex .sizing.reset-size2.size10{font-size:3.45666667em}.katex .fontsize-ensurer.reset-size2.size11,.katex .sizing.reset-size2.size11{font-size:4.14666667em}.katex .fontsize-ensurer.reset-size3.size1,.katex .sizing.reset-size3.size1{font-size:.71428571em}.katex .fontsize-ensurer.reset-size3.size2,.katex .sizing.reset-size3.size2{font-size:.85714286em}.katex .fontsize-ensurer.reset-size3.size3,.katex .sizing.reset-size3.size3{font-size:1em}.katex .fontsize-ensurer.reset-size3.size4,.katex .sizing.reset-size3.size4{font-size:1.14285714em}.katex .fontsize-ensurer.reset-size3.size5,.katex .sizing.reset-size3.size5{font-size:1.28571429em}.katex .fontsize-ensurer.reset-size3.size6,.katex .sizing.reset-size3.size6{font-size:1.42857143em}.katex .fontsize-ensurer.reset-size3.size7,.katex .sizing.reset-size3.size7{font-size:1.71428571em}.katex .fontsize-ensurer.reset-size3.size8,.katex .sizing.reset-size3.size8{font-size:2.05714286em}.katex .fontsize-ensurer.reset-size3.size9,.katex .sizing.reset-size3.size9{font-size:2.46857143em}.katex .fontsize-ensurer.reset-size3.size10,.katex .sizing.reset-size3.size10{font-size:2.96285714em}.katex .fontsize-ensurer.reset-size3.size11,.katex .sizing.reset-size3.size11{font-size:3.55428571em}.katex .fontsize-ensurer.reset-size4.size1,.katex .sizing.reset-size4.size1{font-size:.625em}.katex .fontsize-ensurer.reset-size4.size2,.katex .sizing.reset-size4.size2{font-size:.75em}.katex .fontsize-ensurer.reset-size4.size3,.katex .sizing.reset-size4.size3{font-size:.875em}.katex .fontsize-ensurer.reset-size4.size4,.katex .sizing.reset-size4.size4{font-size:1em}.katex .fontsize-ensurer.reset-size4.size5,.katex .sizing.reset-size4.size5{font-size:1.125em}.katex .fontsize-ensurer.reset-size4.size6,.katex .sizing.reset-size4.size6{font-size:1.25em}.katex .fontsize-ensurer.reset-size4.size7,.katex .sizing.reset-size4.size7{font-size:1.5em}.katex .fontsize-ensurer.reset-size4.size8,.katex .sizing.reset-size4.size8{font-size:1.8em}.katex .fontsize-ensurer.reset-size4.size9,.katex .sizing.reset-size4.size9{font-size:2.16em}.katex .fontsize-ensurer.reset-size4.size10,.katex .sizing.reset-size4.size10{font-size:2.5925em}.katex .fontsize-ensurer.reset-size4.size11,.katex .sizing.reset-size4.size11{font-size:3.11em}.katex .fontsize-ensurer.reset-size5.size1,.katex .sizing.reset-size5.size1{font-size:.55555556em}.katex .fontsize-ensurer.reset-size5.size2,.katex .sizing.reset-size5.size2{font-size:.66666667em}.katex .fontsize-ensurer.reset-size5.size3,.katex .sizing.reset-size5.size3{font-size:.77777778em}.katex .fontsize-ensurer.reset-size5.size4,.katex .sizing.reset-size5.size4{font-size:.88888889em}.katex .fontsize-ensurer.reset-size5.size5,.katex .sizing.reset-size5.size5{font-size:1em}.katex .fontsize-ensurer.reset-size5.size6,.katex .sizing.reset-size5.size6{font-size:1.11111111em}.katex .fontsize-ensurer.reset-size5.size7,.katex .sizing.reset-size5.size7{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size5.size8,.katex .sizing.reset-size5.size8{font-size:1.6em}.katex .fontsize-ensurer.reset-size5.size9,.katex .sizing.reset-size5.size9{font-size:1.92em}.katex .fontsize-ensurer.reset-size5.size10,.katex .sizing.reset-size5.size10{font-size:2.30444444em}.katex .fontsize-ensurer.reset-size5.size11,.katex .sizing.reset-size5.size11{font-size:2.76444444em}.katex .fontsize-ensurer.reset-size6.size1,.katex .sizing.reset-size6.size1{font-size:.5em}.katex .fontsize-ensurer.reset-size6.size2,.katex .sizing.reset-size6.size2{font-size:.6em}.katex .fontsize-ensurer.reset-size6.size3,.katex .sizing.reset-size6.size3{font-size:.7em}.katex .fontsize-ensurer.reset-size6.size4,.katex .sizing.reset-size6.size4{font-size:.8em}.katex .fontsize-ensurer.reset-size6.size5,.katex .sizing.reset-size6.size5{font-size:.9em}.katex .fontsize-ensurer.reset-size6.size6,.katex .sizing.reset-size6.size6{font-size:1em}.katex .fontsize-ensurer.reset-size6.size7,.katex .sizing.reset-size6.size7{font-size:1.2em}.katex .fontsize-ensurer.reset-size6.size8,.katex .sizing.reset-size6.size8{font-size:1.44em}.katex .fontsize-ensurer.reset-size6.size9,.katex .sizing.reset-size6.size9{font-size:1.728em}.katex .fontsize-ensurer.reset-size6.size10,.katex .sizing.reset-size6.size10{font-size:2.074em}.katex .fontsize-ensurer.reset-size6.size11,.katex .sizing.reset-size6.size11{font-size:2.488em}.katex .fontsize-ensurer.reset-size7.size1,.katex .sizing.reset-size7.size1{font-size:.41666667em}.katex .fontsize-ensurer.reset-size7.size2,.katex .sizing.reset-size7.size2{font-size:.5em}.katex .fontsize-ensurer.reset-size7.size3,.katex .sizing.reset-size7.size3{font-size:.58333333em}.katex .fontsize-ensurer.reset-size7.size4,.katex .sizing.reset-size7.size4{font-size:.66666667em}.katex .fontsize-ensurer.reset-size7.size5,.katex .sizing.reset-size7.size5{font-size:.75em}.katex .fontsize-ensurer.reset-size7.size6,.katex .sizing.reset-size7.size6{font-size:.83333333em}.katex .fontsize-ensurer.reset-size7.size7,.katex .sizing.reset-size7.size7{font-size:1em}.katex .fontsize-ensurer.reset-size7.size8,.katex .sizing.reset-size7.size8{font-size:1.2em}.katex .fontsize-ensurer.reset-size7.size9,.katex .sizing.reset-size7.size9{font-size:1.44em}.katex .fontsize-ensurer.reset-size7.size10,.katex .sizing.reset-size7.size10{font-size:1.72833333em}.katex .fontsize-ensurer.reset-size7.size11,.katex .sizing.reset-size7.size11{font-size:2.07333333em}.katex .fontsize-ensurer.reset-size8.size1,.katex .sizing.reset-size8.size1{font-size:.34722222em}.katex .fontsize-ensurer.reset-size8.size2,.katex .sizing.reset-size8.size2{font-size:.41666667em}.katex .fontsize-ensurer.reset-size8.size3,.katex .sizing.reset-size8.size3{font-size:.48611111em}.katex .fontsize-ensurer.reset-size8.size4,.katex .sizing.reset-size8.size4{font-size:.55555556em}.katex .fontsize-ensurer.reset-size8.size5,.katex .sizing.reset-size8.size5{font-size:.625em}.katex .fontsize-ensurer.reset-size8.size6,.katex .sizing.reset-size8.size6{font-size:.69444444em}.katex .fontsize-ensurer.reset-size8.size7,.katex .sizing.reset-size8.size7{font-size:.83333333em}.katex .fontsize-ensurer.reset-size8.size8,.katex .sizing.reset-size8.size8{font-size:1em}.katex .fontsize-ensurer.reset-size8.size9,.katex .sizing.reset-size8.size9{font-size:1.2em}.katex .fontsize-ensurer.reset-size8.size10,.katex .sizing.reset-size8.size10{font-size:1.44027778em}.katex .fontsize-ensurer.reset-size8.size11,.katex .sizing.reset-size8.size11{font-size:1.72777778em}.katex .fontsize-ensurer.reset-size9.size1,.katex .sizing.reset-size9.size1{font-size:.28935185em}.katex .fontsize-ensurer.reset-size9.size2,.katex .sizing.reset-size9.size2{font-size:.34722222em}.katex .fontsize-ensurer.reset-size9.size3,.katex .sizing.reset-size9.size3{font-size:.40509259em}.katex .fontsize-ensurer.reset-size9.size4,.katex .sizing.reset-size9.size4{font-size:.46296296em}.katex .fontsize-ensurer.reset-size9.size5,.katex .sizing.reset-size9.size5{font-size:.52083333em}.katex .fontsize-ensurer.reset-size9.size6,.katex .sizing.reset-size9.size6{font-size:.5787037em}.katex .fontsize-ensurer.reset-size9.size7,.katex .sizing.reset-size9.size7{font-size:.69444444em}.katex .fontsize-ensurer.reset-size9.size8,.katex .sizing.reset-size9.size8{font-size:.83333333em}.katex .fontsize-ensurer.reset-size9.size9,.katex .sizing.reset-size9.size9{font-size:1em}.katex .fontsize-ensurer.reset-size9.size10,.katex .sizing.reset-size9.size10{font-size:1.20023148em}.katex .fontsize-ensurer.reset-size9.size11,.katex .sizing.reset-size9.size11{font-size:1.43981481em}.katex .fontsize-ensurer.reset-size10.size1,.katex .sizing.reset-size10.size1{font-size:.24108004em}.katex .fontsize-ensurer.reset-size10.size2,.katex .sizing.reset-size10.size2{font-size:.28929605em}.katex .fontsize-ensurer.reset-size10.size3,.katex .sizing.reset-size10.size3{font-size:.33751205em}.katex .fontsize-ensurer.reset-size10.size4,.katex .sizing.reset-size10.size4{font-size:.38572806em}.katex .fontsize-ensurer.reset-size10.size5,.katex .sizing.reset-size10.size5{font-size:.43394407em}.katex .fontsize-ensurer.reset-size10.size6,.katex .sizing.reset-size10.size6{font-size:.48216008em}.katex .fontsize-ensurer.reset-size10.size7,.katex .sizing.reset-size10.size7{font-size:.57859209em}.katex .fontsize-ensurer.reset-size10.size8,.katex .sizing.reset-size10.size8{font-size:.69431051em}.katex .fontsize-ensurer.reset-size10.size9,.katex .sizing.reset-size10.size9{font-size:.83317261em}.katex .fontsize-ensurer.reset-size10.size10,.katex .sizing.reset-size10.size10{font-size:1em}.katex .fontsize-ensurer.reset-size10.size11,.katex .sizing.reset-size10.size11{font-size:1.19961427em}.katex .fontsize-ensurer.reset-size11.size1,.katex .sizing.reset-size11.size1{font-size:.20096463em}.katex .fontsize-ensurer.reset-size11.size2,.katex .sizing.reset-size11.size2{font-size:.24115756em}.katex .fontsize-ensurer.reset-size11.size3,.katex .sizing.reset-size11.size3{font-size:.28135048em}.katex .fontsize-ensurer.reset-size11.size4,.katex .sizing.reset-size11.size4{font-size:.32154341em}.katex .fontsize-ensurer.reset-size11.size5,.katex .sizing.reset-size11.size5{font-size:.36173633em}.katex .fontsize-ensurer.reset-size11.size6,.katex .sizing.reset-size11.size6{font-size:.40192926em}.katex .fontsize-ensurer.reset-size11.size7,.katex .sizing.reset-size11.size7{font-size:.48231511em}.katex .fontsize-ensurer.reset-size11.size8,.katex .sizing.reset-size11.size8{font-size:.57877814em}.katex .fontsize-ensurer.reset-size11.size9,.katex .sizing.reset-size11.size9{font-size:.69453376em}.katex .fontsize-ensurer.reset-size11.size10,.katex .sizing.reset-size11.size10{font-size:.83360129em}.katex .fontsize-ensurer.reset-size11.size11,.katex .sizing.reset-size11.size11{font-size:1em}.katex .delimsizing.size1{font-family:KaTeX_Size1}.katex .delimsizing.size2{font-family:KaTeX_Size2}.katex .delimsizing.size3{font-family:KaTeX_Size3}.katex .delimsizing.size4{font-family:KaTeX_Size4}.katex .delimsizing.mult .delim-size1>span{font-family:KaTeX_Size1}.katex .delimsizing.mult .delim-size4>span{font-family:KaTeX_Size4}.katex .nulldelimiter{width:.12em}.katex .op-symbol.small-op{font-family:KaTeX_Size1}.katex .op-symbol.large-op{font-family:KaTeX_Size2}.katex .accent .accent-body:not(.accent-full){width:0}.katex .overlay{display:block}.katex .mtable .vertical-separator{border-right:.05em solid;display:inline-block;margin:0 -.025em;min-width:1px}.katex .mtable .vs-dashed{border-right:.05em dashed}.katex .mtable .arraycolsep{display:inline-block}.katex .mtable .col-align-l>.vlist-t{text-align:left}.katex .mtable .col-align-r>.vlist-t{text-align:right}.katex .svg-align{text-align:left}.katex .mover,.katex .munder,.katex .x-arrow,.katex-display,div[data-role=mermaid]{text-align:center}.katex svg{display:block;fill:currentColor;fill-opacity:1;fill-rule:nonzero;height:inherit;position:absolute;stroke:currentColor;stroke-dasharray:none;stroke-dashoffset:0;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-width:1;width:100%}.katex .hide-tail,.katex .stretchy{overflow:hidden;position:relative;width:100%}.katex svg path{stroke:none}.katex .stretchy{display:block}.katex .stretchy:after,.katex .stretchy:before{content:""}.katex .brace-center,.katex .brace-left,.katex .brace-right,.katex .halfarrow-left,.katex .halfarrow-right{position:absolute;overflow:hidden}.katex .halfarrow-left{left:0;width:50.2%}.katex .halfarrow-right{right:0;width:50.2%}.katex .brace-left{left:0;width:25.1%}.katex .brace-center{left:25%;width:50%}.katex .brace-right{right:0;width:25.1%}.katex .x-arrow-pad{padding:0 .5em}.katex .boxpad{padding:0 .3em}.katex .fbox{border:.04em solid #000;box-sizing:border-box}.katex .fcolorbox{border:.04em solid;box-sizing:border-box}.katex .cancel-pad{padding:0 .2em}.katex .cancel-lap{margin-left:-.2em;margin-right:-.2em}.katex .sout{border-bottom-style:solid;border-bottom-width:.08em}.katex-display{display:block;margin:1em 0}.katex-display>.katex{display:block;text-align:center;white-space:nowrap}.katex-display>.katex>.katex-html{display:block;position:relative}.katex-display>.katex>.katex-html>.tag{position:absolute;right:0}body{margin:0;padding:0}.markdown-body{min-width:256px;max-width:978px;margin:0 auto;padding:20px;font-size:14px}.markdown-body h1{font-size:2.25em}.markdown-body h2{font-size:1.75em}.markdown-body h3{font-size:1.5em}.markdown-body h4{font-size:1.25em}.markdown-body h5,.markdown-body h6{font-size:1em}div[data-role=mermaid] svg{height:auto}hr.footnotes-sep{margin:64px 0 32px;height:1px}.footnotes{font-size:90%;padding-left:16px}li.footnote-item>p{margin:8px 0}.danger,.info,.success,.warning{padding:15px;margin-bottom:20px;border:1px solid transparent;border-radius:4px}.danger>p:last-child,.info>p:last-child,.success>p:last-child,.warning>p:last-child{margin-bottom:0}.success{color:#3c763d;background-color:#dff0d8;border-color:#d6e9c6}.info{color:#31708f;background-color:#d9edf7;border-color:#bce8f1}.warning{color:#8a6d3b;background-color:#fcf8e3;border-color:#faebcc}.danger{color:#a94442;background-color:#f2dede;border-color:#ebccd1}abbr[title]{cursor:help;border-bottom:1px dotted #777}ul.table-of-contents li{margin:4px 0}.markdown-body table{border-spacing:0;border-collapse:collapse;width:auto;display:inline-block;overflow:hidden}.markdown-body table td,.markdown-body table th{word-break:break-all}</style><meta name="generator" content="Hexo 4.2.0"><link rel="alternate" href="/atom.xml" title="StriveZs的博客" type="application/atom+xml"></head><article class="markdown-body" id="preview" data-open-title="Hide Preview" data-closed-title="Show Preview" style="padding-bottom: 0px;"><div><h1 id="理解无偏估计量" data-source-line="1"><a class="markdownIt-Anchor" href="#理解无偏估计量"></a>理解无偏估计量</h1><p data-source-line="2">现实中常常有这样的问题，比如，想知道全体女性的身高均值 <code data-role="inline-katex" data-src="%20%5Cmu%20" data-processed="%20%5Cmu%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex"> \mu </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span></code> ，但是没有办法把每个女性都进行测量，只有抽样一些女性来对全体女性的身高进行估计.</p><p data-source-line="4">那么根据抽样数据怎么样进行推断？什么样的推断方法可以称为好。</p><h2 id="无偏性" data-source-line="6"><a class="markdownIt-Anchor" href="#无偏性"></a>无偏性</h2><p data-source-line="7">比如我们抽样到的女性身高为: <code data-role="inline-katex" data-src="%20%7Bx_%7B1%7D%2Cx_%7B2%7D%2C%5Cdots%2Cx_%7Bn%7D%7D%20" data-processed="%20%7Bx_%7B1%7D%2Cx_%7B2%7D%2C%5Cdots%2Cx_%7Bn%7D%7D%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex"> {x_{1},x_{2},\dots,x_{n}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.30110799999999993em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.30110799999999993em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.151392em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span></span></span></span></span></code>，那么:</p><p data-source-line="9"><code data-role="inline-katex" data-src="%20%5Coverline%7BX%7D%3D%5Cfrac%7Bx_%7B1%7D%2Bx_%7B2%7D%2B%5Cdots%2Bx_%7Bn%7D%7D%7Bn%7D%20" data-processed="%20%5Coverline%7BX%7D%3D%5Cfrac%7Bx_%7B1%7D%2Bx_%7B2%7D%2B%5Cdots%2Bx_%7Bn%7D%7D%7Bn%7D%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>X</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex"> \overline{X}=\frac{x_{1}+x_{2}+\dots+x_{n}}{n} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.8833300000000001em; vertical-align: 0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8833300000000001em;"><span class="" style="top: -3em;"><span class="pstrut" style="height: 3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.07847em;">X</span></span></span><span class="" style="top: -3.80333em;"><span class="pstrut" style="height: 3em;"></span><span class="overline-line" style="border-bottom-width: 0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height: 1.1634309999999999em; vertical-align: -0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.8184309999999999em;"><span class="" style="top: -2.6550000000000002em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="" style="top: -3.23em;"><span class="pstrut" style="height: 3em;"></span><span class="frac-line" style="border-bottom-width: 0.04em;"></span></span><span class="" style="top: -3.4101em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31731428571428577em;"><span class="" style="top: -2.357em; margin-left: 0em; margin-right: 0.07142857142857144em;"><span class="pstrut" style="height: 2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.143em;"><span class=""></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31731428571428577em;"><span class="" style="top: -2.357em; margin-left: 0em; margin-right: 0.07142857142857144em;"><span class="pstrut" style="height: 2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.143em;"><span class=""></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="minner mtight">⋯</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.16454285714285719em;"><span class="" style="top: -2.357em; margin-left: 0em; margin-right: 0.07142857142857144em;"><span class="pstrut" style="height: 2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.143em;"><span class=""></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.345em;"><span class=""></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></code></p><p data-source-line="11">这是对 <code data-role="inline-katex" data-src="%20%5Cmu%20" data-processed="%20%5Cmu%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex"> \mu </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span></code> 一个不错的估计，为什么，因为它是无偏估计。<br>首先，真正女性的身高均值为 <code data-role="inline-katex" data-src="%20%5Cmu%20" data-processed="%20%5Cmu%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex"> \mu </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span></code> ，但是我们不能计算得到，只能通过估计得到其近似值 <code data-role="inline-katex" data-src="%20%5Coverline%7BX%7D%20" data-processed="%20%5Coverline%7BX%7D%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>X</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex"> \overline{X} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.8833300000000001em; vertical-align: 0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8833300000000001em;"><span class="" style="top: -3em;"><span class="pstrut" style="height: 3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.07847em;">X</span></span></span><span class="" style="top: -3.80333em;"><span class="pstrut" style="height: 3em;"></span><span class="overline-line" style="border-bottom-width: 0.04em;"></span></span></span></span></span></span></span></span></span></code>：</p><p data-source-line="14"><img data-src="https%3A%2F%2Fgitee.com%2Fzyp521%2Fupload_image%2Fraw%2Fmaster%2Fu7C5n2.png" alt="figure.1" src="https://gitee.com/zyp521/upload_image/raw/master/u7C5n2.png?ynotemdtimestamp=1598353714256" data-processed="https%3A%2F%2Fgitee.com%2Fzyp521%2Fupload_image%2Fraw%2Fmaster%2Fu7C5n2.png"></p><p data-source-line="16">但是实际的估计均值和我们采样的数据相关，它是变化的，因此不同采样得到的 <code data-role="inline-katex" data-src="%20%5Coverline%7BX%7D%20" data-processed="%20%5Coverline%7BX%7D%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>X</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex"> \overline{X} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.8833300000000001em; vertical-align: 0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8833300000000001em;"><span class="" style="top: -3em;"><span class="pstrut" style="height: 3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.07847em;">X</span></span></span><span class="" style="top: -3.80333em;"><span class="pstrut" style="height: 3em;"></span><span class="overline-line" style="border-bottom-width: 0.04em;"></span></span></span></span></span></span></span></span></span></code> 是围绕 <code data-role="inline-katex" data-src="%20%5Cmu%20" data-processed="%20%5Cmu%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex"> \mu </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span></code> 左右波动的。</p><p data-source-line="18">这个内容有点像打靶，只要命中在靶心周围就是不错的成绩:</p><p data-source-line="20"><img data-src="https%3A%2F%2Fgitee.com%2Fzyp521%2Fupload_image%2Fraw%2Fmaster%2FJKHx0y.png" alt="figure.2" src="https://gitee.com/zyp521/upload_image/raw/master/JKHx0y.png?ynotemdtimestamp=1598353714256" data-processed="https%3A%2F%2Fgitee.com%2Fzyp521%2Fupload_image%2Fraw%2Fmaster%2FJKHx0y.png"></p><p data-source-line="22">如果出现偏差的话，就出现类似如下图的效果，偏离靶心:</p><p data-source-line="24"><img data-src="https%3A%2F%2Fgitee.com%2Fzyp521%2Fupload_image%2Fraw%2Fmaster%2FwKPLM1.png" alt="figure.3" src="https://gitee.com/zyp521/upload_image/raw/master/wKPLM1.png?ynotemdtimestamp=1598353714256" data-processed="https%3A%2F%2Fgitee.com%2Fzyp521%2Fupload_image%2Fraw%2Fmaster%2FwKPLM1.png"></p><p data-source-line="26">因此无偏估计是好于有偏估计的。</p><h2 id="有效性" data-source-line="28"><a class="markdownIt-Anchor" href="#有效性"></a>有效性</h2><p data-source-line="29">打靶的时候，右边的成绩肯定更加优秀：</p><p data-source-line="31"><img data-src="https%3A%2F%2Fgitee.com%2Fzyp521%2Fupload_image%2Fraw%2Fmaster%2FKCXASI.png" alt="figure.4" src="https://gitee.com/zyp521/upload_image/raw/master/KCXASI.png?ynotemdtimestamp=1598353714256" data-processed="https%3A%2F%2Fgitee.com%2Fzyp521%2Fupload_image%2Fraw%2Fmaster%2FKCXASI.png"></p><p data-source-line="33">进行估计的时候也是，估计量越靠近目标，效果越好，这个“靠近”可以用方差来衡量，方差越小的话，估计量的分布越接近于 <code data-role="inline-katex" data-src="%20%5Cmu%20" data-processed="%20%5Cmu%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex"> \mu </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span></code>。</p><p data-source-line="35">有效估计和无偏估计是不相关的，从下图可以看出，无论是否偏离靶心，方差更加密集的点更加有效(意味着方差越小):</p><p data-source-line="37"><img data-src="https%3A%2F%2Fgitee.com%2Fzyp521%2Fupload_image%2Fraw%2Fmaster%2FbExIjC.png" alt="figure.5" src="https://gitee.com/zyp521/upload_image/raw/master/bExIjC.png?ynotemdtimestamp=1598353714256" data-processed="https%3A%2F%2Fgitee.com%2Fzyp521%2Fupload_image%2Fraw%2Fmaster%2FbExIjC.png"></p><p data-source-line="39">举个例子，从 <code data-role="inline-katex" data-src="%20N(%5Cmu%2C%5Csigma%5E%7B2%7D)%20" data-processed="%20N(%5Cmu%2C%5Csigma%5E%7B2%7D)%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>(</mo><mi>μ</mi><mo separator="true">,</mo><msup><mi>σ</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex"> N(\mu,\sigma^{2}) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 1.064108em; vertical-align: -0.25em;"></span><span class="mord mathdefault" style="margin-right: 0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8141079999999999em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></code> 中抽出10个样本: <code data-role="inline-katex" data-src="%20%7Bx_%7B1%7D%2Cx_%7B2%7D%2C%5Cdots%2Cx_%7B10%7D%7D%20" data-processed="%20%7Bx_%7B1%7D%2Cx_%7B2%7D%2C%5Cdots%2Cx_%7B10%7D%7D%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mn>10</mn></msub></mrow><annotation encoding="application/x-tex"> {x_{1},x_{2},\dots,x_{10}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.30110799999999993em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.30110799999999993em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.30110799999999993em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span></span></span></span></span></code> 下面两个都是无偏估计量：</p><p data-source-line="41"><code data-role="inline-katex" data-src="%20T_%7B1%7D%3D%5Cfrac%7Bx_%7B1%7D%2Bx_%7B3%7D%2B2x_%7B10%7D%7D%7B4%7D%20" data-processed="%20T_%7B1%7D%3D%5Cfrac%7Bx_%7B1%7D%2Bx_%7B3%7D%2B2x_%7B10%7D%7D%7B4%7D%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>10</mn></msub></mrow><mn>4</mn></mfrac></mrow><annotation encoding="application/x-tex"> T_{1}=\frac{x_{1}+x_{3}+2x_{10}}{4} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.83333em; vertical-align: -0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.30110799999999993em;"><span class="" style="top: -2.5500000000000003em; margin-left: -0.13889em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height: 1.2062079999999997em; vertical-align: -0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.8612079999999999em;"><span class="" style="top: -2.6550000000000002em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span class="" style="top: -3.23em;"><span class="pstrut" style="height: 3em;"></span><span class="frac-line" style="border-bottom-width: 0.04em;"></span></span><span class="" style="top: -3.4101em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31731428571428577em;"><span class="" style="top: -2.357em; margin-left: 0em; margin-right: 0.07142857142857144em;"><span class="pstrut" style="height: 2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.143em;"><span class=""></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31731428571428577em;"><span class="" style="top: -2.357em; margin-left: 0em; margin-right: 0.07142857142857144em;"><span class="pstrut" style="height: 2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.143em;"><span class=""></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31731428571428577em;"><span class="" style="top: -2.357em; margin-left: 0em; margin-right: 0.07142857142857144em;"><span class="pstrut" style="height: 2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.143em;"><span class=""></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.345em;"><span class=""></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></code></p><p data-source-line="43"><code data-role="inline-katex" data-src="%20T_%7B2%7D%3D%5Cfrac%7B1%7D%7B10%7D%5Csum_%7Bi%3D1%7D%7B10%7Dx_%7Bi%7D%20" data-processed="%20T_%7B2%7D%3D%5Cfrac%7B1%7D%7B10%7D%5Csum_%7Bi%3D1%7D%7B10%7Dx_%7Bi%7D%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>2</mn></msub><mo>=</mo><mfrac><mn>1</mn><mn>10</mn></mfrac><msub><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></msub><mn>10</mn><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex"> T_{2}=\frac{1}{10}\sum_{i=1}{10}x_{i} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.83333em; vertical-align: -0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.30110799999999993em;"><span class="" style="top: -2.5500000000000003em; margin-left: -0.13889em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height: 1.190108em; vertical-align: -0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.845108em;"><span class="" style="top: -2.6550000000000002em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span><span class="" style="top: -3.23em;"><span class="pstrut" style="height: 3em;"></span><span class="frac-line" style="border-bottom-width: 0.04em;"></span></span><span class="" style="top: -3.394em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.345em;"><span class=""></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position: relative; top: -0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.16195399999999993em;"><span class="" style="top: -2.40029em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.29971000000000003em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31166399999999994em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span></span></span></span></code></p><p data-source-line="45">但是后者比前者方差小，后者效果更好，并且在现实中不一定非要选择无偏估计量。</p><h2 id="一致性" data-source-line="47"><a class="markdownIt-Anchor" href="#一致性"></a>一致性</h2><p data-source-line="48">如果用以下式子去估计方差 <code data-role="inline-katex" data-src="%20%5Csigma%5E%7B2%7D%20" data-processed="%20%5Csigma%5E%7B2%7D%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex"> \sigma^{2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.8141079999999999em; vertical-align: 0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8141079999999999em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></code>: <code data-role="inline-katex" data-src="%20S%5E%7B2%7D%3D%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi%3D1%7D%5E%7Bn%7D(X_%7Bi%7D-%5Coverline%7BX%7D)%5E%7B2%7D%20" data-processed="%20S%5E%7B2%7D%3D%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi%3D1%7D%5E%7Bn%7D(X_%7Bi%7D-%5Coverline%7BX%7D)%5E%7B2%7D%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>S</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo>(</mo><msub><mi>X</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>X</mi><mo stretchy="true">‾</mo></mover><msup><mo>)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex"> S^{2}=\frac{1}{n}\sum_{i=1}^{n}(X_{i}-\overline{X})^{2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 0.8141079999999999em; vertical-align: 0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8141079999999999em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height: 1.190108em; vertical-align: -0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.845108em;"><span class="" style="top: -2.6550000000000002em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="" style="top: -3.23em;"><span class="pstrut" style="height: 3em;"></span><span class="frac-line" style="border-bottom-width: 0.04em;"></span></span><span class="" style="top: -3.394em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.345em;"><span class=""></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position: relative; top: -0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.804292em;"><span class="" style="top: -2.40029em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span class="" style="top: -3.2029em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.29971000000000003em;"><span class=""></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31166399999999994em;"><span class="" style="top: -2.5500000000000003em; margin-left: -0.07847em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height: 1.13333em; vertical-align: -0.25em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8833300000000001em;"><span class="" style="top: -3em;"><span class="pstrut" style="height: 3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.07847em;">X</span></span></span><span class="" style="top: -3.80333em;"><span class="pstrut" style="height: 3em;"></span><span class="overline-line" style="border-bottom-width: 0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8141079999999999em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></code> 会有一个偏差: <code data-role="inline-katex" data-src="%20%5Cfrac%7B1%7D%7Bn%7D%5Csigma%5E%7B2%7D%20" data-processed="%20%5Cfrac%7B1%7D%7Bn%7D%5Csigma%5E%7B2%7D%20"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex"> \frac{1}{n}\sigma^{2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height: 1.190108em; vertical-align: -0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.845108em;"><span class="" style="top: -2.6550000000000002em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="" style="top: -3.23em;"><span class="pstrut" style="height: 3em;"></span><span class="frac-line" style="border-bottom-width: 0.04em;"></span></span><span class="" style="top: -3.394em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height: 0.345em;"><span class=""></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.8141079999999999em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></code>。</p><p data-source-line="50">可以看到，随着采样个数n的增加，这个偏差会越来越小，那么这个估计就是一致的。如果参数样本够多，其实这种有偏但是一致的估计量也是可选的。</p><h2 id="总结" data-source-line="52"><a class="markdownIt-Anchor" href="#总结"></a>总结</h2><p data-source-line="53">判断一个估计量的好快，至少可以从一下三个方面来靠考虑 ：</p><ul data-source-line="54"><li>无偏</li><li>有效</li><li>一致</li></ul><p data-source-line="58">实际操作中，要找到满足三个方面的估计量有时候并不容易，因此可以根据情况进行取舍。</p></div></article><body><script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","tagMode":false,"debug":false,"model":{"jsonPath":"/live2dw/assets/nico.model.json"},"display":{"position":"right","width":150,"height":300},"mobile":{"show":false},"log":false});</script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.10.0/katex.min.css&quot; integrity=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>MAC快捷键位记录</title>
    <link href="www.strivezs.com/2020/08/19/MAC%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BD%8D%E8%AE%B0%E5%BD%95/"/>
    <id>www.strivezs.com/2020/08/19/MAC%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BD%8D%E8%AE%B0%E5%BD%95/</id>
    <published>2020-08-19T09:45:52.241Z</published>
    <updated>2020-08-19T09:45:52.241Z</updated>
    
    <content type="html"><![CDATA[<h1>MAC快捷键位记录</h1><p>整理了一下自己在MAC上常用到的快捷键为。</p><ul><li>Ctrl+Command+Q 快速锁屏</li><li>Ctrl+空格 切换输入法</li><li>Shift+Command+’&gt;/.’ 显示隐藏文件</li><li>Ctrl+Command+R 录屏</li><li>Ctrl+Command+Z QQ消息提取</li><li>Ctrl+Command+W 微信消息提取</li><li>Ctrl+Command+A 截屏</li><li>Shift+Command+’=/+’ Word中将[2]变为论文引用</li><li>Ctrl+Command+Y 网易云音乐全局停止</li><li>Ctrl+Command+上下左右箭头分别对应调大、调小音量，前一首、后一首</li><li>Command+Option+M Word中快速段落格式设置</li><li>Command+Option+D 隐藏/显示底部状态栏</li><li>Ctrl+’=/+’ Word中快速添加公式</li><li>Command+W 关闭页面但是不退出程序</li><li>Command+Q 关闭且退出程序</li><li>Command+S 保存内容</li><li>Command+A 全选</li><li>Command+Z 撤销</li><li>Command+X 剪切</li><li>Command+C 复制</li><li>Command+Option+V 复制之后移动文件，原文件没了</li><li>Command+V 复制文件，不修改原文件</li><li>Shitf+Command+G 快速访问</li><li>chmod -R 777 目录  来给目录权限</li></ul><h2 id="安装Spectacle"><a class="header-anchor" href="#安装Spectacle">¶</a>安装Spectacle</h2><p>Spectacle(眼镜)是一个很好用的系统分屏软件，目前我一直在使用 :D</p><ul><li>Command+Option+F 当前页面全屏</li><li>Command+Option+左箭头 页面占据左半屏</li><li>Command+Option+右箭头 页面占据右半屏</li></ul><p>会持续更新的，这里只是暂时记录了自己​用到的部分。QWQ​</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;MAC快捷键位记录&lt;/h1&gt;
&lt;p&gt;整理了一下自己在MAC上常用到的快捷键为。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ctrl+Command+Q 快速锁屏&lt;/li&gt;
&lt;li&gt;Ctrl+空格 切换输入法&lt;/li&gt;
&lt;li&gt;Shift+Command+’&amp;gt;/.’ 显示隐藏文件&lt;/
      
    
    </summary>
    
    
      <category term="MAC" scheme="www.strivezs.com/categories/MAC/"/>
    
    
      <category term="MAC" scheme="www.strivezs.com/tags/MAC/"/>
    
      <category term="快捷键" scheme="www.strivezs.com/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
</feed>
