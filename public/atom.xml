<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>StriveZs的博客</title>
  
  <subtitle>Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.strivezs.com/"/>
  <updated>2020-07-30T08:25:02.583Z</updated>
  <id>www.strivezs.com/</id>
  
  <author>
    <name>StriveZs</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>高斯模糊(高斯滤波)</title>
    <link href="www.strivezs.com/2020/07/30/%E9%AB%98%E6%96%AF%E6%A8%A1%E7%B3%8A(%E9%AB%98%E6%96%AF%E6%BB%A4%E6%B3%A2)/"/>
    <id>www.strivezs.com/2020/07/30/%E9%AB%98%E6%96%AF%E6%A8%A1%E7%B3%8A(%E9%AB%98%E6%96%AF%E6%BB%A4%E6%B3%A2)/</id>
    <published>2020-07-30T08:25:02.583Z</published>
    <updated>2020-07-30T08:25:02.583Z</updated>
    
    <content type="html"><![CDATA[<h1>高斯模糊/高斯滤波</h1><p>通常，图像处理软件会提供模糊滤镜，使图片产生模糊效果。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/3QniL2.png" alt="figure.1"></p><p>模糊的算法有很多，其中有一种叫高斯模糊(Gaussian Blur)，它将正态分布用于图像处理。<br>文本介绍了高斯模糊的算法，你会看到这是一个非常简单易懂的算法。本质上，它是一种数据平滑技术(data smoothing)，适用于多个场合，图像处理恰好提供了一个直观的应用实例。</p><h2 id="高斯模糊的原理"><a class="header-anchor" href="#高斯模糊的原理">¶</a>高斯模糊的原理</h2><p>所谓模糊，可以理解成每一个像素都取周边像素的平均值。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/4mc8j0.png" alt="figure.2"></p><p>上图中，2是中间点，周边点都是1.</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/QBwSBo.png" alt="figure.3"></p><p>中间点取周围点的平均值之后，就会从2变成了1.在数值上，这是一种平滑化。在图形上，就相当于产生模糊的效果，中间点失去了细节。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/c2vU85.png" alt="figure.4"></p><p>显然计算平均值时，取值范围越大，模糊效果越强烈。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/6bxXWL.png" alt="figure.5"></p><p>上面分别是原图、模糊半径3像素，模糊半径10像素的效果。模糊半径越大，图像就越模糊。从数值角度来看，就是数值越平滑。</p><p>接下来的问题是，既然每个点都要取周边像素的平均值，那么该如何分配权重呢？<br>如果使用简单平均，显然是不合理的，因为图像都是连续的，越靠近的点关系越密切，越远离的点关系就越疏远。因此，加权平均更合理，距离越近的点，权重就越大，距离越远的点，权重就越小。</p><h2 id="正态分布的权重"><a class="header-anchor" href="#正态分布的权重">¶</a>正态分布的权重</h2><p>正态分布显然是一种可取的权重分配模式。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/coQ9OU.png" alt="figure.6"></p><p>在图形上，正态分布是一种钟形曲线，越接近中心，取值越大，越远离中心，取值越小。<br>计算平均值的时候，我们只需要将中心点作为原点，其他点按照其在正态曲线上的位置，分配权重就可以得到一个加权平均值。</p><h2 id="高斯函数"><a class="header-anchor" href="#高斯函数">¶</a>高斯函数</h2><p>上面的正态分布是一维的，但是图像都是二维的，因此我们需要二维的正态分布。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/TAEtYi.png" alt="figure.7"></p><p>正态分布的密度函数叫做高斯函数，下面是一维高斯函数的公式：</p><p><code>$ G(x)=\frac{1}{\sqrt{2\pi}\sigma} e^{-\frac{(x-\mu)^{2}}{2\sigma^{2}}} $</code></p><p>其中，<code>$ \mu $</code>是x的均值，σ是x的方差。因为计算平均值的时候，中心店是原点，因此均值等于0。</p><p><code>$ G(x)=\frac{1}{\sqrt{2\pi}\sigma} e^{-\frac{x^{2}}{2\sigma^{2}}} $</code></p><p>根据一维高斯函数，可以推导得到二维高斯函数:</p><p><code>$ G(x,y)=\frac{1}{2\pi \sigma^{2}}e^{-\frac{x^{2}+y^{2}}{2\sigma^{2}}} $</code></p><p>有了这个函数，就可以计算每个点的权重了。</p><h2 id="权重矩阵"><a class="header-anchor" href="#权重矩阵">¶</a>权重矩阵</h2><p>假设中心点的坐标是(0,0)，那么距离它最近的个点的坐标如下：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/YNvFdj.png" alt="figure.8"></p><p>更远的同理计算方法。</p><p>为了计算权重矩阵，需要设置σ的值。假定σ=1.5，则模糊半径为1的权重矩阵如下：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/tOGq99.png" alt="figure.9"></p><p><strong>这9个点的权重总和等于0.47877147，如果只计算这9个点的加权平均，还必须让他们的之和等于1，因此上面的9个值还要分别除以0.47877147，得到最终的权重矩阵(除以0.47877147会将每个数都进行调整，保证相加为1)</strong></p><p>计算结果:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/4YpUfX.png" alt="figure.10"></p><h2 id="计算高斯模糊"><a class="header-anchor" href="#计算高斯模糊">¶</a>计算高斯模糊</h2><p>我们计算得到了权重矩阵，就可以根据它来计算高斯模糊的值了。</p><p>举例：<br>假设有9个像素点，灰度值(0-255)如下:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/hEAMgk.png" alt="figure.11"></p><p>每个点乘以自己的权重值:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/GB6s57.png" alt="figure.12"></p><p>计算得到：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/KTHBds.png" alt="figure.13"></p><p>最后我们将这个9个值加起来，就是中心点的高斯模糊值了(加权和)。<br>对所有点重复这个过程，就得到了高斯模糊处理后的图像，如果原图是彩色图片，我们要对RGB三个通道分别进行高斯模糊处理。</p><h2 id="边界点处理"><a class="header-anchor" href="#边界点处理">¶</a>边界点处理</h2><p>如果一个点处于边界，周边没有足够的点，该怎么办？</p><p>我们可以将该边界和另一侧对应的边界进行拼接，来模拟出一个完整的矩阵。同样也可以进行对称复制来得到一个矩阵。</p><p>文章内容参考：<a href="http://www.ruanyifeng.com/blog/2012/11/gaussian_blur.html">click here</a> 我对缺失的公式进行了补充。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;高斯模糊/高斯滤波&lt;/h1&gt;
&lt;p&gt;通常，图像处理软件会提供模糊滤镜，使图片产生模糊效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/zyp521/upload_image/raw/master/3QniL2.png&quot; alt=&quot;figure.
      
    
    </summary>
    
    
      <category term="知识点" scheme="www.strivezs.com/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="数学知识" scheme="www.strivezs.com/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="高斯模糊" scheme="www.strivezs.com/tags/%E9%AB%98%E6%96%AF%E6%A8%A1%E7%B3%8A/"/>
    
      <category term="高斯滤波" scheme="www.strivezs.com/tags/%E9%AB%98%E6%96%AF%E6%BB%A4%E6%B3%A2/"/>
    
      <category term="Gaussian Blur" scheme="www.strivezs.com/tags/Gaussian-Blur/"/>
    
  </entry>
  
  <entry>
    <title>Whitening 白化和归一化</title>
    <link href="www.strivezs.com/2020/07/26/Whitening%20%E7%99%BD%E5%8C%96%E5%92%8C%E5%BD%92%E4%B8%80%E5%8C%96/"/>
    <id>www.strivezs.com/2020/07/26/Whitening%20%E7%99%BD%E5%8C%96%E5%92%8C%E5%BD%92%E4%B8%80%E5%8C%96/</id>
    <published>2020-07-26T05:12:23.630Z</published>
    <updated>2020-07-26T05:12:23.630Z</updated>
    
    <content type="html"><![CDATA[<h1>白化和归一化</h1><h2 id="白化"><a class="header-anchor" href="#白化">¶</a>白化</h2><p>白话的目的就是去除输入数据的冗余信息。</p><p>例如：训练数据是图像，由于图像中相邻像素之间具有很强的相关性，因此输入是冗余的的。白话的目的就是降低输入的荣誉的性。<br>输入数据集，经过白化处理后，生成新数据集满足两个条件：</p><ul><li>特征相关性较低</li><li>特征具有相同的方差</li></ul><p>白化算法实现的过程：</p><ul><li>第一步是进行PCA操作，将数据降维</li><li>第二步是对新的坐标进行归一化操作</li></ul><h2 id="归一化"><a class="header-anchor" href="#归一化">¶</a>归一化</h2><h3 id="定义"><a class="header-anchor" href="#定义">¶</a>定义</h3><p>数据标准化(Normalization)，也称为归一化，归一化就是将你需要处理的数据再通过某种算法那处理后，将其限定在你需要的一定的范围内。</p><p>数据标准化处理是数据挖掘的一项基础工作，不同评价指往往具有不同的量纲和量纲单位，这样的情况会影响到数据分析的结果，为了消除指标之间的量纲影响，需要对数据进行归一化处理，解决数据指标之间的可比性问题。</p><h3 id="优点"><a class="header-anchor" href="#优点">¶</a>优点</h3><p>如上面所说，数据归一化的目的就是为了把不同来源的数据统一到同一数量级(一个参考坐标系下)，这样使得比较起来更加有意义。<br>归一化使得后面数据的处理更为方便，它有两大有点：</p><ul><li>归一化提高梯度下降求最优解的速度</li><li>归一化有可能提高精度</li></ul><h4 id="归一化提高梯度下降求最优解的速度"><a class="header-anchor" href="#归一化提高梯度下降求最优解的速度">¶</a>归一化提高梯度下降求最优解的速度</h4><p>如下图，我们对两个特征x1 x2的区间进行归一化，得到了下图，加快了梯度下降方法的求解过程：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/6QKGCq.png" alt="figure.1"></p><h4 id="归一化有可能提高精度"><a class="header-anchor" href="#归一化有可能提高精度">¶</a>归一化有可能提高精度</h4><p>一些分类器(如KNN)需要计算样本之间的距离(比如欧氏距离)。如果一个特征值域范围非常大，那么距离计算就要取决于这个特征，如果这时实际情况是至于范围小的特征更重要，那么归一化就要起作用了。</p><h3 id="归一化方法"><a class="header-anchor" href="#归一化方法">¶</a>归一化方法</h3><h4 id="线性归一化"><a class="header-anchor" href="#线性归一化">¶</a>线性归一化</h4><p>线性归一化，也称为min-max标准化、离差标准化；是对原始数据的线性变换，使得结果值映射到[0,1]之间。转换函数如下：</p><p><code>$ x'= \frac{x-min(x)}{max(x)-min(x)} $</code></p><p>这种归一化比较适合在数值较集中的情况。但是这种方法有一个缺陷，就是如果max和min不稳定的时候(添加新数值使得max/min改变)，容易使得归一化的结果不稳定，影响后续使用效果。其实在实际应用中，我们一般用经验常量来替代max和min。</p><h4 id="标准差归一化"><a class="header-anchor" href="#标准差归一化">¶</a>标准差归一化</h4><p>它也叫Z-score标准化，这种方法基于原始数据的均值和标准差进行数据的标准化。经过处理后的数据符合标准正态分布，即均值为0，标准差为1，转化函数为：</p><p><code>$ x^{*}=\frac{x-\mu}{\sigma} $</code></p><h4 id="非线性标准化"><a class="header-anchor" href="#非线性标准化">¶</a>非线性标准化</h4><p>这种方法一般使用在数据分析比较大的场景，有些数值很大，有些数值很小，通过一些数学函数，将原始值进行映射。一般使用的函数包括log、指数、正切等，需要根据数据分布的情况来决定非线性函数的曲线。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;白化和归一化&lt;/h1&gt;
&lt;h2 id=&quot;白化&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#白化&quot;&gt;¶&lt;/a&gt;白化&lt;/h2&gt;
&lt;p&gt;白话的目的就是去除输入数据的冗余信息。&lt;/p&gt;
&lt;p&gt;例如：训练数据是图像，由于图像中相邻像素之间具有很强的相关性，因此
      
    
    </summary>
    
    
      <category term="深度学习" scheme="www.strivezs.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="神经网络" scheme="www.strivezs.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="知识点" scheme="www.strivezs.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="白化" scheme="www.strivezs.com/tags/%E7%99%BD%E5%8C%96/"/>
    
      <category term="归一化" scheme="www.strivezs.com/tags/%E5%BD%92%E4%B8%80%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>offset max-pooling</title>
    <link href="www.strivezs.com/2020/07/19/offset%20max-pooling/"/>
    <id>www.strivezs.com/2020/07/19/offset%20max-pooling/</id>
    <published>2020-07-19T04:30:53.410Z</published>
    <updated>2020-07-19T04:30:53.410Z</updated>
    
    <content type="html"><![CDATA[<h1>offset max-pooling</h1><p>下面再让我们来继续学习有关 offset 池化的内容，为了简单起见，我们暂时不用二维的图像作为例子，而是采用一维作为示例，来讲解池化:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/QRMKRn.png" alt="figure.8"></p><p>如上图所示，我们在x轴上有20个神经元，如果我们选择池化size=3的非重叠池化，那么根据我们之前所学的方法应该是：对上面20个，从1位置开始进行分组，每3个连续的神经元为一组，然后计算魅族的最大值(最大池化)，19、20号神经元被丢弃，如下图所示:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/Sk1PRb.png" alt="figure.9"></p><p>我们也可以在20号神经元后面，人为的添加一个数值为0的神经元编号21，与19、20成为一组，这样可以分成7组：[1,2,3],[4,5,6],…[19,20,21]，最后计算每组的最大值，这就是我们以前所学的CNN中池化层的源码实现方法。</p><p>上面我们说到，如果我们只分6组的话，我们除了以1作为初始位置进行连续组合之外，也可以从位置2或者3开始进行组合，也就是说我们其实有三种池化组合方法：</p><ul><li>从1开始：[1,2,3],…,[16,17,18]</li><li>从2开始：[2,3,4],…,[17,18,19]</li><li>从3开始：[3,4,5],…,[18,19,20]</li></ul><p>对应图片如下：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/uItSPi.png" alt="figure.10"></p><p>对于之前的CNN，一般只采用从第一种从1开始的组合就可以了，但是在OverFeat中，是把上述三种方法的池化结果，分别送入到网络的下一层，这样的话，我们的网络在最后输出的时候，就会出现3中预测结果了。</p><p>我们前面说的是一维的情况，如果是2维的图片的话，那么(x,y)就会有9种取值情况(3×3)；如果我们在做图片分类的时候，在网络的某一池化层加入了这种offset池化方法，然后把9种池化结果，分别送入后面的网络层，最后我们的图片分类输出结果就可以得到9个预测结果(每个类别都可以得到9种概率值，然后我们对每个类别的9种概率，取其最大值，做为此类别的概率预测值)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;offset max-pooling&lt;/h1&gt;
&lt;p&gt;下面再让我们来继续学习有关 offset 池化的内容，为了简单起见，我们暂时不用二维的图像作为例子，而是采用一维作为示例，来讲解池化:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/zyp521
      
    
    </summary>
    
    
      <category term="Deep Learning" scheme="www.strivezs.com/categories/Deep-Learning/"/>
    
      <category term="Nerual Network" scheme="www.strivezs.com/categories/Deep-Learning/Nerual-Network/"/>
    
      <category term="Pooling" scheme="www.strivezs.com/categories/Deep-Learning/Nerual-Network/Pooling/"/>
    
    
      <category term="offset pooling" scheme="www.strivezs.com/tags/offset-pooling/"/>
    
      <category term="pooling" scheme="www.strivezs.com/tags/pooling/"/>
    
      <category term="Nerual Network" scheme="www.strivezs.com/tags/Nerual-Network/"/>
    
  </entry>
  
  <entry>
    <title>PHP+XML+DTD+HTML 编写的在线词典</title>
    <link href="www.strivezs.com/2020/07/12/PHP+XML+DTD+HTML%20%E7%BC%96%E5%86%99%E7%9A%84%E5%9C%A8%E7%BA%BF%E8%AF%8D%E5%85%B8/"/>
    <id>www.strivezs.com/2020/07/12/PHP+XML+DTD+HTML%20%E7%BC%96%E5%86%99%E7%9A%84%E5%9C%A8%E7%BA%BF%E8%AF%8D%E5%85%B8/</id>
    <published>2020-07-12T14:15:17.830Z</published>
    <updated>2020-07-12T14:15:17.830Z</updated>
    
    <content type="html"><![CDATA[<h1>PHP+XML+DTD+HTML 编写的在线词典</h1><h2 id="view"><a class="header-anchor" href="#view">¶</a>view</h2><h3 id="主界面"><a class="header-anchor" href="#主界面">¶</a>主界面</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>操作页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>查询单词<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/study/XML学习/词典系统/control/search.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        输入你要查询的英文的单词: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"english"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"查询"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>添加单词<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/XML学习/词典系统/control/addDict.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        英文: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"eng"</span>&gt;</span></span><br><span class="line">        中文: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"chi"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="查询成功界面"><a class="header-anchor" href="#查询成功界面">¶</a>查询成功界面</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>查询结果页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>查询结果为<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_GET[<span class="string">'chinese'</span>]; <span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="查询失败界面"><a class="header-anchor" href="#查询失败界面">¶</a>查询失败界面</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>查询结果失败页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>没有该单词!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="control"><a class="header-anchor" href="#control">¶</a>control</h2><h3 id="查询单词"><a class="header-anchor" href="#查询单词">¶</a>查询单词</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">getNodeValue</span><span class="params">(&amp;$myNode,$tagName)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $myNode-&gt;getElementsByTagName($tagName)-&gt;item(<span class="number">0</span>)-&gt;nodeValue;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    $word = $_POST[<span class="string">'english'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 创建DOCDocument对象</span></span></span><br><span class="line"><span class="php">    $xmlDoc = <span class="keyword">new</span> DOMDocument();</span></span><br><span class="line"><span class="php">    <span class="comment">// 加载xml文件</span></span></span><br><span class="line"><span class="php">    $xmlDoc-&gt;load(<span class="string">"/XML学习/词典系统/model/dict.xml"</span>);</span></span><br><span class="line"><span class="php">    <span class="comment">// 查询单词</span></span></span><br><span class="line"><span class="php">    $wordList = $xmlDoc-&gt;getElementsByTagName(<span class="string">"单词"</span>);</span></span><br><span class="line"><span class="php">    $index = <span class="number">-1</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$wordList-&gt;length;$i++)&#123;</span></span><br><span class="line"><span class="php">        $result = getNodeValue($wordList[$i],<span class="string">"英文"</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>($result == $word)&#123;</span></span><br><span class="line"><span class="php">            $index = $i;</span></span><br><span class="line"><span class="php">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($index == <span class="number">-1</span>)&#123;</span></span><br><span class="line"><span class="php">        header(<span class="string">"Location:/XML学习/词典系统/view/failed.html"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        $chinese= getNodeValue($wordList[$index],<span class="string">"中文"</span>);</span></span><br><span class="line"><span class="php">        $encode = urlencode($chinese);</span></span><br><span class="line"><span class="php">        header(<span class="string">"Location:/XML学习/词典系统/view/mess.php?chinese=$encode"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="添加单词"><a class="header-anchor" href="#添加单词">¶</a>添加单词</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">getNodeValue</span><span class="params">(&amp;$myNode,$tagName)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $myNode-&gt;getElementsByTagName($tagName)-&gt;item(<span class="number">0</span>)-&gt;nodeValue;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    $eng = $_POST[<span class="string">'eng'</span>];</span></span><br><span class="line"><span class="php">    $chi = $_POST[<span class="string">'chi'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// 先判断单词是否存在，如果存在则不添加，并提示</span></span></span><br><span class="line"><span class="php">    <span class="comment">// 创建DOCDocument对象</span></span></span><br><span class="line"><span class="php">    $xmlDoc = <span class="keyword">new</span> DOMDocument();</span></span><br><span class="line"><span class="php">    <span class="comment">// 加载xml文件</span></span></span><br><span class="line"><span class="php">    $xmlDoc-&gt;load(<span class="string">"/XML学习/词典系统/model/dict.xml"</span>);</span></span><br><span class="line"><span class="php">    <span class="comment">// 查询单词</span></span></span><br><span class="line"><span class="php">    $wordList = $xmlDoc-&gt;getElementsByTagName(<span class="string">"单词"</span>);</span></span><br><span class="line"><span class="php">    $index = <span class="number">-1</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$wordList-&gt;length;$i++)&#123;</span></span><br><span class="line"><span class="php">        $result = getNodeValue($wordList[$i],<span class="string">"英文"</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>($result == $eng)&#123;</span></span><br><span class="line"><span class="php">            $index = $i;</span></span><br><span class="line"><span class="php">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($index != <span class="number">-1</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"&lt;script&gt;window.alert('单词已经存在! 添加失败');history.back();&lt;/script&gt;"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// 得到根节点n</span></span></span><br><span class="line"><span class="php">        $root = $xmlDoc-&gt;getElementsByTagName(<span class="string">"词典"</span>)-&gt;item(<span class="number">0</span>);</span></span><br><span class="line"><span class="php">        <span class="comment">// 创建单词节点</span></span></span><br><span class="line"><span class="php">        $new_word = $xmlDoc-&gt;createElement(<span class="string">"单词"</span>);</span></span><br><span class="line"><span class="php">        <span class="comment">// 创建中文节点</span></span></span><br><span class="line"><span class="php">        $new_chi = $xmlDoc-&gt;createElement(<span class="string">"中文"</span>);</span></span><br><span class="line"><span class="php">        $new_chi-&gt;nodeValue = $chi;</span></span><br><span class="line"><span class="php">        <span class="comment">// 创建英文节点</span></span></span><br><span class="line"><span class="php">        $new_eng = $xmlDoc-&gt;createElement(<span class="string">"英文"</span>);</span></span><br><span class="line"><span class="php">        $new_eng-&gt;nodeValue = $eng;</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="comment">// 将节点挂载</span></span></span><br><span class="line"><span class="php">        $new_word-&gt;appendChild($new_eng);</span></span><br><span class="line"><span class="php">        $new_word-&gt;appendChild($new_chi);</span></span><br><span class="line"><span class="php">        $root-&gt;appendChild($new_word);</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="comment">// 保存xml文件</span></span></span><br><span class="line"><span class="php">        $xmlDoc-&gt;save(<span class="string">"/个人文件/study/XML学习/词典系统/model/dict.xml"</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"&lt;script&gt;window.alert('单词保存成功!');history.back();&lt;/script&gt;"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="model"><a class="header-anchor" href="#model">¶</a>model</h2><h3 id="存储单词文件"><a class="header-anchor" href="#存储单词文件">¶</a>存储单词文件</h3><p>xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE 词典 <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"dict.dtd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入dtd文件--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--班级 根元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">词典</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">单词</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">英文</span>&gt;</span>boy<span class="tag">&lt;/<span class="name">英文</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">中文</span>&gt;</span>男孩<span class="tag">&lt;/<span class="name">中文</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">单词</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">单词</span>&gt;</span><span class="tag">&lt;<span class="name">英文</span>&gt;</span>girls<span class="tag">&lt;/<span class="name">英文</span>&gt;</span><span class="tag">&lt;<span class="name">中文</span>&gt;</span>女孩<span class="tag">&lt;/<span class="name">中文</span>&gt;</span><span class="tag">&lt;/<span class="name">单词</span>&gt;</span><span class="tag">&lt;/<span class="name">词典</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="DTD文件"><a class="header-anchor" href="#DTD文件">¶</a>DTD文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ELEMENT 词典 (单词+)&gt;</span></span><br><span class="line">    <span class="meta">&lt;!ELEMENT 单词 (英文,中文)&gt;</span></span><br><span class="line">        <span class="meta">&lt;!ELEMENT 英文 (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="line">        <span class="meta">&lt;!ELEMENT 中文 (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br></pre></td></tr></table></figure><h2 id="展示"><a class="header-anchor" href="#展示">¶</a>展示</h2><p><img src="https://gitee.com/zyp521/upload_image/raw/master/NkX3bj.png" alt="figure.1"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/ilIfqN.png" alt="figure.2"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/hjVnNG.png" alt="figure.3"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/wKh5qo.png" alt="figure.4"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/JI4NdI.png" alt="figure.5"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;PHP+XML+DTD+HTML 编写的在线词典&lt;/h1&gt;
&lt;h2 id=&quot;view&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#view&quot;&gt;¶&lt;/a&gt;view&lt;/h2&gt;
&lt;h3 id=&quot;主界面&quot;&gt;&lt;a class=&quot;header-anchor&quot; h
      
    
    </summary>
    
    
      <category term="PHP" scheme="www.strivezs.com/categories/PHP/"/>
    
      <category term="XML" scheme="www.strivezs.com/categories/PHP/XML/"/>
    
    
      <category term="PHP" scheme="www.strivezs.com/tags/PHP/"/>
    
      <category term="XML" scheme="www.strivezs.com/tags/XML/"/>
    
      <category term="DTD" scheme="www.strivezs.com/tags/DTD/"/>
    
      <category term="词典" scheme="www.strivezs.com/tags/%E8%AF%8D%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Non-Maximum Suppression(NMS)</title>
    <link href="www.strivezs.com/2020/07/08/Non-Maximum%20Suppression(NMS)%20%E9%9D%9E%E6%9E%81%E5%A4%A7%E5%80%BC%E6%8A%91%E5%88%B6/"/>
    <id>www.strivezs.com/2020/07/08/Non-Maximum%20Suppression(NMS)%20%E9%9D%9E%E6%9E%81%E5%A4%A7%E5%80%BC%E6%8A%91%E5%88%B6/</id>
    <published>2020-07-08T04:39:22.949Z</published>
    <updated>2020-07-08T04:39:22.949Z</updated>
    
    <content type="html"><![CDATA[<h1>Non-Maximum Suppression(NMS) 非极大值抑制</h1><h2 id="概述"><a class="header-anchor" href="#概述">¶</a>概述</h2><p>非极大值抑制(NMS), 顾名思义就是抑制不是极大值的元素，可以理解为局部最大搜索。这个局部代表的就是一个邻域，邻域有两个参数可变，一个是邻域的维数，而是邻域的大小。这里不讨论通用的NMS算法, 而是用于目标检测中提取分数最高的窗口。</p><p>例如在行人检测中，滑动窗口经提取特征，经分类器识别后，每个窗口都会得到一个分数。但是滑动窗口会导致很多窗口和其他窗口存在包含或者大部分交叉的情况。这时就需要用到NMS来选取这些邻域里分数最高(是行人几率最大)，并且一直那些分数低的窗口。</p><p>NMS在计算视觉领域有着非常重要的应用，如视频目标跟踪、数据挖掘、3D重建、目标识别以及纹理分析等。</p><h2 id="NMS在目标检测中的应用"><a class="header-anchor" href="#NMS在目标检测中的应用">¶</a>NMS在目标检测中的应用</h2><h3 id="人脸检测框重叠例子"><a class="header-anchor" href="#人脸检测框重叠例子">¶</a>人脸检测框重叠例子</h3><p><img src="https://gitee.com/zyp521/upload_image/raw/master/bWa7my.png" alt="figure.1"></p><p>我们的目标就是要去除冗余的检测框，保留最好的一个。<br>有多种方式可以解决这个问题，Triggs建议使用<strong>Mean-shift</strong>算法，利用bbox的坐标和当前图片尺度的对数来检测bbox的多种模式，但是效果可能并没有使用强分类器结合NMS的效果好。</p><h3 id="检测目标-pipline"><a class="header-anchor" href="#检测目标-pipline">¶</a>检测目标 pipline</h3><p><img src="https://gitee.com/zyp521/upload_image/raw/master/RKmAqi.png" alt="figure.2"></p><p>产生proposal后使用分类网络给吃每个框的每类置信度，使用回归网路修正位置，最终应用NMS。</p><h2 id="NMS原理"><a class="header-anchor" href="#NMS原理">¶</a>NMS原理</h2><p>对于Bounding Box的列表B以及对应的置信度S，采用下面的计算方式，选择具有最大score的检测框M，将其从B集合中移除并加入到最终的检测结果D中，通常将B中剩余检测框中与M的IoU大于阈值Nt的框从B中移除，重复这个过程，直到B为空。</p><h3 id="IoU阈值和排序"><a class="header-anchor" href="#IoU阈值和排序">¶</a>IoU阈值和排序</h3><p>通常阈值设置是0.3-0.5<br>其中用到的排序，可以按照右下角的坐标排序或者面积排序，也可以通过SVM等分类器得到的得分或者概率，<strong>R-CNN中就是按照得分进行排序的</strong>.</p><h3 id="例子"><a class="header-anchor" href="#例子">¶</a>例子</h3><p><img src="https://gitee.com/zyp521/upload_image/raw/master/dF8ON9.png" alt="figure.3"></p><p>如上面图片所示，定位一个车辆，最后算法就找出了一堆方框，我们需要判别哪些矩形框是没用的，<br>非极大值抑制的方法是: 假设有6个矩形框，根据分类器的类别分类概率做排序，假设从小到大属于车辆的概率，分别为A、B、C、D、E、F。</p><ul><li>从最大概率矩形框F开始，分别判断A-E与F的重叠率IoU是否大于某个设定的阈值</li><li>假设B、D和F的重叠度超过了阈值，那么就扔掉B、D；并表卷积第一个矩形框F，是我们保留下来的。</li><li>从剩下的矩形框A、C、E中，选择概率最大的E，然后判断E和A、C的重叠度，重叠度大于阈值的就扔掉，将标记E是我们保留下来的第二个矩形框</li><li>就这样重复上述步骤，直到剩余框集合中没有元素了，那么被保留下来的矩形框就是我们所需要的定位框。</li></ul><h3 id="代码示例"><a class="header-anchor" href="#代码示例">¶</a>代码示例</h3><p>在R-CNN中使用了NMS来确定最终的bounding-box，其对应每个候选框分别送入分类器，根据分类器的类别分类概率进行排序(greedy-NMS)， 但实际也可以在分类之前运用简单版本的NMS来去除一些框。</p><p>Python实现单类别的NMS:</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">def py_cpu_nms(dets, thresh): </span><br><span class="line">    <span class="string">""</span><span class="string">"Pure Python NMS baseline."</span><span class="string">""</span> </span><br><span class="line">    <span class="comment">#x1、y1、x2、y2、以及score赋值 </span></span><br><span class="line">    <span class="attr">x1</span> = dets[:, <span class="number">0</span>] </span><br><span class="line">    <span class="attr">y1</span> = dets[:, <span class="number">1</span>] </span><br><span class="line">    <span class="attr">x2</span> = dets[:, <span class="number">2</span>] </span><br><span class="line">    <span class="attr">y2</span> = dets[:, <span class="number">3</span>] </span><br><span class="line">    <span class="attr">scores</span> = dets[:, <span class="number">4</span>] </span><br><span class="line">    </span><br><span class="line">    <span class="comment">#每一个检测框的面积 </span></span><br><span class="line">    <span class="attr">areas</span> = (x2 - x1 + <span class="number">1</span>) * (y2 - y1 + <span class="number">1</span>) </span><br><span class="line">    <span class="comment">#按照score置信度降序排序 </span></span><br><span class="line">    <span class="attr">order</span> = scores.argsort()[::-<span class="number">1</span>] </span><br><span class="line">    <span class="attr">keep</span> = [] </span><br><span class="line">    <span class="comment">#保留的结果框集合 </span></span><br><span class="line">    while order.size &gt; <span class="number">0</span>: </span><br><span class="line">        <span class="attr">i</span> = order[<span class="number">0</span>] </span><br><span class="line">        keep.append(i) </span><br><span class="line">        <span class="comment">#保留该类剩余box中得分最高的一个 </span></span><br><span class="line">        <span class="comment">#得到相交区域,左上及右下 </span></span><br><span class="line">        <span class="attr">xx1</span> = np.maximum(x1[i], x1[order[<span class="number">1</span>:]]) <span class="attr">yy1</span> = np.maximum(y1[i], y1[order[<span class="number">1</span>:]]) </span><br><span class="line">        <span class="attr">xx2</span> = np.minimum(x2[i], x2[order[<span class="number">1</span>:]]) <span class="attr">yy2</span> = np.minimum(y2[i], y2[order[<span class="number">1</span>:]]) <span class="comment">#计算相交的面积,不重叠时面积为0 </span></span><br><span class="line">        <span class="attr">w</span> = np.maximum(<span class="number">0.0</span>, xx2 - xx1 + <span class="number">1</span>) </span><br><span class="line">        <span class="attr">h</span> = np.maximum(<span class="number">0.0</span>, yy2 - yy1 + <span class="number">1</span>) <span class="attr">inter</span> = w * h <span class="comment">#计算IoU：重叠面积 /（面积1+面积2-重叠面积） </span></span><br><span class="line">        <span class="attr">ovr</span> = inter / (areas[i] + areas[order[<span class="number">1</span>:]] - inter) <span class="comment">#保留IoU小于阈值的box </span></span><br><span class="line">        <span class="attr">inds</span> = np.where(ovr &lt;= thresh)[<span class="number">0</span>] </span><br><span class="line">        <span class="attr">order</span> = order[inds + <span class="number">1</span>] <span class="comment">#因为ovr数组的长度比order数组少一个,所以这里要将所有下标后移一位 </span></span><br><span class="line">    return keep</span><br></pre></td></tr></table></figure><p>Faster R-CNN的MATLAB和python版本实现一致，对于对类别的NMS，就是加了一层for循环来对每个类别进行NMS而已。</p><h3 id="NMS-Loss"><a class="header-anchor" href="#NMS-Loss">¶</a>NMS Loss</h3><p>值得注意的是对多类别检测任务，如果对每类进行NMS，那么当检测结果中包含两个被分到不同的目标且其IoU较大时，会得到不可接受的结果，如下图所示:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/Fd380c.png" alt="figure.4"></p><p>一种改进方式便是在损失函数中加入一部分NMS损失。NMS损失可以定义为与分类损失相同：<code>$ L_{nms}=L_{cls}(p,u)=-log_{p_{u}} $</code>, 即真实类别u对应log损失，p是C个类别的预测概率，实际相当于增加分类误差。</p><h3 id="Sotf-NMS"><a class="header-anchor" href="#Sotf-NMS">¶</a>Sotf-NMS</h3><p>上述NMS算法的一个主要问题是当两个ground-truth的目标的重叠度很高时，NMS会将具有较低置信度的去掉, 如下图所示：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/1SliMR.png" alt="figure.5"></p><p>如上图所示，红框和绿框的重叠度很大，应该超过了一般大家所设定的阈值，因此在NMS算法中由于绿框的置信度为0.8而红框为0.95，因此NMS算法会将绿框去掉，这样是不正确的。</p><p>在Soft-NMS中对NMS这个缺陷进行改进：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/kSvvcn.png" alt="figure.6"></p><p>改进方法在于将置信度改为IoU的函数: f(IoU)，具有较低的值而不至于从排序列表中删去。</p><p>两种形式的IoU函数:</p><ul><li>线性函数：即将需要取出的框的置信度改为1-重叠值, 函数值不连续，在某一点的值发生跳跃</li></ul><p><code>$ s_{i}=\left\{\begin{matrix} s_{i}\:\:\:\:iou(M,b_{i})&lt;N_{t} \\ s_{i}(1-iou(M,b_{i}))\:\:\:\: iou(M,b_{i}) \geq N_{t} \end{matrix}\right. $</code></p><ul><li>高斯函数，时间复杂度同传统的greedy-NMS, 为<code>$ \sigma (N^{2}) $</code></li></ul><p><code>$ s_{i}=s_{i}e \frac{-iou(M,b_{i}^{2})}{\sigma},\forall b_{i} \notin D $</code></p><h4 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h4><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ua = float((tx2 - tx1 + <span class="number">1</span>) * (ty2 - ty1 + <span class="number">1</span>) + area - iw * ih) ov = iw * ih / ua #iou between max box <span class="keyword">and</span> detection box </span><br><span class="line"><span class="keyword">if</span> <span class="function"><span class="keyword">method</span> == 1:</span> # linear </span><br><span class="line">    <span class="keyword">if</span> ov &gt; Nt: </span><br><span class="line">        weight = <span class="number">1</span> - ov </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        weight = <span class="number">1</span> </span><br><span class="line">elif <span class="function"><span class="keyword">method</span> == 2:</span> # gaussian </span><br><span class="line">    weight = np.exp(-(ov * ov)/sigma) </span><br><span class="line"><span class="keyword">else</span>: # original NMS </span><br><span class="line">    <span class="keyword">if</span> ov &gt; Nt: </span><br><span class="line">        weight = <span class="number">0</span> </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        weight = <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line"># re-scoring 修改置信度 </span><br><span class="line">boxes[pos, <span class="number">4</span>] = weight*boxes[pos, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><p>基于proposal方法的模型结果上应用比较好，检测效果提升:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/6qkPNP.png" alt="figure.7"></p><p>在R-FCN以及Faster R-CNN模型中的测试阶段运用Soft-NMS，在MS-COCO数据集上能够获得大约1%的提升。如果应用到训练阶段的proposal选取过程理论上也能获得提升，在自己的实验中发现确实对易重叠的目标类型有提高(目标不一定真在像素上重叠，切斜的目标的矩形边框会有较大的重叠)，而在SSD、YOLO等非proposal方法中没有提升。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Non-Maximum Suppression(NMS) 非极大值抑制&lt;/h1&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#概述&quot;&gt;¶&lt;/a&gt;概述&lt;/h2&gt;
&lt;p&gt;非极大值抑制(NMS), 顾名思义就是抑制不是极大值的元素，可
      
    
    </summary>
    
    
      <category term="Object Recognition" scheme="www.strivezs.com/categories/Object-Recognition/"/>
    
      <category term="Object Detection" scheme="www.strivezs.com/categories/Object-Recognition/Object-Detection/"/>
    
      <category term="科研" scheme="www.strivezs.com/categories/Object-Recognition/Object-Detection/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="NMS" scheme="www.strivezs.com/tags/NMS/"/>
    
      <category term="非极大值抑制" scheme="www.strivezs.com/tags/%E9%9D%9E%E6%9E%81%E5%A4%A7%E5%80%BC%E6%8A%91%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>IOU</title>
    <link href="www.strivezs.com/2020/07/01/IOU(%E9%87%8D%E5%8F%A0%E5%BA%A6)/"/>
    <id>www.strivezs.com/2020/07/01/IOU(%E9%87%8D%E5%8F%A0%E5%BA%A6)/</id>
    <published>2020-07-01T05:38:29.043Z</published>
    <updated>2020-07-01T05:38:29.043Z</updated>
    
    <content type="html"><![CDATA[<h1>IOU</h1><p>物体检测需要定位出物体的bounding box, 就像下面的图片一样，我们不仅要定位出车辆的bounding box，我们还要识别出bounding box里面的无力就是车辆.</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/tklIHI.png" alt="figure.1"></p><p>对于bounding box的定位精度，有一个重要的概念：因为我们算法不可能百分百跟人工标注的数据完全匹配，因此就存在一个定位精度评价公式: IOU。</p><p>它定义了两个bounding box的重叠度，如下图所示:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/08cc3B.png" alt="figure.2"></p><p>就是矩形A、B的重叠面积占A、B并集的面积比例。</p><p>计算公式:</p><p><code>$ IOU = \frac{A \cap B}{A \cup B}$</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;IOU&lt;/h1&gt;
&lt;p&gt;物体检测需要定位出物体的bounding box, 就像下面的图片一样，我们不仅要定位出车辆的bounding box，我们还要识别出bounding box里面的无力就是车辆.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com
      
    
    </summary>
    
    
      <category term="Object Recognition" scheme="www.strivezs.com/categories/Object-Recognition/"/>
    
      <category term="Object Detection" scheme="www.strivezs.com/categories/Object-Recognition/Object-Detection/"/>
    
    
      <category term="IOU" scheme="www.strivezs.com/tags/IOU/"/>
    
  </entry>
  
  <entry>
    <title>遗传算法（Genetic Algorithm）</title>
    <link href="www.strivezs.com/2020/06/28/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%EF%BC%88Genetic%20Algorithm%EF%BC%89/"/>
    <id>www.strivezs.com/2020/06/28/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%EF%BC%88Genetic%20Algorithm%EF%BC%89/</id>
    <published>2020-06-28T04:45:59.023Z</published>
    <updated>2020-06-28T04:45:59.023Z</updated>
    
    <content type="html"><![CDATA[<h1>遗传算法 （Genetic Algorithm）</h1><h2 id="基础信息"><a class="header-anchor" href="#基础信息">¶</a>基础信息</h2><p><strong>选择策略：</strong> 物竞天择，适者生存。即按照某一特定条件进行选择。</p><p><strong>遗传因子:</strong> 在计算机中是用0/1编码来完成的</p><p><strong>遗传方式：</strong> 交叉、变异</p><h2 id="选择策略"><a class="header-anchor" href="#选择策略">¶</a>选择策略</h2><h3 id="轮盘赌选择法"><a class="header-anchor" href="#轮盘赌选择法">¶</a>轮盘赌选择法</h3><p>轮盘赌选择法是根据个体的适应度值计算每个个体在子代中出现的概率，并按照此概率随机选择个体构成子代种群。</p><p><strong>常用步骤</strong></p><ol><li>将种群中个体的适应度值叠加，其中m为种群个体数。<center> <code>$ \sum_{i=1}^{m}y(x_{i}) $</code> </center></li><li>每个个体的适应度值除以总适应度值得到个体被选择的概率。</li><li>计算个体的累计概率以构造一个轮盘。</li><li>轮盘选择：产生一个[0,1]区间内的随机数，若该随机数小于或等于个体的累积概率，选择个体进入子代种群。</li></ol><p>重复上述步骤，即可得到一个由新个体构成的种群。</p><h3 id="随即遍历抽样法"><a class="header-anchor" href="#随即遍历抽样法">¶</a>随即遍历抽样法</h3><p>像轮盘赌一样计算选择概率，只是在随机遍历选择中等距离的选择个体。设npoint为需要选择的个体数目，等距离的选择个体，选择指针的距离是 <code>$ [1,\frac{1}{npoint}] $</code> ，第一个指针的位置由<code>$ [1,\frac{1}{npoint}] $</code> 的均匀随机数决定。</p><h3 id="锦标赛选择法"><a class="header-anchor" href="#锦标赛选择法">¶</a>锦标赛选择法</h3><p>锦标赛选择法选择策略每次从种群中选取出一定数量个体，然后选择其中最好的一个进入子代种群。重复该操作直到新的种群规模到达原来种群规。</p><p><strong>步骤:</strong></p><ol><li>确定每次选择的个体数量（百分比）</li><li>从种群中随机选择个体（每个概率相同）构成组，根据每个个体的适应度值，选择其中适应度值最好的个体进入子代种群。</li></ol><p>重复上述步骤，直到得到新一代种群。</p><h2 id="遗传算法编码"><a class="header-anchor" href="#遗传算法编码">¶</a>遗传算法编码</h2><h3 id="二进制编码法"><a class="header-anchor" href="#二进制编码法">¶</a>二进制编码法</h3><p>就像人类的基因有AGCT四种碱基序列一样，不过在这里我们只用0和1两种碱基，然后将他们串成一条链来形成一条染色体，一个为能表示出2种状态的信息量，因此足够长的二进制染色体便能够表示所有的特征。</p><p>例如：111000110101</p><p><strong>优点：</strong></p><ol><li>编码、解码操作简单易行</li><li>交叉、变异等遗传操作便于实现</li><li>合最小字符集编码原则</li><li>利用模式定理对算法进行理论分析</li></ol><p><strong>缺点</strong></p><ol><li>高精度问题上面表现较差</li><li>容易陷入局部最优</li></ol><h3 id="浮点编码法"><a class="header-anchor" href="#浮点编码法">¶</a>浮点编码法</h3><p>二进制编码虽然简单直观，但明显地存在着连续函数离散化时的映射误差。个体长度较短时，可能达不到精度要求，而个体编码长度较长时，虽然能够提高精度，但增加了解码的难度，使遗传算法的搜索空间急剧扩大。</p><p><strong>浮点法：</strong> 是指个体的每个基因值用某一范围内的一个浮点数来表示。在浮点数码方法中，必须保证基因值在给定的区间限制范围内，遗传反中所使用的交叉、变异等遗传操作也必须保证其运算结果所产生的新个体的基因值也在这个区间限制范围内。</p><p>例如：1.2-3.2-5.3-7.2-1.4-9.7</p><p><strong>优点</strong></p><ol><li>适用于在遗传算法表示范围较大的数</li><li>适用于精度要求较高的遗传算法</li><li>便于较大空间的遗传搜索</li><li>改善了遗传算法的计算复杂性，提高了运算交率</li><li>便于遗传算法于经典优化方法的混合使用</li><li>便于设计针对问题的专门知识的知识型遗传算子</li><li>便于处理复杂的决策变量约束条件</li></ol><h3 id="符号编码法"><a class="header-anchor" href="#符号编码法">¶</a>符号编码法</h3><p>符号编码是指个体染色体编码串中的基因值取自一个无数值含义、而只有代码含义的符号集如（A,B,C…）</p><p><strong>优点</strong></p><ol><li>符合有意义奇数块编码原则</li><li>便于在遗传算法中利用所求解问题的专门知识</li><li>便于遗传算法与相近似算法之间的混合使用</li></ol><h2 id="交叉"><a class="header-anchor" href="#交叉">¶</a>交叉</h2><p><strong>交叉操作：</strong> 是指对两个相互配对的染色体按某种方式相互交换其余部分基因，从而形成两个新的个体。</p><h3 id="适用于二进制编码个体或浮点数编码个体的交叉算子："><a class="header-anchor" href="#适用于二进制编码个体或浮点数编码个体的交叉算子：">¶</a>适用于二进制编码个体或浮点数编码个体的交叉算子：</h3><ol><li>单点交叉 (One-point Crossover):指在个体编码串中只随机设置一个交叉点，然后再该点相互交换两个配对个体的部分染色体。</li><li>两点交叉 (Two-point Crossover)：在个体编码串中随机设置了两个交叉点，然后在进行部分基因交换。</li><li>多点交叉 (Multi-point Crossover): 在个体编码串中随机选择多个交叉点，然后进行部分基因交换。</li><li>均匀交叉 (Uniform Corssover): 两个配对个体的每个基因座上的基因都以相同的交叉概率进行交换，从而形成两个新个体。</li><li>算数交叉 (Arithmetic Crossover): 由两个个体的线性组合而产生出两个新的个体，该操作对象一般是由浮点数编码表示的个体。</li></ol><h2 id="变异"><a class="header-anchor" href="#变异">¶</a>变异</h2><p>遗传算法中的变异运算，是指将个体染色体编码串中的某些基因座上的级音质用该基因座上的其他等位基因来替换，从而形成新的个体。</p><h3 id="适用于二进制编码和浮点数编码的个体："><a class="header-anchor" href="#适用于二进制编码和浮点数编码的个体：">¶</a>适用于二进制编码和浮点数编码的个体：</h3><ol><li>基本位变异 (Simple Mutation): 对个体编码串以变异概率、随即制定的某一位或某几位仅基因座上的值进行变异运算。</li><li>均匀变异 (Uniform Mutation): 分别用符合某一范围内均匀分布的随机数，以某一较小的概率来替换个体编码传中各个基因座上的原有基因值。</li><li>边界变异 (Boundary Mutation): 随机的取基因座上的两个对应边界基因值之一去替代原有基因值。</li><li>非均匀变异：对原有的基因值做一随机扰动，以扰动后的结果作为变异后的新的基因值。对每个基因座都以相同的概率进行变异运算之后，相当于整个解向量的解空间中做了一次轻微的变动。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;遗传算法 （Genetic Algorithm）&lt;/h1&gt;
&lt;h2 id=&quot;基础信息&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#基础信息&quot;&gt;¶&lt;/a&gt;基础信息&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;选择策略：&lt;/strong&gt; 物竞天择，适者生存。即按照
      
    
    </summary>
    
    
      <category term="人工智能" scheme="www.strivezs.com/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
      <category term="进化算法" scheme="www.strivezs.com/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E8%BF%9B%E5%8C%96%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="GA" scheme="www.strivezs.com/tags/GA/"/>
    
  </entry>
  
  <entry>
    <title>极大似然估计</title>
    <link href="www.strivezs.com/2020/06/25/%E6%9E%81%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1/"/>
    <id>www.strivezs.com/2020/06/25/%E6%9E%81%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1/</id>
    <published>2020-06-25T09:10:22.814Z</published>
    <updated>2020-06-25T09:10:22.814Z</updated>
    
    <content type="html"><![CDATA[<h1>极大似然估计</h1><h2 id="贝叶斯决策"><a class="header-anchor" href="#贝叶斯决策">¶</a>贝叶斯决策</h2><p>首先来看贝叶斯分类, 贝叶斯公式如下：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venlwNTIxL3VwbG9hZF9pbWFnZS9yYXcvbWFzdGVyL0F4bjdhSy5wbmc?x-oss-process=image/format,png" alt="figure.1"></p><p>其中 <strong>p(w) 为先验概率</strong>，表示每种类别分布的概率; <strong>p(x|w)为类条件概率</strong>, 表示在某种类别w的前提下, 某件事情x发生的概率; 而P(w|x) 为后验概率，表示某事x发生了，并且它属于某一类别w的概率，有了这个后验概率，我们就可以对样本进行分类。<strong>后验概率越大，说明某事物属于这个类别的可能性越大，我们越有理由把它x归到这个类别w下。</strong></p><p>这样我们就可以根绝p(w) p(x) p(x|w)来计算出p(w|x)从而得到x的类别划分.</p><h2 id="问题引出"><a class="header-anchor" href="#问题引出">¶</a>问题引出</h2><p>但是在实际问题中并不都是这样幸运的, 我们能获得的数据可能只有有限数目的样本数据，而<ins>先验概率p(w)和类条件概率（各类的总体分布）p(x|w)都是未知的</ins>.根据仅有的样本数据进行分类时，一种可行的办法是我们需要先对先验概率和类条件概率进行评估，然后在套用贝叶斯分类器。</p><p><strong>先验概率的估计较简单</strong>:1.每个样本所属的自然状态都是已知的（有点监督学习）2.依靠经验 3.用训练样本中各类出现的频率估计</p><p>类条件概率的估计很难，原因包括：1.概率密度函数包含了一个随机变量的全部信息；2.样本数据可能不多；3.特征向量x的维度可能很大等等<br>总之要直接估计类条件概率的密度函数很难。解决办法：<strong>把估计完全未知的概率密度 p(x|w)转换为估计参数。这样就将概率密度估计问题转化为了参数估计问题</strong> ==极大似然估计就是一种参数估计方法==。 当然，概率密度函数的选取很重要，模型正确，在样本区域无穷时，我们会得到较准的估计值，如果模型都错了，那估计半天的参数，肯定没有意义了。</p><h2 id="重要前提"><a class="header-anchor" href="#重要前提">¶</a>重要前提</h2><p><strong>训练样本的分布能代表样本的真实分布。每个样本集中的样本都是所谓<ins>独立同分布额随机变量</ins>，且有充分的训练样本。</strong></p><h2 id="极大似然估计"><a class="header-anchor" href="#极大似然估计">¶</a>极大似然估计</h2><p>原理图：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venlwNTIxL3VwbG9hZF9pbWFnZS9yYXcvbWFzdGVyL0VrUTU5Yy5wbmc?x-oss-process=image/format,png" alt="figure.2"></p><p><strong>似然函数(likehood function)</strong> : 联合概率密度函数 $p(D|\theta)$ 称为相对于$\left{ x_{1},x_{2},\dots ,x_{N} \right}$ 的$\theta$的似然函数. 每个x都是独立的</p><p>$$ l(\theta)=p(D|\theta)=p(x_{1},x_{2},\dots,x_{N}|\theta)=\prod_{i=1}^{N}p(x_{i}|\theta) $$</p><p>如果 $\hat{\theta}$ 是参数空间中能使似然函数 $l(\theta)$ 最大的 $\theta$ 值，则$\hat{\theta}$应该是最可能的参数值，那么$\hat{\theta}$ 就是 $\theta$ 的极大似然估计量。它的样本集的函数记作：</p><p>$$ \hat{\theta}=d(x_{1},x_{2},\dots,x_{N})=d(D)$$</p><p>$$ \hat{\theta}=d(x_{1},x_{2},\dots,x_{N}) $$ 称为极大似然函数估计值</p><h2 id="求解极大似然函数"><a class="header-anchor" href="#求解极大似然函数">¶</a>求解极大似然函数</h2><p><strong>ML估计</strong>:求是的出现该组样本的概率最大的 $\theta$ 值。</p><p>$$ \hat{\theta}=arg: \underset{\theta}{max} \prod_{i=1}^{N}p(x_{i}|\theta)$$</p><p>实际中为了便于分析，定义了<strong>对数似然函数</strong>：</p><p>$$ H(\theta)=ln:l(\theta)$$</p><p>$$ l(\theta)=p(D|\theta)=p(x_{1},x_{2},\dots,x_{N}|\theta)=\prod_{i=1}^{N}p(x_{i}|\theta) $$</p><p>$$ \hat{\theta}=arg:H(\theta)=arg: \underset{\theta}{max} \ln l(\theta)= arg: \prod_{i=1}^{N}ln:p(x_{i}|\theta)$$</p><p>1.未知参数只有一个（theta为标量）<br>在似然函数满足联系、可微的正则条件下，极大似然估计量是下面微分方程的解：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venlwNTIxL3VwbG9hZF9pbWFnZS9yYXcvbWFzdGVyL0FZSU1vaC5wbmc?x-oss-process=image/format,png" alt="figure.3"></p><p>2.未知参数有多个(theta为向量)<br>则theta可表示为具有S个分量的未知向量：</p><p>$$ \theta=[\theta_{1},\theta_{2},\dots,\theta_{s}]^{T} $$</p><p>记梯度算子：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venlwNTIxL3VwbG9hZF9pbWFnZS9yYXcvbWFzdGVyLzh6aVJkaC5wbmc?x-oss-process=image/format,png" alt="figure.4"></p><p>若似然函数满足连续可导的条件，则最大似然估计量就是如下方程的解.</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venlwNTIxL3VwbG9hZF9pbWFnZS9yYXcvbWFzdGVyL2RQbG0xaS5wbmc?x-oss-process=image/format,png" alt="figure.5"></p><p>方程的解只是一个估计值，只有在样本数趋于无限多的时候，它才会接近于真实值，</p><h2 id="例子"><a class="header-anchor" href="#例子">¶</a>例子</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venlwNTIxL3VwbG9hZF9pbWFnZS9yYXcvbWFzdGVyL0RvdTNHRC5wbmc?x-oss-process=image/format,png" alt="figure.6"></p><h2 id="总结"><a class="header-anchor" href="#总结">¶</a>总结</h2><p><strong>求解最大似然估计量的一般步骤：</strong></p><ul><li>写出似然函数</li><li>写出对数似然函数，并整理</li><li>求对数似然函数关于标量/向量theta的导数，在上面例子中theta为向量=(u,sigma)</li><li>求解似然方程，将求导后的结果等于0 （满足dH(theta)/d theta=0</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;极大似然估计&lt;/h1&gt;
&lt;h2 id=&quot;贝叶斯决策&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#贝叶斯决策&quot;&gt;¶&lt;/a&gt;贝叶斯决策&lt;/h2&gt;
&lt;p&gt;首先来看贝叶斯分类, 贝叶斯公式如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgcon
      
    
    </summary>
    
    
      <category term="Math" scheme="www.strivezs.com/categories/Math/"/>
    
    
      <category term="极大似然估计" scheme="www.strivezs.com/tags/%E6%9E%81%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>PyTorch中nn.Linear()理解</title>
    <link href="www.strivezs.com/2020/06/21/PyTorch%E4%B8%ADnn.Linear()%E7%90%86%E8%A7%A3/"/>
    <id>www.strivezs.com/2020/06/21/PyTorch%E4%B8%ADnn.Linear()%E7%90%86%E8%A7%A3/</id>
    <published>2020-06-21T10:34:37.707Z</published>
    <updated>2020-06-21T10:34:37.707Z</updated>
    
    <content type="html"><![CDATA[<h1>PyTorch中nn.Linear()理解</h1><h2 id="计算公式"><a class="header-anchor" href="#计算公式">¶</a>计算公式</h2><p><code>$ y = xA^{T}+b$</code></p><p>这里A为weight，b为bias。</p><h2 id="代码部分"><a class="header-anchor" href="#代码部分">¶</a>代码部分</h2><h3 id="初始化部分代码"><a class="header-anchor" href="#初始化部分代码">¶</a>初始化部分代码</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="constructor">Linear(Module)</span>:</span><br><span class="line">...</span><br><span class="line">__constants__ = <span class="literal">['<span class="identifier">bias</span>']</span></span><br><span class="line"></span><br><span class="line">def <span class="constructor">__init__(<span class="params">self</span>, <span class="params">in_features</span>, <span class="params">out_features</span>, <span class="params">bias</span>=True)</span>:</span><br><span class="line">    super(Linear, self).<span class="constructor">__init__()</span></span><br><span class="line">    self.in_features = in_features</span><br><span class="line">    self.out_features = out_features</span><br><span class="line">    self.weight = <span class="constructor">Parameter(<span class="params">torch</span>.Tensor(<span class="params">out_features</span>, <span class="params">in_features</span>)</span>)</span><br><span class="line">    <span class="keyword">if</span> bias:</span><br><span class="line">        self.bias = <span class="constructor">Parameter(<span class="params">torch</span>.Tensor(<span class="params">out_features</span>)</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.register<span class="constructor">_parameter('<span class="params">bias</span>', None)</span></span><br><span class="line">    self.reset<span class="constructor">_parameters()</span></span><br></pre></td></tr></table></figure><h3 id="计算部分"><a class="header-anchor" href="#计算部分">¶</a>计算部分</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@weak_script_method</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(<span class="keyword">self</span>, input)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">return</span> F.linear(input, <span class="keyword">self</span>.weight, <span class="keyword">self</span>.bias)</span><br></pre></td></tr></table></figure><p>返回值为: input * weight + bias</p><h3 id="bias和weight"><a class="header-anchor" href="#bias和weight">¶</a>bias和weight</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">weight</span>: the learnable weights of the module of shape</span><br><span class="line">    :<span class="attribute">math</span>:<span class="built_in">`(\text&#123;out\_features&#125;, \text&#123;in\_features&#125;)`</span>. The values are</span><br><span class="line">    initialized <span class="attribute">from </span>:<span class="attribute">math</span>:<span class="built_in">`\mathcal&#123;U&#125;(-\sqrt&#123;k&#125;, \sqrt&#123;k&#125;)`</span>, where</span><br><span class="line">    :<span class="attribute">math</span>:<span class="built_in">`k = \frac&#123;1&#125;&#123;\text&#123;in\_features&#125;&#125;`</span></span><br><span class="line"><span class="attribute">bias</span>:   the learnable bias of the module of <span class="attribute">shape </span>:<span class="attribute">math</span>:<span class="built_in">`(\text&#123;out\_features&#125;)`</span>.</span><br><span class="line">        <span class="attribute">If </span>:<span class="attribute">attr</span>:<span class="built_in">`bias`</span> is <span class="built_in">``</span>True<span class="built_in">``</span>, the values are initialized from</span><br><span class="line">        :<span class="attribute">math</span>:<span class="built_in">`\mathcal&#123;U&#125;(-\sqrt&#123;k&#125;, \sqrt&#123;k&#125;)`</span> where</span><br><span class="line">        :<span class="attribute">math</span>:<span class="built_in">`k = \frac&#123;1&#125;&#123;\text&#123;in\_features&#125;&#125;`</span></span><br></pre></td></tr></table></figure><h2 id="示例"><a class="header-anchor" href="#示例">¶</a>示例</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; import torch</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; nn1 = torch.nn.Linear(<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; input1 = torch.randn(<span class="number">140</span>, <span class="number">100</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; output1 = nn1(input1)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; output1.size()</span><br><span class="line">torch.Size([<span class="number">140</span>, <span class="number">50</span>])</span><br></pre></td></tr></table></figure><p>对于上述描述，我们创建一个input的维度为[140,100], 通过声明线性层会得到根据维度初始化的权重和偏差，其中weight的维度为[50,100]。对于公式中A表示的就是weight，而b表示的就是bias。由于对A进行了转置所以这里weight的维度为[50,100]而不是[100,50]。</p><p>具体计算为[140,100] × [50,100]的转置 + bias = [140,100] × [100,50] + bias最后得到的维度为[140,50]。</p><p>至于对于bias和weight的初始化，根绝网上所讲的是来有关维度值得均匀分布。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;PyTorch中nn.Linear()理解&lt;/h1&gt;
&lt;h2 id=&quot;计算公式&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#计算公式&quot;&gt;¶&lt;/a&gt;计算公式&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;$ y = xA^{T}+b$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里A
      
    
    </summary>
    
    
      <category term="PyTorch" scheme="www.strivezs.com/categories/PyTorch/"/>
    
      <category term="Python" scheme="www.strivezs.com/categories/PyTorch/Python/"/>
    
    
      <category term="Python" scheme="www.strivezs.com/tags/Python/"/>
    
      <category term="Pytorch" scheme="www.strivezs.com/tags/Pytorch/"/>
    
      <category term="Linear" scheme="www.strivezs.com/tags/Linear/"/>
    
  </entry>
  
  <entry>
    <title>Mac+PyCharm+Anaconda配置QtDesigner.md</title>
    <link href="www.strivezs.com/2020/06/17/Mac+PyCharm+Anaconda%E9%85%8D%E7%BD%AEQtDesigner.md/"/>
    <id>www.strivezs.com/2020/06/17/Mac+PyCharm+Anaconda%E9%85%8D%E7%BD%AEQtDesigner.md/</id>
    <published>2020-06-17T04:36:52.486Z</published>
    <updated>2020-06-17T04:36:52.486Z</updated>
    
    <content type="html"><![CDATA[<h1>Mac+PyCharm+Anaconda配置QtDesigner</h1><p>打开Pycharm-&gt;Perference-&gt;Tools-&gt;ExternalTools 添加下面两个外部工具。</p><h2 id="配置QtDesigner"><a class="header-anchor" href="#配置QtDesigner">¶</a>配置QtDesigner</h2><p>首先说明一下由于我这里是使用Anaconda进行配置的，因此我的路径可能和你默认使用的路径不同，下面我给出两种路径:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Anaconda:</span></span><br><span class="line">~opt<span class="meta-keyword">/anaconda3/</span>bin/Designer.app</span><br><span class="line"></span><br><span class="line">Mac默认路径：</span><br><span class="line"><span class="meta-keyword">/usr/</span>localCellar<span class="meta-keyword">/qt/</span><span class="number">5.10</span><span class="number">.1</span>/libexec</span><br></pre></td></tr></table></figure><p>下面是QtDesigner的配置信息，按照下图配置即可：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/H2IeEC.png" alt="figure.1"></p><h2 id="配置PyUIC"><a class="header-anchor" href="#配置PyUIC">¶</a>配置PyUIC</h2><p>下面添加将.ui文件转换为.py文件的外部工具。</p><p>具体配置如下图：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/GQ8xLh.png" alt="figure.2"></p><ul><li>Program：选择python就可以了地址为：~/opt/anaconda3/bin/python3.7</li><li>Arguments：-m PyQt5.uic.pyuic $FileName$ -o $<a href="http://FileNameWithoutExtension$.py">FileNameWithoutExtension$.py</a></li><li>Working directory：$ProjectFileDir$</li></ul><h2 id="启动"><a class="header-anchor" href="#启动">¶</a>启动</h2><p>直接在Tools-&gt;Externel Tools中选择QtDesigner。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/d0dsHg.png" alt="figure.3"></p><p>保存的文件一定要放在工作目录下，然后在选择PyUIC外部工具将ui选择为py文件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Mac+PyCharm+Anaconda配置QtDesigner&lt;/h1&gt;
&lt;p&gt;打开Pycharm-&amp;gt;Perference-&amp;gt;Tools-&amp;gt;ExternalTools 添加下面两个外部工具。&lt;/p&gt;
&lt;h2 id=&quot;配置QtDesigner&quot;&gt;&lt;a c
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>微信公众号和CSDN的重新使用</title>
    <link href="www.strivezs.com/2020/06/05/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%92%8CCSDN%E7%9A%84%E9%87%8D%E6%96%B0%E4%BD%BF%E7%94%A8/"/>
    <id>www.strivezs.com/2020/06/05/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%92%8CCSDN%E7%9A%84%E9%87%8D%E6%96%B0%E4%BD%BF%E7%94%A8/</id>
    <published>2020-06-05T07:48:57.625Z</published>
    <updated>2020-06-05T07:48:57.625Z</updated>
    
    <content type="html"><![CDATA[<h1>微信公众号和CSDN的重新使用</h1><p>最近计划将文章内容同步更新在个人博客、微信公众号和CSDN三个平台上，方便更多地用户进行访问和获取的内容。</p><h2 id="微信公众号"><a class="header-anchor" href="#微信公众号">¶</a>微信公众号</h2><p>近期刚刚开通了微信公众号，过段时间会慢慢的进行更新的。</p><p>下面是公众号的二维码，可以扫描关注。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="figure.1"></p><p>同样可以搜索次猿技术进行关注。</p><h2 id="CSDN"><a class="header-anchor" href="#CSDN">¶</a>CSDN</h2><p>CSDN之前曾经使用过一段时间，但是由于时间上的安排，决定仅在博客上进行更新了，现在正值毕业季时间比较充裕，因此决定再次重新进行更新。</p><p>欢迎访问：<a href="https://blog.csdn.net/qq_16184125">我的CSDN</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;微信公众号和CSDN的重新使用&lt;/h1&gt;
&lt;p&gt;最近计划将文章内容同步更新在个人博客、微信公众号和CSDN三个平台上，方便更多地用户进行访问和获取的内容。&lt;/p&gt;
&lt;h2 id=&quot;微信公众号&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#微信公众号&quot;&gt;
      
    
    </summary>
    
    
      <category term="技术" scheme="www.strivezs.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="CSDN" scheme="www.strivezs.com/tags/CSDN/"/>
    
      <category term="微信公众号" scheme="www.strivezs.com/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>百度AI studio+Encoder_Decoder+Anaconda+ V100+ Linux+PyTorch环境配置</title>
    <link href="www.strivezs.com/2020/05/22/%E7%99%BE%E5%BA%A6AI%20studio+Encoder_Decoder+Anaconda+%20V100+%20Linux+PyTorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>www.strivezs.com/2020/05/22/%E7%99%BE%E5%BA%A6AI%20studio+Encoder_Decoder+Anaconda+%20V100+%20Linux+PyTorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2020-05-22T09:46:03.172Z</published>
    <updated>2020-05-22T09:46:03.172Z</updated>
    
    <content type="html"><![CDATA[<h1>百度AI studio+Encoder_Decoder+Anaconda+ V100+ Linux+PyTorch环境配置</h1><p>这里主要以我的毕设代码需要的环境进行配置的，该内容配合miniconda可以扩展到其他的环境下。</p><h2 id="环境配置"><a class="header-anchor" href="#环境配置">¶</a>环境配置</h2><h3 id="dataset存储"><a class="header-anchor" href="#dataset存储">¶</a>dataset存储</h3><p>由于在百度AI Studio中每次项目终止后，data数据集文件夹会按照数据集中的内容重置，因此我需要将需要的数据自行解压到work文件夹下，这样需要的内容就可以保存下载来了。具体解压代码：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rar x abc.rar <span class="regexp">/home/</span>aistudio<span class="regexp">/work/</span>....<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h3 id="Miniconda"><a class="header-anchor" href="#Miniconda">¶</a>Miniconda</h3><p><strong>问题</strong>：由于我之前直接在linux下的python进行pytorch的安装，这种情况只能在项目未关闭的情况下使用，但是当我第二天重启之后发现自动重置了，我之前安装的没了，因此下面我重新装了一个miniconda进行包管理，这样在下次重启之后不会被重置了。</p><h4 id="安装miniconda及其配置"><a class="header-anchor" href="#安装miniconda及其配置">¶</a>安装miniconda及其配置</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">下载：</span><br><span class="line">wget -<span class="keyword">c</span> http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/anaconda/miniconda/Miniconda3-<span class="number">4.7</span>.<span class="number">12.1</span>-Linux-x86_64.<span class="keyword">sh</span></span><br><span class="line">安装：</span><br><span class="line">bash Miniconda3-<span class="number">4.7</span>.<span class="number">12.1</span>-Linux-x86_64.<span class="keyword">sh</span></span><br><span class="line"></span><br><span class="line">激活conda：</span><br><span class="line"><span class="keyword">source</span> ~/miniconda3/bin/avtivate</span><br><span class="line"></span><br><span class="line">更换清华源：</span><br><span class="line">conda config --<span class="built_in">add</span> channels http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/anaconda/pkgs/free/ </span><br><span class="line">conda config --<span class="built_in">add</span> channels http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/anaconda/pkgs/main/ </span><br><span class="line">conda config --<span class="keyword">set</span> show_channel_urls yes</span><br></pre></td></tr></table></figure><p>完成上述操作后，重启一下终端</p><h4 id="配置PyTorch环境"><a class="header-anchor" href="#配置PyTorch环境">¶</a>配置PyTorch环境</h4><p>创建conda新环境并且配置需要的包</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">激活conda</span><br><span class="line">source ~/miniconda3/bin/activate</span><br><span class="line"></span><br><span class="line">创建环境</span><br><span class="line">conda create --name Env_PyTorch <span class="attribute">python</span>=3.7</span><br><span class="line"></span><br><span class="line">进入创建好的环境</span><br><span class="line">conda activate Env_Pytoch</span><br><span class="line"></span><br><span class="line">安装PyTorch</span><br><span class="line">conda install <span class="attribute">pytorch</span>==1.2.0 <span class="attribute">torchvision</span>==0.4.0 <span class="attribute">cudatoolkit</span>=9.2</span><br><span class="line">(去除掉-c pytorch才是使用清华源进行安装的否则仍然是原有的源安装)</span><br><span class="line"></span><br><span class="line">配置其他的需要的包</span><br><span class="line">conda install ipython</span><br><span class="line">conda install scikit-image</span><br><span class="line">conda install <span class="attribute">scipy</span>==1.2.0</span><br><span class="line">conda install tqdm</span><br><span class="line">conda install <span class="attribute">pillow</span>=6.1</span><br><span class="line">conda install h5py</span><br><span class="line">conda install nltk</span><br></pre></td></tr></table></figure><h4 id="验证是否安装PyTorch成功"><a class="header-anchor" href="#验证是否安装PyTorch成功">¶</a>验证是否安装PyTorch成功</h4><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt;import torch &gt;&gt;&gt;print(<span class="name">torch</span>.cuda.is_available()) </span><br><span class="line">&gt;&gt;&gt;print(<span class="name">torch</span>.__version__)</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：每次重启终端都要重新运行</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> ~<span class="regexp">/work/mi</span>niconda3<span class="regexp">/bin/</span>activate </span><br><span class="line">conda activate Env_PyTorch</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a class="header-anchor" href="#常见问题">¶</a>常见问题</h2><p>我想把本地项目文件上传至Notebook项目中, 但文件数量比较多, 怎么上传? （详见官方帮助文档）</p><ul><li>请将项目文件打成zip包后, 在Notebook环境中上传. 如果项目文件较大(&gt;30mb), 请使用数据集功能上传, 然后挂载到项目中.</li><li>最后在项目中通过unzip命令进行解压缩(请注意需要解压到work目录下)<br>如：将压缩文件text.zip在指定目录/tmp下解压缩，如果已有相同的文件存在，要求unzip命令不覆盖原 先的文件。</li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -<span class="keyword">n</span> <span class="keyword">test</span>.<span class="keyword">zip</span> -<span class="keyword">d</span> /tmp</span><br></pre></td></tr></table></figure><ul><li>如执意需要.rar包, 由于该格式为RAR共享软件独有<br>使用如下语句：</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rar 即可得到命令格式和所有参数</span><br><span class="line">rar x abc.rar <span class="regexp">/home/</span>aistudio<span class="regexp">/work/</span>....<span class="regexp">/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;百度AI studio+Encoder_Decoder+Anaconda+ V100+ Linux+PyTorch环境配置&lt;/h1&gt;
&lt;p&gt;这里主要以我的毕设代码需要的环境进行配置的，该内容配合miniconda可以扩展到其他的环境下。&lt;/p&gt;
&lt;h2 id=&quot;环境配置&quot;
      
    
    </summary>
    
    
      <category term="Knowledge" scheme="www.strivezs.com/categories/Knowledge/"/>
    
      <category term="毕设" scheme="www.strivezs.com/categories/Knowledge/%E6%AF%95%E8%AE%BE/"/>
    
      <category term="Linux" scheme="www.strivezs.com/categories/Knowledge/%E6%AF%95%E8%AE%BE/Linux/"/>
    
    
      <category term="Anaconda" scheme="www.strivezs.com/tags/Anaconda/"/>
    
      <category term="Linux" scheme="www.strivezs.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>使用百度 AI Studio来跑深度学习</title>
    <link href="www.strivezs.com/2020/05/22/%E4%BD%BF%E7%94%A8%E7%99%BE%E5%BA%A6%20AI%20Studio%E6%9D%A5%E8%B7%91%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    <id>www.strivezs.com/2020/05/22/%E4%BD%BF%E7%94%A8%E7%99%BE%E5%BA%A6%20AI%20Studio%E6%9D%A5%E8%B7%91%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-05-22T09:45:57.928Z</published>
    <updated>2020-05-22T09:45:57.928Z</updated>
    
    <content type="html"><![CDATA[<h1>使用百度 AI Studio来跑深度学习</h1><p>ps：这里不仅限于跑深度学习，可运行python代码。</p><p>具体网站:<a href="https://aistudio.baidu.com/">click here</a></p><p><strong>这里做完四个任务可以得到100小时的计算时长，同样每天运行项目可以得到12小时的计算时长！太香了~</strong></p><h2 id="导入自己的项目"><a class="header-anchor" href="#导入自己的项目">¶</a>导入自己的项目</h2><h3 id="创建数据集"><a class="header-anchor" href="#创建数据集">¶</a>创建数据集</h3><p>创建数据集并上传数据集压缩包（这里可用用别人开源的数据集）</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/Oc0r22.png" alt="figure.1"></p><h3 id="创建项目"><a class="header-anchor" href="#创建项目">¶</a>创建项目</h3><p>这里建议创建jupyter notebook的项目，因为他可以操控终端，这样就给了我们很多的可能，嘿嘿。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/2qCy98.png" alt="figure.2"></p><p>直接启动环境打开终端，如果有计算时长可能选择高性能的tesla v100计算卡哦。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/HWwpSU.png" alt="figure.3"></p><h3 id="环境配置"><a class="header-anchor" href="#环境配置">¶</a>环境配置</h3><p>在终端中输入如下命令可以查看显卡配置</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">NVIDIA-smi</span></span><br></pre></td></tr></table></figure><p>如下：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/123.png" alt="figure.4"></p><p>在终端输入如下命令，可以查看cuda版本。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nvcc -V</span></span><br></pre></td></tr></table></figure><p>查看cuda环境配置，然后去PyTorch官方找到对应的pytorch版本进行命令行安装即可。</p><p>这样运行神经网络的基础配置就设置好了，</p><h3 id="上传项目"><a class="header-anchor" href="#上传项目">¶</a>上传项目</h3><p>进入项目后，点击上传按钮，将需要的代码文件上传到服务器即可。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/UGMnEc.png" alt="figure.5"></p><h2 id="Final"><a class="header-anchor" href="#Final">¶</a>Final</h2><p>最后这里特别说明一下，服务器的系统环境是linux内核，所以基本上各种数据集的解压（压缩包形式数据集）文件创建删除，代码的运行都是使用命令行来完成的。</p><p>将压缩包abc.rar 解压到指定路径</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rar x abc.rar <span class="regexp">/home/</span>aistudio<span class="regexp">/work/</span>....<span class="regexp">/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;使用百度 AI Studio来跑深度学习&lt;/h1&gt;
&lt;p&gt;ps：这里不仅限于跑深度学习，可运行python代码。&lt;/p&gt;
&lt;p&gt;具体网站:&lt;a href=&quot;https://aistudio.baidu.com/&quot;&gt;click here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong
      
    
    </summary>
    
    
      <category term="Neural Network" scheme="www.strivezs.com/categories/Neural-Network/"/>
    
      <category term="Artificial Intelligence" scheme="www.strivezs.com/categories/Neural-Network/Artificial-Intelligence/"/>
    
      <category term="Knowledge" scheme="www.strivezs.com/categories/Neural-Network/Artificial-Intelligence/Knowledge/"/>
    
    
      <category term="Neural Network" scheme="www.strivezs.com/tags/Neural-Network/"/>
    
      <category term="Server" scheme="www.strivezs.com/tags/Server/"/>
    
  </entry>
  
  <entry>
    <title>MAC+XAMPP+PHPStorm+XDebug</title>
    <link href="www.strivezs.com/2020/05/06/MAC+XAMPP+PHPStorm+XDebug/"/>
    <id>www.strivezs.com/2020/05/06/MAC+XAMPP+PHPStorm+XDebug/</id>
    <published>2020-05-06T03:13:22.764Z</published>
    <updated>2020-05-06T03:13:22.764Z</updated>
    
    <content type="html"><![CDATA[<h1>MAC+XAMPP+PHPStorm+XDebug</h1><p>在网上找了半天，花费了很长时间，总结了网上的内容，发现写的都不是十分全面，这里我写了从头到尾的配置过程。</p><h2 id="下载并安装XAMPP"><a class="header-anchor" href="#下载并安装XAMPP">¶</a>下载并安装XAMPP</h2><p>首先先去官网下载：<a href="https://www.apachefriends.org/zh_cn/index.html">click here</a></p><p>ps:个人补充一点，由于我上来先安装的是最新版本的导致我出现了许多问题，后来我尝试更换成了php7.3版本的XAMPP使用。</p><h2 id="下载并安装PHPStorm"><a class="header-anchor" href="#下载并安装PHPStorm">¶</a>下载并安装PHPStorm</h2><p>直接去官网下载并且安装即可，注意如果你不是教育版或者企业版，则需要购买或者使用密钥（自行查找吧）。 <a href="https://www.jetbrains.com/phpstorm/">click here</a></p><h2 id="配置XAMPP"><a class="header-anchor" href="#配置XAMPP">¶</a>配置XAMPP</h2><p>安装XMAPP之后，我们首先要配置一下conf文件.</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/U8PIJ1.png" alt="figure.1"></p><p>添加上你的端口，这里phpstorm默认使用的63342端口，因此我在配置文件中添加上了63342端口。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/gEdJga.png" alt="figure.2"></p><p>修改成你想要的主站文件夹地址，由于它默认需要你将写好的文件放入到htdocs文件夹中，因此这里我为了方便自定义，我就修改了默认的主站地址。<strong>注意这里写的内容将会成为你的localhost映射的地址</strong>，在后面phpstorm项目配置的时候要注意，这里建议给一个比较大的文件范围作为默认的主站地址。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/URpdu4.png" alt="figure.3"></p><p>如果没有权限的话，则将User 改成你自己的用户名即可。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/IiOE3f.png" alt="figure.4"></p><p>按照上述过程配置好之后，重启以下apache就可以监听对应端口了。至于MySQL的我暂时没有到放在以后去写了。</p><h2 id="PHPStorm配置"><a class="header-anchor" href="#PHPStorm配置">¶</a>PHPStorm配置</h2><p>首先是创建一个PHP项目，然后打开Preferences-&gt;Debugger设置一下端口号，这里我们直接使用的默认63342的，如果你不使用默认的话，这里修改了对应着conf配置文件也要修改。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/Ql0vJT.png" alt="figure.5"></p><p>然后打开Deployment设置部署事宜。</p><p>创建一个local or mounted folder，然后设置一下项目地址，以及启动的网站，这里如果不是默认80端口的话，都要添加上自己端口号。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/POJUXS.png" alt="figure.6"></p><p>点开映射部分，设置一下自己的映射，<strong>注意这里之前在conf文件夹中设置了父级主站目录</strong>，因此我们需要在Web Path一栏中设置一下详细的目录，并且在local path中添加上项目地址。具体如下：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/4DEfk5.png" alt="figure.7"></p><p>配置完成之后一定要点一下那个小对勾，将该服务器设置为默认服务器。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/DdckXH.png" alt="figure.8"></p><h2 id="配置PHP"><a class="header-anchor" href="#配置PHP">¶</a>配置PHP</h2><p>注意如果你是mac系统的话，则不需要使用xampp的php，可以直接使用你mac自导的php，在终端输入php-version可以查看当前php的版本，然后你打开Preferences-&gt;-&gt; Language -&gt; PHP 来选择你的解释器，默认是没有选择的。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/mNJ27O.png" alt="figure.9"></p><p>注意两个栏的版本要一直，如果想要使用xampp中的php，则新建一个php，然后找到XAMPP/xamppfiles/bin/php-7.3.17来创建一个新的php。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/SQdQUu.png" alt="figure.13"></p><h2 id="配置XDebug"><a class="header-anchor" href="#配置XDebug">¶</a>配置XDebug</h2><h3 id="安装xdebug扩展"><a class="header-anchor" href="#安装xdebug扩展">¶</a>安装xdebug扩展</h3><ul><li>查询与当前环境匹配的 xdebug 版本 <a href="https://xdebug.org/wizard">click here</a></li><li>进入bin文件夹，cd /Applications/XAMPP/bin</li><li>sudo ./pecl search xdebug-2.x.x 这里的版本号根据上面查找到的</li><li>sudo ./pecl install xdebug-2.x.x  安装</li><li>在etc文件夹中找到php.ini的最后添加如下内容</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">zend_extension</span>=/Applications/XAMPP/xamppfiles/lib/php/extensions/<span class="literal">no</span>-debug-non-zts-<span class="number">20180731</span>/xdebug.so <span class="comment">;该行内容在安装完 xdebug 后，可从安装结束语中获取</span></span><br><span class="line"><span class="attr">xdebug.remote_enable</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">xdebug.remote_host</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">xdebug.remote_port</span> = <span class="number">9000</span></span><br><span class="line"><span class="attr">xdebug.idekey</span> = PHPSTORM</span><br><span class="line"><span class="attr">xdebug.auto_start</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>重启apache服务器</li></ul><h3 id="配置PHP-v2"><a class="header-anchor" href="#配置PHP-v2">¶</a>配置PHP</h3><p>打开Perference-&gt;Language-&gt;Debuger, 设置端口号为9000</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/fz3haO.png" alt="figure.13"></p><p>打开Perference-&gt;Language-&gt;Debuger-&gt;DBGp Proxy 配置代理信息</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/dlnNw2.png" alt="figure.14"></p><p>配置Server</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/fFrJL9.png" alt="figure.15"></p><p>创建PHP Web并进行配置</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/4uL0fc.png" alt="figure.16"></p><h3 id="安装Chrome插件"><a class="header-anchor" href="#安装Chrome插件">¶</a>安装Chrome插件</h3><p>安装Chrome xdebug 插件，并且配置为debug模式 <a href="https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc?utm_source=chrome-ntp-icon">click here</a></p><h3 id="PHPSTORM开启监听"><a class="header-anchor" href="#PHPSTORM开启监听">¶</a>PHPSTORM开启监听</h3><p>绿色小电话！！！</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/t2AJ2X.png" alt="figure.17"></p><h2 id="运行"><a class="header-anchor" href="#运行">¶</a>运行</h2><p>当你配置完成之后，创建一个php文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>id<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"> <span class="keyword">echo</span> <span class="string">"hello world"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>单击chrome运行即可以在浏览器中查看项目。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/ENYizv.png" alt="figure.10"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/HSYcz5.png" alt="figure.11"></p><p>ps：补充一年，如果你想设置运行按钮单击直接显示网页的话，则添加一个PHP Web Page</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/yCmBS9.png" alt="figure.12"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;MAC+XAMPP+PHPStorm+XDebug&lt;/h1&gt;
&lt;p&gt;在网上找了半天，花费了很长时间，总结了网上的内容，发现写的都不是十分全面，这里我写了从头到尾的配置过程。&lt;/p&gt;
&lt;h2 id=&quot;下载并安装XAMPP&quot;&gt;&lt;a class=&quot;header-anchor&quot; 
      
    
    </summary>
    
    
      <category term="文章页" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/"/>
    
      <category term="PHP" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/PHP/"/>
    
    
      <category term="PHP" scheme="www.strivezs.com/tags/PHP/"/>
    
      <category term="PHPStorm" scheme="www.strivezs.com/tags/PHPStorm/"/>
    
      <category term="XAMPP" scheme="www.strivezs.com/tags/XAMPP/"/>
    
      <category term="XDebug" scheme="www.strivezs.com/tags/XDebug/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda配置清华源并且安装PyTorch.md</title>
    <link href="www.strivezs.com/2020/04/22/Anaconda%E9%85%8D%E7%BD%AE%E6%B8%85%E5%8D%8E%E6%BA%90%E5%B9%B6%E4%B8%94%E5%AE%89%E8%A3%85PyTorch.md/"/>
    <id>www.strivezs.com/2020/04/22/Anaconda%E9%85%8D%E7%BD%AE%E6%B8%85%E5%8D%8E%E6%BA%90%E5%B9%B6%E4%B8%94%E5%AE%89%E8%A3%85PyTorch.md/</id>
    <published>2020-04-22T03:36:21.885Z</published>
    <updated>2020-04-22T03:36:21.885Z</updated>
    
    <content type="html"><![CDATA[<h1>Anaconda配置清华源并且安装PyTorch</h1><h2 id="配置清华源"><a class="header-anchor" href="#配置清华源">¶</a>配置清华源</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">配置基础包：</span><br><span class="line">conda config --add channels http:<span class="regexp">//mi</span>rror.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>pkgs<span class="regexp">/main/</span></span><br><span class="line">conda config --add channels http:<span class="regexp">//mi</span>rror.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>pkgs<span class="regexp">/free/</span></span><br><span class="line"></span><br><span class="line">配置拓展包比如PyTorch</span><br><span class="line">conda config --add channels https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>cloud<span class="regexp">/conda-forge/</span> </span><br><span class="line">conda config --add channels https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>cloud<span class="regexp">/msys2/</span> </span><br><span class="line">conda config --add channels https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>cloud<span class="regexp">/bioconda/</span> </span><br><span class="line">conda config --add channels https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>cloud<span class="regexp">/menpo/</span> </span><br><span class="line">conda config --add channels https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>cloud<span class="regexp">/pytorch/</span></span><br><span class="line"></span><br><span class="line">执行：</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure><h2 id="安装PyTorch"><a class="header-anchor" href="#安装PyTorch">¶</a>安装PyTorch</h2><p>去官网选择对应的版本安装，<strong>需要注意的是要去掉 -c pytorch 否则安装的源来自于官网而不是自己之前设置的源</strong></p><p>如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch torchvision <span class="attribute">cudatoolkit</span>=9.0 -c pytorch</span><br><span class="line">改为</span><br><span class="line">conda install pytorch torchvision <span class="attribute">cudatoolkit</span>=9.0</span><br></pre></td></tr></table></figure><p>建议：在我们搭建好环境之后，最好就先添加镜像站到Anaconda中，这样安装包的时候，速度会得到大大的提升</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Anaconda配置清华源并且安装PyTorch&lt;/h1&gt;
&lt;h2 id=&quot;配置清华源&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#配置清华源&quot;&gt;¶&lt;/a&gt;配置清华源&lt;/h2&gt;
&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Word Embedding</title>
    <link href="www.strivezs.com/2020/04/04/Word%20Embedding/"/>
    <id>www.strivezs.com/2020/04/04/Word%20Embedding/</id>
    <published>2020-04-04T09:54:30.990Z</published>
    <updated>2020-04-04T09:54:30.990Z</updated>
    
    <content type="html"><![CDATA[<h1>Word Embedding</h1><h2 id="Introduction"><a class="header-anchor" href="#Introduction">¶</a>Introduction</h2><h3 id="引入One-Hot"><a class="header-anchor" href="#引入One-Hot">¶</a>引入One-Hot</h3><p>自然语言处理主要研究语言信息，语言（词、句子等）属于人类认知过程中产生的高层认知抽象实体，而语言和图像属于较低层的元时输入信号。语音、图像和数据表达不需要特殊的编码，并且有天生的顺序性和关联性，近似的数字会被认为是近似的特征集合。正如图像是由像素的组成，语言是由词或字组成，可以把语言转换为词或字表示的结合。<br>然后，不同于像素的大小天生具有色彩信息，词的数值大小很难表征词的含义。最后，人们为了方便，<strong>采用One-Hot编码格式</strong>，以一个只有10个不同词的语料库为例，我们可以用一个10位的向量来表示每个词，该向量在词下标位置的值为1，而其他全部为0.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一个词：[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">第二个词: [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">·····</span><br><span class="line">第十个词：[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>这种词的表示方法十分简单，也很容易实现，充分解决了分类器难以处理属性数据的问题。但是它的<strong>缺点</strong>也很明显：冗余太多、无法体现词与词之间的关系。可以看到，这10个词的表示，彼此之间都是相互正交的。同时，随着词数的，One-Hot向量的维度也会急剧增长，如果有3000个不同的词，那么每个One-Hot词向量都是3k维，而且只有一个位置为1，其余位置都是0。（<strong>这里感觉为了节省的可以采用（300，3000）来表示长度为3k的向量第300个位置上为1，其余都为0</strong>）。虽然One-Hot编码格式在传统任务上表现出色，但是由于词的维度太高了，应用在深度学习上时，常常出现维度灾难，<ins>所以在深度学习中一般采用词向量的表示形式</ins>。</p><h3 id="引入词向量"><a class="header-anchor" href="#引入词向量">¶</a>引入词向量</h3><p>词向量(Word Vector)，也称为词嵌入(Word Embedding),并没有严格统一的定义。从概念上讲，<strong>它是指把一个维数为所有词的数量的高维空间(几万几十万个字)嵌入一个维数低得多的连续向量空间(128或256维)中，每个单词或词组被映射为实数域上的向量</strong>。<br>词向量有专门的训练方法，这里不会细讲，感兴趣的可以学习斯坦福的CS224系列课程。这里只需要了解<strong>词向量最重要的特征是相似词的词向量距离相近。每个词的词向量维度都是固定的，每一维都是连续的数。</strong></p><p>举个例子，如果我们用二维的词向量表示十个词：足球、比赛、教练、队伍、裤子、长裤、上衣和编制、折叠、拉，那么可视化出来的结果如下所示:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/YorrIg.png" alt="figure.1"></p><p>可以看出，<strong>同类词彼此聚集，相互之间的距离较近</strong>。</p><p>由此可见，用词向量表示词，不仅所有维度会变少（十维变为二维），其中也会包含更合理的语义信息。除了相邻词距离更近之外，词向量还有不少有趣的特征，如下图所示：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/AlftfF.png" alt="figure.2"></p><p>虚线的的两端分别是男性词和女性词，例如：叔叔和阿姨、兄弟和姐妹、先生和女士。可以看出，虚线的方向和长度都差不多，因此可以认为：国王-女王≈男人-女人，即国王可以看成男性君主，女王可以看出女性君主，国王减去男性，只剩下君主的特征，女王减去女性，也只剩下君主的特征，所以这二者近似。</p><h2 id="具体介绍"><a class="header-anchor" href="#具体介绍">¶</a>具体介绍</h2><p>英文一般是用一个向量表示一个单词，也有使用一个向量表示一个字母的情况。中文同样也有一个词或者一个字的词向量表示，与英文采用空格来区分词不同，中文的词与词之间没有间隔，因此**如果采用基于词的词向量表示，需要先进行中文分词*。</p><p>这里只对词向量做一个概要性的介绍，让我们有一个直观地认知。我们只需要掌握词向量技术用向量表证词，相似词之间的向量距离近，</p><h3 id="PyTorch使用"><a class="header-anchor" href="#PyTorch使用">¶</a>PyTorch使用</h3><p>在PyTorch中，针对词向量有一个专门的层<strong>nn.Embedding</strong>，<ins>用来实现词与词向量的映射</ins>。nn.Embedding具有一个权重，形状是(num_words,embedding_dim)，例如：对上述句子中的10个词，每个词用2维向量表征，对应的权重就是一个10×2的矩阵。<strong>Embedding的输入形状是N×W，N是batch size， W是序列长度，输出的形状是N×W×embedding_dim.输入必须是LongTensor，FloatTensor须通过tensor.long（）方法转成LongTensor</strong>。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># coding:utf8</span><br><span class="line"><span class="keyword">import</span> torch as t</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line">embedding = t.nn.Embedding(<span class="number">10</span>,<span class="number">2</span>) # 十个词，每个词用二维词向量表示</span><br><span class="line">input = t.arrange(<span class="number">0</span>,<span class="number">6</span>).view(<span class="number">3</span>,<span class="number">2</span>).long() # 三个句子，每个句子有两个词 N为<span class="number">3</span> W为<span class="number">2</span></span><br><span class="line">input = t.<span class="built_in">auto</span>grad.Variable(input)</span><br><span class="line">output = embedding(input)</span><br><span class="line">print(output.size())</span><br><span class="line">print(embedding.weight.size())</span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">3</span>L,<span class="number">2</span>L,<span class="number">2</span>L)</span><br><span class="line">(<span class="number">10</span>L,<span class="number">2</span>L)</span><br></pre></td></tr></table></figure><p>需要注意的是，Embedding的权重也是可以训练的，既可以采用随机初始化，也可以采用预训练好的词向量初始化。</p><h2 id="简单总结"><a class="header-anchor" href="#简单总结">¶</a>简单总结</h2><p>可以使用torch.nn.Embedding(num_words,embedding_dim)来生成一个大小为num_words×embedding_dim词向量，<br>其中共有num_words个单词，每个单词用一个二维词向量表示 类似横纵坐标</p><p>输入到embedding中的tensor必须是LongTensor，如果是FloatTensor必须用long（）转换<br>Embedding的输入为N×W N是batch_size W是每个batch的单词数 如输入三个句子 每个句子包含两个单词<br>Embedding的输出为N×W×embedding 即为输出还是三个句子 每个句子仍然是两个单词表示 但是每个单词则用一个二维向量表示</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Word Embedding&lt;/h1&gt;
&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#Introduction&quot;&gt;¶&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;h3 id=&quot;引入One-Hot&quot;&gt;&lt;a cla
      
    
    </summary>
    
    
      <category term="Knowledge" scheme="www.strivezs.com/categories/Knowledge/"/>
    
      <category term="Nerual Network" scheme="www.strivezs.com/categories/Knowledge/Nerual-Network/"/>
    
    
      <category term="word embedding" scheme="www.strivezs.com/tags/word-embedding/"/>
    
  </entry>
  
  <entry>
    <title>环境配置：NVIDIA+Anaconda+PyTorch+PyCharm</title>
    <link href="www.strivezs.com/2020/03/18/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%EF%BC%9ANVIDIA+Anaconda+PyTorch+PyCharm/"/>
    <id>www.strivezs.com/2020/03/18/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%EF%BC%9ANVIDIA+Anaconda+PyTorch+PyCharm/</id>
    <published>2020-03-18T02:22:12.072Z</published>
    <updated>2020-03-18T02:22:12.072Z</updated>
    
    <content type="html"><![CDATA[<h1>环境配置：NVIDIA+Anaconda+PyTorch+PyCharm</h1><h2 id="步骤"><a class="header-anchor" href="#步骤">¶</a>步骤</h2><h3 id="配置英伟达显卡"><a class="header-anchor" href="#配置英伟达显卡">¶</a>配置英伟达显卡</h3><h4 id="安装CUDA"><a class="header-anchor" href="#安装CUDA">¶</a>安装CUDA</h4><ul><li>首先打开自己的英伟达控制面板查看自己的系统信息，如下图所示：我的是CUDA10.2.95因此需要去英伟达官网下载对应版本的CUDA，下载地址：<a href="https://developer.nvidia.com/cuda-downloads?target_os=Windows&amp;target_arch=x86_64&amp;target_version=10&amp;target_type=exenetwork">click here</a></li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/rr74XI.png" alt="figure.3"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/r1wfSH.png" alt="figure.0"></p><ul><li>进行安装，基本上就是傻瓜式下一步没什么，等待安装完成即可</li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/QNrK0e.png" alt="figure.1"></p><h4 id="安装Cudnn"><a class="header-anchor" href="#安装Cudnn">¶</a>安装Cudnn</h4><ul><li>首先去英伟达官网下载cudnn(这里需要登录下载)。具体下载链接：<a href="https://developer.nvidia.com/cudnn">click here</a></li><li>下载完成之后解压得到一个文件夹(蜜汁感动竟然是压缩包不用安装), 将文件夹中的内容放到在C盘路径为**C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2**的对应文件夹中，直接复制进去就好了</li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/PRdOlQ.png" alt="figure.2"></p><h3 id="配置PyTorch"><a class="header-anchor" href="#配置PyTorch">¶</a>配置PyTorch</h3><ul><li>这里我使用的是anaconda来进行包的管理，具体anaconda下载地址： <a href="https://www.anaconda.com/">click here</a></li><li>PyTorch安装，<strong>切记这里需要安装和cuda对应版本的PyTorch！</strong></li><li>首先去PyTorch官网找到安装命令，如下图：</li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/AxTd0k.png" alt="figure.4"></p><ul><li>然后在Anaconda中输入该命令即可：</li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/PnvbJp.png" alt="figure.5"></p><ul><li>安装完成</li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/dUyIVX.png" alt="figure.6"></p><h2 id="验证"><a class="header-anchor" href="#验证">¶</a>验证</h2><h3 id="版本验证"><a class="header-anchor" href="#版本验证">¶</a>版本验证</h3><ul><li>在命令行中输入</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nvcc -V</span></span><br></pre></td></tr></table></figure><p>会观察到如下版本信息：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/4ARnMy.png" alt="figure.7"></p><h3 id="PyCharm验证能够使用CUDA"><a class="header-anchor" href="#PyCharm验证能够使用CUDA">¶</a>PyCharm验证能够使用CUDA</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(torch.__version__)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(torch.version.cuda)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(torch.cuda.is_available()</span></span>)</span><br></pre></td></tr></table></figure><p>如果输出结果为True，则表示cuda可以使用了。（建议不用最新版的NVIDIA驱动，否则CUDA版本也会升级 PyTorch不一定会有对应版本 没有对应版本不能正常使用。）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;环境配置：NVIDIA+Anaconda+PyTorch+PyCharm&lt;/h1&gt;
&lt;h2 id=&quot;步骤&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#步骤&quot;&gt;¶&lt;/a&gt;步骤&lt;/h2&gt;
&lt;h3 id=&quot;配置英伟达显卡&quot;&gt;&lt;a class=&quot;header
      
    
    </summary>
    
    
      <category term="Knowledge" scheme="www.strivezs.com/categories/Knowledge/"/>
    
      <category term="PyTorch" scheme="www.strivezs.com/categories/Knowledge/PyTorch/"/>
    
    
      <category term="PyCharm" scheme="www.strivezs.com/tags/PyCharm/"/>
    
      <category term="NVIDIA" scheme="www.strivezs.com/tags/NVIDIA/"/>
    
      <category term="PyTorch" scheme="www.strivezs.com/tags/PyTorch/"/>
    
      <category term="CUDA" scheme="www.strivezs.com/tags/CUDA/"/>
    
  </entry>
  
  <entry>
    <title>使用CDN加速github page访问</title>
    <link href="www.strivezs.com/2020/02/22/%E4%BD%BF%E7%94%A8CDN%E5%8A%A0%E9%80%9Fgithub%20page%E8%AE%BF%E9%97%AE/"/>
    <id>www.strivezs.com/2020/02/22/%E4%BD%BF%E7%94%A8CDN%E5%8A%A0%E9%80%9Fgithub%20page%E8%AE%BF%E9%97%AE/</id>
    <published>2020-02-22T03:15:36.268Z</published>
    <updated>2020-02-22T03:15:36.268Z</updated>
    
    <content type="html"><![CDATA[<h1>使用CDN加速github page访问</h1><p>这里我使用的<a href="https://portal.qiniu.com/">七牛云</a>来加速网站的访问.</p><p><strong>特别注意：你的域名一定要备案了才能用CDN！！！</strong></p><h2 id="步骤"><a class="header-anchor" href="#步骤">¶</a>步骤</h2><h3 id="创建CDN域名加速实例"><a class="header-anchor" href="#创建CDN域名加速实例">¶</a>创建CDN域名加速实例</h3><p><img src="https://gitee.com/zyp521/upload_image/raw/master/099ePA.png" alt="figure1"></p><h3 id="配置实例"><a class="header-anchor" href="#配置实例">¶</a>配置实例</h3><p><img src="https://gitee.com/zyp521/upload_image/raw/master/MNex84.png" alt="figure2"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/m4lIay.png" alt="figure3"></p><p>配置完如上实例后，需要等待实例状态变为成功:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/XbWs3j.png" alt="figure4"></p><h3 id="添加到CNAME解析"><a class="header-anchor" href="#添加到CNAME解析">¶</a>添加到CNAME解析</h3><p>打开你自己的域名管理控制台。这里我用的是阿里云的域名管理控制台，进行域名就解析的配置：</p><h4 id="配置www"><a class="header-anchor" href="#配置www">¶</a>配置www</h4><p><img src="https://gitee.com/zyp521/upload_image/raw/master/LnLHLc.png" alt="figure5"></p><h4 id="配置"><a class="header-anchor" href="#配置">¶</a>配置@</h4><p><img src="https://gitee.com/zyp521/upload_image/raw/master/opB6nc.png" alt="figure6"></p><h2 id="验证解析成功没有"><a class="header-anchor" href="#验证解析成功没有">¶</a>验证解析成功没有</h2><h3 id="mac-linux"><a class="header-anchor" href="#mac-linux">¶</a>mac/linux</h3><p>在命令台输入</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dig </span>你的网址</span><br></pre></td></tr></table></figure><p>如果返回如下结果则表明解释成功了.</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/eI5g8q.png" alt="figure7"></p><h3 id="Windows"><a class="header-anchor" href="#Windows">¶</a>Windows</h3><p>由于这里我是mac系统所以windows我就贴出网上找到的验证方式：</p><p>windows系统可以通过Win+R 或 点击左下角的“开始”按钮打开“开始”菜单，打开“运行”，输入cmd回车。</p><p>在命令行模式下输入nslookup 您的加速域名，例如 nslookup qn.vinchi.club,在结果中可以看到您复制的cname值即可</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/Uz6PkK.jpg" alt="figure8"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;使用CDN加速github page访问&lt;/h1&gt;
&lt;p&gt;这里我使用的&lt;a href=&quot;https://portal.qiniu.com/&quot;&gt;七牛云&lt;/a&gt;来加速网站的访问.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特别注意：你的域名一定要备案了才能用CDN！！！&lt;/strong&gt;
      
    
    </summary>
    
    
      <category term="文章页" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/"/>
    
      <category term="Github" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/Github/"/>
    
      <category term="域名" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/Github/%E5%9F%9F%E5%90%8D/"/>
    
    
      <category term="域名解析" scheme="www.strivezs.com/tags/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
    
      <category term="Github Page" scheme="www.strivezs.com/tags/Github-Page/"/>
    
      <category term="CDN加速" scheme="www.strivezs.com/tags/CDN%E5%8A%A0%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>Learning In RNN Part II</title>
    <link href="www.strivezs.com/2020/02/16/Learning%20In%20RNN%20Part%20II/"/>
    <id>www.strivezs.com/2020/02/16/Learning%20In%20RNN%20Part%20II/</id>
    <published>2020-02-16T04:04:20.591Z</published>
    <updated>2020-02-16T04:04:20.591Z</updated>
    
    <content type="html"><![CDATA[<h1>Learning In RNN Part II</h1><p><strong>Learning Tager:</strong> Make the loss be minimize that evaluating by cost function.</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/kHcMXX.png" alt="figure1"></p><h2 id="Unfortunately"><a class="header-anchor" href="#Unfortunately">¶</a>Unfortunately</h2><ul><li>RNN-based network is not always easy to learn.</li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/8bJy2V.png" alt="figure2"></p><ul><li>Th error surface is rought</li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/dy4doG.png" alt="figure3"></p><h2 id="Helpful-Techniques"><a class="header-anchor" href="#Helpful-Techniques">¶</a>Helpful Techniques</h2><h3 id="Long-Short-term-Memory-LSTM"><a class="header-anchor" href="#Long-Short-term-Memory-LSTM">¶</a>Long Short-term Memory(LSTM)</h3><h4 id="Why-replace-RNN-to-LSTM"><a class="header-anchor" href="#Why-replace-RNN-to-LSTM">¶</a>Why replace RNN to LSTM?</h4><p>Can deal with gradient vanishing(消灭，等于0) (not gradient explode爆炸激增)<br>It can make your error surface to be flatting nor not steep.<br>The specify performance is that it can remove the flat regions and solve the problem of gradient vanishing, but not gradient explode.</p><h4 id="How-to-work"><a class="header-anchor" href="#How-to-work">¶</a>How to work:</h4><p>The different operation between RNN and LSTM is that RNN can reomve value in memory after each computation and store new value. But LSTM can add the previous value to new value in cell memory after each computation.(Concretely depend on the value of forget gate)<br>So the difference of RNN and LSTM is if a weight influence value of memory, the influence never disappears unless forget gate is closed.<br>If forget gate is opened, there no gradient vanishing.</p><h4 id="Summarization"><a class="header-anchor" href="#Summarization">¶</a>Summarization</h4><ul><li>can deal with gradient vanishing(not gradient explode)</li><li>Memory and input are <ins>added</ins></li><li>The influence never disappears<br>unless forget gate is closed</li><li>No Gradient vanishing(If forget gate is opened)</li></ul><p>Gated Recurrent Unit(GRU):simpier thant LSTM</p><p><strong>Other helpful techniques:</strong></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/EDrdli.png" alt="figure4"></p><h2 id="More-Applications"><a class="header-anchor" href="#More-Applications">¶</a>More Applications</h2><h3 id="Many-to-one"><a class="header-anchor" href="#Many-to-one">¶</a>Many to one</h3><ul><li>Input is a vector sequence, but output is only one vector.</li></ul><p><strong>Sentiment Analysis:(意见分析)</strong></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/K5bxC0.png" alt="figure5"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/XKwMQM.png" alt="figure6"></p><h3 id="Many-to-Many-Output-is-shorter"><a class="header-anchor" href="#Many-to-Many-Output-is-shorter">¶</a>Many to Many (Output is shorter)</h3><ul><li>Both input and output are both sequences, <strong>but the output is shorter</strong>.</li></ul><p><strong>Speech Recognition:</strong></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/QuBJ2j.png" alt="figure7"></p><h4 id="How-to-differentiate"><a class="header-anchor" href="#How-to-differentiate">¶</a>How to differentiate?</h4><ul><li>Connectionist Temporal Classification(<strong>CTC</strong>，联结主义时间分类)</li></ul><p>==Add an extra symbol “Φ” representing “null”.==</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/kCJIsg.png" alt="figure8"></p><p>Use this method to slove the problem like differentiate “好棒” or “好棒棒”.</p><h4 id="CTC-Training"><a class="header-anchor" href="#CTC-Training">¶</a>CTC Training</h4><p><strong>Acoustic Features:(声音特征)</strong><br>ALL possible alignments(序列/顺序) are considered as correct because we don’t know what alignment is correct. So we can list all alignments to train.</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/WPPHRn.png" alt="figure9"></p><h4 id="CTC-example"><a class="header-anchor" href="#CTC-example">¶</a>CTC: example</h4><p><img src="https://gitee.com/zyp521/upload_image/raw/master/3yexBF.png" alt="figure10"></p><h3 id="Many-to-Many-No-Limitation"><a class="header-anchor" href="#Many-to-Many-No-Limitation">¶</a>Many to Many (No Limitation)</h3><ul><li>Both input and output are both sequences <strong>with differnet lengths</strong>. ➡ <strong>Sequence to sequence learning</strong><br><strong>Machine Translate</strong>(Machine Learning ➡ 机器学习)</li></ul><p><strong>bag-of-word:</strong></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/HjyAMK.png" alt="figure11"></p><p>Above model can’t stop until it’s interrupted.</p><h4 id="How-to-make-the-network-stop"><a class="header-anchor" href="#How-to-make-the-network-stop">¶</a>How to make the network stop</h4><ul><li>Adda a symbol ‘===’(断)</li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/8Gu1j2.png" alt="figure12"></p><h3 id="Beyond-Sequence"><a class="header-anchor" href="#Beyond-Sequence">¶</a>Beyond Sequence</h3><ul><li>Syntactic parsing(句法分析)</li></ul><h4 id="Transform-Tree-Structure-to-sequence"><a class="header-anchor" href="#Transform-Tree-Structure-to-sequence">¶</a>Transform Tree Structure to sequence</h4><p><strong>Conversion principle:</strong></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/BRp1UF.png" alt="figure13"></p><p>We can transform sentence tree to sequence by using this principle and train a sequence model to recognize sentence.</p><h3 id="Sequence-to-sequence"><a class="header-anchor" href="#Sequence-to-sequence">¶</a>Sequence-to-sequence</h3><h4 id="Auto-encoder-Text"><a class="header-anchor" href="#Auto-encoder-Text">¶</a>Auto-encoder-Text</h4><ul><li>To understand the meaning of a word sequence, the order of the words can not be ignored.</li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/By7XBu.png" alt="figure14"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/wYKkpA.png" alt="figure15"></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/eCiGf3.png" alt="figure16"></p><h4 id="Auto-encoder-Speech"><a class="header-anchor" href="#Auto-encoder-Speech">¶</a>Auto-encoder-Speech</h4><ul><li>Dimension reduction for a sequence with variable length</li></ul><p>audio segments()word-level-&gt;Fixed-length vector</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/RARIzh.png" alt="figure17"></p><h5 id="Audio-Search-Principle"><a class="header-anchor" href="#Audio-Search-Principle">¶</a><strong>Audio Search Principle:</strong></h5><p><img src="https://gitee.com/zyp521/upload_image/raw/master/zYlxJy.png" alt="figure18"></p><h5 id="How-to-transform-audio-segment-to-vector"><a class="header-anchor" href="#How-to-transform-audio-segment-to-vector">¶</a>How to transform audio segment to vector</h5><p><img src="https://gitee.com/zyp521/upload_image/raw/master/tTKbLU.png" alt="figure19"></p><p>ps: jointly 共同地 同时地 similarity 相似 类似 embedding 埋入/埋葬</p><h5 id="Visualizing-embedding-vectors-of-the-words"><a class="header-anchor" href="#Visualizing-embedding-vectors-of-the-words">¶</a>Visualizing embedding vectors of the words</h5><p><img src="https://gitee.com/zyp521/upload_image/raw/master/CGfD3r.png" alt="figure20"></p><h4 id="Sequence-to-sequence-Learning-Demo-Chat-bot"><a class="header-anchor" href="#Sequence-to-sequence-Learning-Demo-Chat-bot">¶</a>Sequence-to-sequence Learning Demo:Chat-bot</h4><p><strong>Learning Principle:</strong></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/0szRES.png" alt="figure21"></p><p><strong>Data Set:</strong><br>40000 sentences in Movie album and discussion of presidential election in American.</p><h2 id="Attention-based-Model"><a class="header-anchor" href="#Attention-based-Model">¶</a>Attention-based Model</h2><p><strong>Structure Version 1:</strong></p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/Ajbf8o.png" alt="figure22"></p><p><strong>Structure Version 2:</strong><br>==Neural Turing Machine(神经图灵机)==</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/h4FdpY.png" alt="figure23"></p><h3 id="Reading-Comprehension"><a class="header-anchor" href="#Reading-Comprehension">¶</a>Reading Comprehension</h3><p><img src="https://gitee.com/zyp521/upload_image/raw/master/ErGx83.png" alt="figure24"></p><h3 id="Visual-Question-Answering"><a class="header-anchor" href="#Visual-Question-Answering">¶</a>Visual Question Answering</h3><p><img src="https://gitee.com/zyp521/upload_image/raw/master/opnM0d.png" alt="figure25"></p><p><strong>Principle:</strong><br>==A vector for each region==</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/QyhNhJ.png" alt="figure26"></p><h3 id="Speech-Question-Answering"><a class="header-anchor" href="#Speech-Question-Answering">¶</a>Speech Question Answering</h3><ul><li>TOEFL Listening Comprehension Test By Machine</li></ul><p><strong>Example:</strong></p><ol><li>Audio Story: the original story is 5 min long</li><li>Question: “what is possible of Venus’ clouds?”</li><li>Choices:<ol><li>gased released as a result of volcanic activity</li><li>chemical reactions caused by high surface temperatures</li><li>bursts of radio energy from the plane’s surface</li><li>strong winds that blow dust into the atmosphere</li></ol></li></ol><h4 id="Model-Architecture"><a class="header-anchor" href="#Model-Architecture">¶</a>Model Architecture</h4><p>Everything is learned from training examples.</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/ADclLS.png" alt="figure27"></p><h2 id="Deep-Structure"><a class="header-anchor" href="#Deep-Structure">¶</a>Deep &amp; Structure</h2><h3 id="Integrated-together"><a class="header-anchor" href="#Integrated-together">¶</a>Integrated together</h3><ul><li>Speech Recognition: CNN/LSTM/DNN+HMM<br><img src="https://gitee.com/zyp521/upload_image/raw/master/JKDhvu.jpg" alt="figure28"></li></ul><p>Bayes theorem</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/ssXaWg.png" alt="figure29"></p><ul><li>Sematic Tagging: Bi-directional LSTM+CRF/Structured SVM<br>Testing:<br><img src="https://gitee.com/zyp521/upload_image/raw/master/zryrFy.jpg" alt="figure31"></li></ul><p><img src="https://gitee.com/zyp521/upload_image/raw/master/GJhyYd.png" alt="figure30"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Learning In RNN Part II&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Learning Tager:&lt;/strong&gt; Make the loss be minimize that evaluating by cost function.&lt;/p&gt;
&lt;p&gt;&lt;img
      
    
    </summary>
    
    
      <category term="文章页" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/"/>
    
      <category term="Python" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/Python/"/>
    
      <category term="Machine Learning" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/Python/Machine-Learning/"/>
    
      <category term="Neural NetWork" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/Python/Machine-Learning/Neural-NetWork/"/>
    
    
      <category term="Python" scheme="www.strivezs.com/tags/Python/"/>
    
      <category term="Machine Learning" scheme="www.strivezs.com/tags/Machine-Learning/"/>
    
      <category term="RNN" scheme="www.strivezs.com/tags/RNN/"/>
    
  </entry>
  
  <entry>
    <title>将域名从服务器解析到github page上</title>
    <link href="www.strivezs.com/2020/02/16/%E5%B0%86%E5%9F%9F%E5%90%8D%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E6%9E%90%E5%88%B0github%20page%E4%B8%8A/"/>
    <id>www.strivezs.com/2020/02/16/%E5%B0%86%E5%9F%9F%E5%90%8D%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E6%9E%90%E5%88%B0github%20page%E4%B8%8A/</id>
    <published>2020-02-16T03:58:38.133Z</published>
    <updated>2020-02-16T03:58:38.133Z</updated>
    
    <content type="html"><![CDATA[<h1>将域名从服务器解析到github page上</h1><ol><li>首先停用掉自己之前的所使用的的子域名</li></ol><p><img src="https://gitee.com/zyp521/upload_image/raw/master/n2rrTi.png" alt="figure1"></p><ol start="2"><li>然后将列表中关于服务器解析的相关记录去除掉防止出现冲突</li></ol><p><img src="https://gitee.com/zyp521/upload_image/raw/master/JzKtQB.png" alt="figure2"></p><ol start="3"><li>然后修改github上项目配置将著名设置为<ins><a href="http://www.stirvezs.com">www.stirvezs.com</a></ins>.</li></ol><p><img src="https://gitee.com/zyp521/upload_image/raw/master/jnIjhS.png" alt="figure3"></p><ol start="4"><li>修改hexo中的配置文件将url：<a href="http://xn--www-c88d846h.strivezs.com">改为www.strivezs.com</a></li></ol><p><img src="https://gitee.com/zyp521/upload_image/raw/master/5cew7x.png" alt="figure4"></p><ol start="5"><li>在域名管理里面添加域名解析<br>主机记录：www 用于www.strivezs.com的访问<br>主机记录：@ 用于strivezs.com的访问</li></ol><p><img src="https://gitee.com/zyp521/upload_image/raw/master/LdTBEN.png" alt="figure5"></p><ol start="6"><li>使用hexo c&amp;&amp;hexo g &amp;&amp; hexo d将项目重新部署到github上即可。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;将域名从服务器解析到github page上&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;首先停用掉自己之前的所使用的的子域名&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/zyp521/upload_image/raw/master/n2rrTi.
      
    
    </summary>
    
    
      <category term="文章页" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/"/>
    
      <category term="Github" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/Github/"/>
    
      <category term="域名" scheme="www.strivezs.com/categories/%E6%96%87%E7%AB%A0%E9%A1%B5/Github/%E5%9F%9F%E5%90%8D/"/>
    
    
      <category term="域名解析" scheme="www.strivezs.com/tags/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
    
      <category term="Github Page" scheme="www.strivezs.com/tags/Github-Page/"/>
    
  </entry>
  
</feed>
